{
    "0.14.4": {
        "skimage._build": {
            "cython": [
                "pyx_files",
                "working_path"
            ],
            "_md5sum": [
                "f"
            ],
            "_changed": [
                "filename"
            ],
            "process_tempita_pyx": [
                "fromfile"
            ]
        },
        "skimage.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage": {
            "_raise_build_error": [
                "e"
            ]
        },
        "skimage.novice": {},
        "skimage.novice._novice": {
            "open": [
                "path"
            ],
            "_verify_picture_index": [
                "index"
            ],
            "rgb_transpose": [
                "array"
            ],
            "array_to_xy_origin": [
                "image"
            ],
            "xy_to_array_origin": [
                "image"
            ],
            "Pixel": {
                "__init__": [
                    "self",
                    "pic",
                    "array",
                    "x",
                    "y",
                    "rgb",
                    "alpha"
                ],
                "x": [
                    "self"
                ],
                "y": [
                    "self"
                ],
                "red": [
                    "self",
                    "value"
                ],
                "green": [
                    "self",
                    "value"
                ],
                "blue": [
                    "self",
                    "value"
                ],
                "alpha": [
                    "self",
                    "value"
                ],
                "rgb": [
                    "self",
                    "value"
                ],
                "rgba": [
                    "self",
                    "value"
                ],
                "_validate": [
                    "self",
                    "value"
                ],
                "_setpixel": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "Picture": {
                "__init__": [
                    "self",
                    "path",
                    "array",
                    "xy_array"
                ],
                "from_size": [
                    "size",
                    "color"
                ],
                "array": [
                    "self",
                    "array"
                ],
                "xy_array": [
                    "self",
                    "array"
                ],
                "save": [
                    "self",
                    "path"
                ],
                "reset": [
                    "self"
                ],
                "path": [
                    "self"
                ],
                "modified": [
                    "self"
                ],
                "_array_modified": [
                    "self"
                ],
                "format": [
                    "self"
                ],
                "size": [
                    "self",
                    "value"
                ],
                "width": [
                    "self",
                    "value"
                ],
                "height": [
                    "self",
                    "value"
                ],
                "show": [
                    "self"
                ],
                "compare": [
                    "self"
                ],
                "_makepixel": [
                    "self",
                    "x",
                    "y"
                ],
                "_get_channel": [
                    "self",
                    "channel"
                ],
                "_set_channel": [
                    "self",
                    "channel",
                    "value"
                ],
                "red": [
                    "self",
                    "value"
                ],
                "green": [
                    "self",
                    "value"
                ],
                "blue": [
                    "self",
                    "value"
                ],
                "alpha": [
                    "self",
                    "value"
                ],
                "rgb": [
                    "self",
                    "value"
                ],
                "rgba": [
                    "self",
                    "value"
                ],
                "__iter__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "xy_index"
                ],
                "__setitem__": [
                    "self",
                    "xy_index",
                    "value"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__repr__": [
                    "self"
                ],
                "_repr_png_": [
                    "self"
                ],
                "_repr_jpeg_": [
                    "self"
                ],
                "_repr_image_format": [
                    "self",
                    "format_str"
                ]
            }
        },
        "skimage.novice.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.novice.tests.test_novice": {
            "_array_2d_to_RGBA": [
                "array"
            ],
            "test_xy_to_array_origin": [],
            "test_pic_info": [],
            "test_pixel_iteration": [],
            "test_modify": [],
            "test_pixel_rgb": [],
            "test_pixel_rgba": [],
            "test_pixel_rgb_float": [],
            "test_pixel_rgba_float": [],
            "test_modified_on_set": [],
            "test_modified_on_set_pixel": [],
            "test_reset": [],
            "test_update_on_save": [],
            "test_save_with_alpha_channel": [],
            "test_indexing": [],
            "test_picture_slice": [],
            "test_move_slice": [],
            "test_negative_index": [],
            "test_negative_slice": [],
            "test_getitem_with_step": [],
            "test_1d_getitem_raises": [],
            "test_3d_getitem_raises": [],
            "test_1d_setitem_raises": [],
            "test_3d_setitem_raises": [],
            "test_out_of_bounds_indexing": [],
            "test_pixel_rgb_raises": [],
            "test_pixel_red_raises": [],
            "test_pixel_green_raises": [],
            "test_pixel_blue_raises": [],
            "test_pixel_alpha_raises": []
        },
        "skimage._shared.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage._shared.testing": {
            "assert_less": [
                "a",
                "b",
                "msg"
            ],
            "assert_greater": [
                "a",
                "b",
                "msg"
            ],
            "doctest_skip_parser": [
                "func"
            ],
            "roundtrip": [
                "image",
                "plugin",
                "suffix"
            ],
            "color_check": [
                "plugin",
                "fmt"
            ],
            "mono_check": [
                "plugin",
                "fmt"
            ],
            "setup_test": [],
            "teardown_test": [],
            "test_parallel": [
                "num_threads"
            ]
        },
        "skimage._shared": {},
        "skimage._shared._warnings": {
            "warn": [
                "message",
                "category",
                "stacklevel"
            ],
            "all_warnings": [],
            "expected_warnings": [
                "matching"
            ]
        },
        "skimage._shared._tempfile": {
            "temporary_file": [
                "suffix"
            ]
        },
        "skimage._shared._geometry": {
            "polygon_clip": [
                "rp",
                "cp",
                "r0",
                "c0",
                "r1",
                "c1"
            ],
            "polygon_area": [
                "pr",
                "pc"
            ]
        },
        "skimage._shared.version_requirements": {
            "_check_version": [
                "actver",
                "version",
                "cmp_op"
            ],
            "get_module_version": [
                "module_name"
            ],
            "is_installed": [
                "name",
                "version"
            ],
            "require": [
                "name",
                "version"
            ],
            "get_module": [
                "module_name",
                "version"
            ]
        },
        "skimage._shared.utils": {
            "get_bound_method_class": [
                "m"
            ],
            "safe_as_int": [
                "val",
                "atol"
            ],
            "assert_nD": [
                "array",
                "ndim",
                "arg_name"
            ],
            "copy_func": [
                "f",
                "name"
            ],
            "check_random_state": [
                "seed"
            ],
            "convert_to_float": [
                "image",
                "preserve_range"
            ],
            "skimage_deprecation": {},
            "deprecated": {
                "__init__": [
                    "self",
                    "alt_func",
                    "behavior",
                    "removed_version"
                ],
                "__call__": [
                    "self",
                    "func"
                ]
            }
        },
        "skimage._shared.tests.test_geometry": {
            "test_polygon_area": [],
            "test_poly_clip": [],
            "test_hand_clip": []
        },
        "skimage._shared.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage._shared.tests.test_utils": {
            "test_assert_nD": [],
            "test_copyfunc": []
        },
        "skimage._shared.tests.test_safe_as_int": {
            "test_int_cast_not_possible": [],
            "test_int_cast_possible": []
        },
        "skimage._shared.tests.test_interpolation": {
            "test_coord_map": []
        },
        "skimage._shared.tests.test_testing": {
            "test_skipper": [],
            "test_test_parallel": []
        },
        "skimage._shared.tests.test_version_requirements": {
            "test_get_module_version": [],
            "test_is_installed": [],
            "test_require": [],
            "test_get_module": []
        },
        "skimage.io.util": {
            "is_url": [
                "filename"
            ],
            "file_or_url_context": [
                "resource_name"
            ]
        },
        "skimage.io.sift": {
            "_sift_read": [
                "filelike",
                "mode"
            ],
            "load_sift": [
                "f"
            ],
            "load_surf": [
                "f"
            ]
        },
        "skimage.io._image_stack": {
            "push": [
                "img"
            ],
            "pop": []
        },
        "skimage.io.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.io": {
            "_separator": [
                "char",
                "lengths"
            ],
            "_format_plugin_info_table": [
                "info_table",
                "column_lengths"
            ],
            "_update_doc": [
                "doc"
            ]
        },
        "skimage.io._io": {
            "imread": [
                "fname",
                "as_gray",
                "plugin",
                "flatten"
            ],
            "imread_collection": [
                "load_pattern",
                "conserve_memory",
                "plugin"
            ],
            "imsave": [
                "fname",
                "arr",
                "plugin"
            ],
            "imshow": [
                "arr",
                "plugin"
            ],
            "imshow_collection": [
                "ic",
                "plugin"
            ],
            "show": []
        },
        "skimage.io.collection": {
            "concatenate_images": [
                "ic"
            ],
            "alphanumeric_key": [
                "s"
            ],
            "imread_collection_wrapper": [
                "imread"
            ],
            "ImageCollection": {
                "__init__": [
                    "self",
                    "load_pattern",
                    "conserve_memory",
                    "load_func"
                ],
                "files": [
                    "self"
                ],
                "conserve_memory": [
                    "self"
                ],
                "_find_images": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "n"
                ],
                "_check_imgnum": [
                    "self",
                    "n"
                ],
                "__iter__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "reload": [
                    "self",
                    "n"
                ],
                "concatenate": [
                    "self"
                ]
            },
            "MultiImage": {
                "__init__": [
                    "self",
                    "filename",
                    "conserve_memory",
                    "dtype"
                ],
                "filename": [
                    "self"
                ]
            }
        },
        "skimage.io.manage_plugins": {
            "_clear_plugins": [],
            "_load_preferred_plugins": [],
            "_set_plugin": [
                "plugin_type",
                "plugin_list"
            ],
            "reset_plugins": [],
            "_parse_config_file": [
                "filename"
            ],
            "_scan_plugins": [],
            "find_available_plugins": [
                "loaded"
            ],
            "call_plugin": [
                "kind"
            ],
            "use_plugin": [
                "name",
                "kind"
            ],
            "_inject_imread_collection_if_needed": [
                "module"
            ],
            "_load": [
                "plugin"
            ],
            "plugin_info": [
                "plugin"
            ],
            "plugin_order": []
        },
        "skimage.io.tests.test_fits": {
            "test_fits_plugin_import": [],
            "teardown": [],
            "test_imread_MEF": [],
            "test_imread_simple": [],
            "test_imread_collection_single_MEF": [],
            "test_imread_collection_MEF_and_simple": [],
            "_same_ImageCollection": [
                "collection1",
                "collection2"
            ]
        },
        "skimage.io.tests.test_imageio": {
            "setup": [],
            "teardown": [],
            "test_imageio_flatten": [],
            "test_imageio_palette": [],
            "test_imageio_truncated_jpg": [],
            "TestSave": {
                "roundtrip": [
                    "self",
                    "x",
                    "scaling"
                ],
                "test_imsave_roundtrip": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_histograms": {
            "TestHistogram": {
                "test_basic": [
                    "self"
                ],
                "test_counts": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_io": {
            "test_stack_basic": [],
            "test_stack_non_array": [],
            "test_imread_url": []
        },
        "skimage.io.tests.test_pil": {
            "setup": [],
            "teardown": [],
            "setup_module": [
                "self"
            ],
            "test_png_round_trip": [],
            "test_img_as_gray_flatten": [],
            "test_imread_flatten": [],
            "test_imread_separate_channels": [],
            "test_imread_multipage_rgb_tif": [],
            "test_imread_palette": [],
            "test_imread_index_png_with_alpha": [],
            "test_palette_is_gray": [],
            "test_bilevel": [],
            "test_imread_uint16": [],
            "test_imread_truncated_jpg": [],
            "test_jpg_quality_arg": [],
            "test_imread_uint16_big_endian": [],
            "test_imsave_incorrect_dimension": [],
            "test_imsave_filelike": [],
            "test_imsave_boolean_input": [],
            "test_imexport_imimport": [],
            "test_all_color": [],
            "test_all_mono": [],
            "test_multi_page_gif": [],
            "test_cmyk": [],
            "test_extreme_palette": [],
            "TestSave": {
                "roundtrip_file": [
                    "self",
                    "x"
                ],
                "roundtrip_pil_image": [
                    "self",
                    "x"
                ],
                "verify_roundtrip": [
                    "self",
                    "dtype",
                    "x",
                    "y",
                    "scaling"
                ],
                "verify_imsave_roundtrip": [
                    "self",
                    "roundtrip_function"
                ],
                "test_imsave_roundtrip_file": [
                    "self"
                ],
                "test_imsave_roundtrip_pil_image": [
                    "self"
                ]
            }
        },
        "skimage.io.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.io.tests.test_colormixer": {
            "ColorMixerTest": {
                "setup": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_clip": [
                    "self"
                ],
                "test_negative": [
                    "self"
                ],
                "test_negative_clip": [
                    "self"
                ]
            },
            "TestColorMixerAdd": {},
            "TestColorMixerMul": {},
            "TestColorMixerBright": {
                "setup": [
                    "self"
                ],
                "test_brightness_pos": [
                    "self"
                ],
                "test_brightness_neg": [
                    "self"
                ],
                "test_brightness_pos_clip": [
                    "self"
                ],
                "test_brightness_neg_clip": [
                    "self"
                ]
            },
            "TestColorMixer": {
                "setup": [
                    "self"
                ],
                "test_sigmoid": [
                    "self"
                ],
                "test_gamma": [
                    "self"
                ],
                "test_rgb_2_hsv": [
                    "self"
                ],
                "test_hsv_2_rgb": [
                    "self"
                ],
                "test_hsv_add": [
                    "self"
                ],
                "test_hsv_add_clip_neg": [
                    "self"
                ],
                "test_hsv_add_clip_pos": [
                    "self"
                ],
                "test_hsv_mul": [
                    "self"
                ],
                "test_hsv_mul_clip_neg": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_plugin_util": {
            "TestPrepareForDisplay": {
                "test_basic": [
                    "self"
                ],
                "test_dtype": [
                    "self"
                ],
                "test_grey": [
                    "self"
                ],
                "test_color": [
                    "self"
                ],
                "test_alpha": [
                    "self"
                ],
                "test_wrong_dimensionality": [
                    "self"
                ],
                "test_wrong_depth": [
                    "self"
                ]
            },
            "TestWindowManager": {
                "setup": [
                    "self"
                ],
                "test_add_window": [
                    "self"
                ],
                "callback": [
                    "self"
                ],
                "test_callback": [
                    "self"
                ],
                "test_has_images": [
                    "self"
                ],
                "teardown": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_collection": {
            "test_string_split": [],
            "test_string_sort": [],
            "TestImageCollection": {
                "setUp": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_slicing": [
                    "self"
                ],
                "test_files_property": [
                    "self"
                ],
                "test_custom_load": [
                    "self"
                ],
                "test_custom_load_func": [
                    "self"
                ],
                "test_concatenate": [
                    "self"
                ],
                "test_concatentate_mismatched_image_shapes": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_sift": {
            "test_load_sift": [],
            "test_load_surf": []
        },
        "skimage.io.tests.test_tifffile": {
            "setup": [],
            "teardown": [],
            "test_imread_uint16": [],
            "test_imread_uint16_big_endian": [],
            "test_imread_multipage_rgb_tif": [],
            "TestSave": {
                "roundtrip": [
                    "self",
                    "dtype",
                    "x"
                ],
                "test_imsave_roundtrip": [
                    "self",
                    "shape",
                    "dtype"
                ]
            }
        },
        "skimage.io.tests.test_simpleitk": {
            "teardown": [],
            "setup_module": [
                "self"
            ],
            "test_imread_flatten": [],
            "test_bilevel": [],
            "test_imread_uint16": [],
            "test_imread_uint16_big_endian": [],
            "TestSave": {
                "roundtrip": [
                    "self",
                    "dtype",
                    "x"
                ],
                "test_imsave_roundtrip": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_plugin": {
            "teardown_module": [],
            "protect_preferred_plugins": [],
            "test_failed_use": [],
            "test_use_priority": [],
            "test_load_preferred_plugins_all": [],
            "test_load_preferred_plugins_imread": []
        },
        "skimage.io.tests.test_imread": {
            "setup": [],
            "teardown": [],
            "test_imread_flatten": [],
            "test_imread_palette": [],
            "test_imread_truncated_jpg": [],
            "test_bilevel": [],
            "TestSave": {
                "roundtrip": [
                    "self",
                    "x",
                    "scaling"
                ],
                "test_imsave_roundtrip": [
                    "self"
                ]
            }
        },
        "skimage.io.tests.test_mpl_imshow": {
            "setup": [],
            "n_subplots": [
                "ax_im"
            ],
            "test_uint8": [],
            "test_uint16": [],
            "test_float": [],
            "test_low_data_range": [],
            "test_outside_standard_range": [],
            "test_nonstandard_type": [],
            "test_signed_image": []
        },
        "skimage.io.tests.test_multi_image": {
            "TestMultiImage": {
                "setUp": [
                    "self"
                ],
                "test_shapes": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_slicing": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_files_property": [
                    "self"
                ],
                "test_conserve_memory_property": [
                    "self"
                ],
                "test_concatenate": [
                    "self"
                ]
            }
        },
        "skimage.io._plugins.util": {
            "prepare_for_display": [
                "npy_img"
            ],
            "histograms": [
                "image",
                "nbins"
            ],
            "GuiLockError": {
                "__init__": [
                    "self",
                    "msg"
                ],
                "__str__": [
                    "self"
                ]
            },
            "WindowManager": {
                "__init__": [
                    "self"
                ],
                "_check_locked": [
                    "self"
                ],
                "_exec_callback": [
                    "self"
                ],
                "acquire": [
                    "self",
                    "kit"
                ],
                "_release": [
                    "self",
                    "kit"
                ],
                "add_window": [
                    "self",
                    "win"
                ],
                "remove_window": [
                    "self",
                    "win"
                ],
                "register_callback": [
                    "self",
                    "cb"
                ],
                "has_windows": [
                    "self"
                ]
            },
            "ImgThread": {
                "__init__": [
                    "self",
                    "func"
                ],
                "run": [
                    "self"
                ]
            },
            "ThreadDispatch": {
                "__init__": [
                    "self",
                    "img",
                    "stateimg",
                    "func"
                ],
                "run": [
                    "self"
                ]
            },
            "ColorMixer": {
                "__init__": [
                    "self",
                    "img"
                ],
                "get_stateimage": [
                    "self"
                ],
                "commit_changes": [
                    "self"
                ],
                "revert": [
                    "self"
                ],
                "set_to_stateimg": [
                    "self"
                ],
                "add": [
                    "self",
                    "channel",
                    "ammount"
                ],
                "multiply": [
                    "self",
                    "channel",
                    "ammount"
                ],
                "brightness": [
                    "self",
                    "factor",
                    "offset"
                ],
                "sigmoid_gamma": [
                    "self",
                    "alpha",
                    "beta"
                ],
                "gamma": [
                    "self",
                    "gamma"
                ],
                "hsv_add": [
                    "self",
                    "h_amt",
                    "s_amt",
                    "v_amt"
                ],
                "hsv_multiply": [
                    "self",
                    "h_amt",
                    "s_amt",
                    "v_amt"
                ],
                "rgb_2_hsv_pixel": [
                    "self",
                    "R",
                    "G",
                    "B"
                ],
                "hsv_2_rgb_pixel": [
                    "self",
                    "H",
                    "S",
                    "V"
                ]
            }
        },
        "skimage.io._plugins.qt_plugin": {
            "imread": [
                "filename"
            ],
            "imshow": [
                "arr",
                "fancy"
            ],
            "_app_show": [],
            "imsave": [
                "filename",
                "img",
                "format_str"
            ],
            "_is_filelike": [
                "possible_filelike"
            ],
            "ImageLabel": {
                "__init__": [
                    "self",
                    "parent",
                    "arr"
                ],
                "resizeEvent": [
                    "self",
                    "evt"
                ]
            },
            "ImageWindow": {
                "__init__": [
                    "self",
                    "arr",
                    "mgr"
                ],
                "closeEvent": [
                    "self",
                    "event"
                ]
            }
        },
        "skimage.io._plugins.fits_plugin": {
            "imread": [
                "fname",
                "dtype"
            ],
            "imread_collection": [
                "load_pattern",
                "conserve_memory"
            ],
            "FITSFactory": [
                "image_ext"
            ]
        },
        "skimage.io._plugins": {},
        "skimage.io._plugins.imageio_plugin": {},
        "skimage.io._plugins.gdal_plugin": {
            "imread": [
                "fname",
                "dtype"
            ]
        },
        "skimage.io._plugins.skivi": {
            "ImageLabel": {
                "__init__": [
                    "self",
                    "parent",
                    "arr"
                ],
                "mouseMoveEvent": [
                    "self",
                    "evt"
                ],
                "resizeEvent": [
                    "self",
                    "evt"
                ],
                "update_image": [
                    "self"
                ]
            },
            "RGBHSVDisplay": {
                "__init__": [
                    "self"
                ],
                "update_vals": [
                    "self",
                    "data"
                ]
            },
            "SkiviImageWindow": {
                "__init__": [
                    "self",
                    "arr",
                    "mgr"
                ],
                "closeEvent": [
                    "self",
                    "event"
                ],
                "update_histograms": [
                    "self"
                ],
                "refresh_image": [
                    "self"
                ],
                "scale_mouse_pos": [
                    "self",
                    "x",
                    "y"
                ],
                "label_mouseMoveEvent": [
                    "self",
                    "evt"
                ],
                "save_to_stack": [
                    "self"
                ],
                "save_to_file": [
                    "self"
                ]
            }
        },
        "skimage.io._plugins.matplotlib_plugin": {
            "_get_image_properties": [
                "image"
            ],
            "_raise_warnings": [
                "image_properties"
            ],
            "_get_display_range": [
                "image"
            ],
            "imshow": [
                "image",
                "ax",
                "show_cbar"
            ],
            "imshow_collection": [
                "ic"
            ],
            "_app_show": []
        },
        "skimage.io._plugins.q_color_mixer": {
            "IntelligentSlider": {
                "__init__": [
                    "self",
                    "name",
                    "a",
                    "b",
                    "callback"
                ],
                "slider_changed": [
                    "self",
                    "val"
                ],
                "set_conv_fac": [
                    "self",
                    "a",
                    "b"
                ],
                "set_value": [
                    "self",
                    "val"
                ],
                "val": [
                    "self"
                ]
            },
            "MixerPanel": {
                "__init__": [
                    "self",
                    "img"
                ],
                "set_callback": [
                    "self",
                    "callback"
                ],
                "combo_box_changed": [
                    "self",
                    "index"
                ],
                "rgb_radio_changed": [
                    "self"
                ],
                "hsv_radio_changed": [
                    "self"
                ],
                "reset": [
                    "self"
                ],
                "reset_sliders": [
                    "self"
                ],
                "rgb_changed": [
                    "self",
                    "name",
                    "val"
                ],
                "hsv_changed": [
                    "self",
                    "name",
                    "val"
                ],
                "bright_changed": [
                    "self",
                    "name",
                    "val"
                ],
                "gamma_changed": [
                    "self",
                    "name",
                    "val"
                ],
                "sig_gamma_changed": [
                    "self",
                    "name",
                    "val"
                ],
                "commit_changes": [
                    "self"
                ],
                "revert_changes": [
                    "self"
                ]
            }
        },
        "skimage.io._plugins.gtk_plugin": {},
        "skimage.io._plugins.imread_plugin": {
            "imread": [
                "fname",
                "dtype"
            ],
            "imsave": [
                "fname",
                "arr",
                "format_str"
            ]
        },
        "skimage.io._plugins.q_histogram": {
            "ColorHistogram": {
                "__init__": [
                    "self",
                    "counts",
                    "colormap"
                ],
                "_validate_input": [
                    "self",
                    "counts",
                    "colormap"
                ],
                "paintEvent": [
                    "self",
                    "evt"
                ],
                "update_hist": [
                    "self",
                    "counts",
                    "cmap"
                ]
            },
            "QuadHistogram": {
                "__init__": [
                    "self",
                    "img",
                    "layout",
                    "order"
                ],
                "update_hists": [
                    "self",
                    "img"
                ]
            }
        },
        "skimage.io._plugins.simpleitk_plugin": {
            "imread": [
                "fname"
            ],
            "imsave": [
                "fname",
                "arr"
            ]
        },
        "skimage.io._plugins.tifffile_plugin": {
            "imread": [
                "fname",
                "dtype"
            ]
        },
        "skimage.io._plugins.pil_plugin": {
            "imread": [
                "fname",
                "dtype",
                "img_num"
            ],
            "pil_to_ndarray": [
                "image",
                "dtype",
                "img_num"
            ],
            "_palette_is_grayscale": [
                "pil_image"
            ],
            "ndarray_to_pil": [
                "arr",
                "format_str"
            ],
            "imsave": [
                "fname",
                "arr",
                "format_str"
            ]
        },
        "skimage.graph.spath": {
            "shortest_path": [
                "arr",
                "reach",
                "axis",
                "output_indexlist"
            ]
        },
        "skimage.graph.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.graph": {},
        "skimage.graph.mcp": {
            "route_through_array": [
                "array",
                "start",
                "end",
                "fully_connected",
                "geometric"
            ]
        },
        "skimage.graph.tests.test_heap": {
            "test_heap": [],
            "_test_heap": [
                "n",
                "fast_update"
            ]
        },
        "skimage.graph.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.graph.tests.test_connect": {
            "test_connections": [],
            "MCP": {
                "_reset": [
                    "self"
                ],
                "create_connection": [
                    "self",
                    "id1",
                    "id2",
                    "pos1",
                    "pos2",
                    "cost1",
                    "cost2"
                ]
            }
        },
        "skimage.graph.tests.test_anisotropy": {
            "test_anisotropy": []
        },
        "skimage.graph.tests.test_spath": {
            "test_basic": [],
            "test_reach": [],
            "test_non_square": []
        },
        "skimage.graph.tests.test_flexible": {
            "test_flexible": [],
            "FlexibleMCP": {
                "_reset": [
                    "self"
                ],
                "goal_reached": [
                    "self",
                    "index",
                    "cumcost"
                ],
                "travel_cost": [
                    "self",
                    "index",
                    "new_index",
                    "offset_length"
                ],
                "examine_neighbor": [
                    "self",
                    "index",
                    "new_index",
                    "offset_length"
                ],
                "update_node": [
                    "self",
                    "index",
                    "new_index",
                    "offset_length"
                ]
            }
        },
        "skimage.graph.tests.test_mcp": {
            "test_basic": [],
            "test_neg_inf": [],
            "test_route": [],
            "test_no_diagonal": [],
            "test_offsets": [],
            "test_crashing": [
                "shape"
            ],
            "_test_random": [
                "shape"
            ]
        },
        "skimage.restoration._denoise": {
            "_gaussian_weight": [
                "sigma_sqr",
                "value",
                "dtype"
            ],
            "_compute_color_lut": [
                "bins",
                "sigma",
                "max_value",
                "dtype"
            ],
            "_compute_range_lut": [
                "win_size",
                "sigma",
                "dtype"
            ],
            "denoise_bilateral": [
                "image",
                "win_size",
                "sigma_color",
                "sigma_spatial",
                "bins",
                "mode",
                "cval",
                "multichannel"
            ],
            "denoise_tv_bregman": [
                "image",
                "weight",
                "max_iter",
                "eps",
                "isotropic"
            ],
            "_denoise_tv_chambolle_nd": [
                "image",
                "weight",
                "eps",
                "n_iter_max"
            ],
            "denoise_tv_chambolle": [
                "image",
                "weight",
                "eps",
                "n_iter_max",
                "multichannel"
            ],
            "_bayes_thresh": [
                "details",
                "var"
            ],
            "_universal_thresh": [
                "img",
                "sigma"
            ],
            "_sigma_est_dwt": [
                "detail_coeffs",
                "distribution"
            ],
            "_wavelet_threshold": [
                "image",
                "wavelet",
                "method",
                "threshold",
                "sigma",
                "mode",
                "wavelet_levels"
            ],
            "denoise_wavelet": [
                "image",
                "sigma",
                "wavelet",
                "mode",
                "wavelet_levels",
                "multichannel",
                "convert2ycbcr",
                "method"
            ],
            "estimate_sigma": [
                "image",
                "average_sigmas",
                "multichannel"
            ]
        },
        "skimage.restoration.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.restoration.deconvolution": {
            "wiener": [
                "image",
                "psf",
                "balance",
                "reg",
                "is_real",
                "clip"
            ],
            "unsupervised_wiener": [
                "image",
                "psf",
                "reg",
                "user_params",
                "is_real",
                "clip"
            ],
            "richardson_lucy": [
                "image",
                "psf",
                "iterations",
                "clip"
            ]
        },
        "skimage.restoration.uft": {
            "ufftn": [
                "inarray",
                "dim"
            ],
            "uifftn": [
                "inarray",
                "dim"
            ],
            "urfftn": [
                "inarray",
                "dim"
            ],
            "uirfftn": [
                "inarray",
                "dim",
                "shape"
            ],
            "ufft2": [
                "inarray"
            ],
            "uifft2": [
                "inarray"
            ],
            "urfft2": [
                "inarray"
            ],
            "uirfft2": [
                "inarray",
                "shape"
            ],
            "image_quad_norm": [
                "inarray"
            ],
            "ir2tf": [
                "imp_resp",
                "shape",
                "dim",
                "is_real"
            ],
            "laplacian": [
                "ndim",
                "shape",
                "is_real"
            ]
        },
        "skimage.restoration": {},
        "skimage.restoration.inpaint": {
            "_get_neighborhood": [
                "nd_idx",
                "radius",
                "nd_shape"
            ],
            "_inpaint_biharmonic_single_channel": [
                "mask",
                "out",
                "limits"
            ],
            "inpaint_biharmonic": [
                "image",
                "mask",
                "multichannel"
            ]
        },
        "skimage.restoration.non_local_means": {
            "denoise_nl_means": [
                "image",
                "patch_size",
                "patch_distance",
                "h",
                "multichannel",
                "fast_mode",
                "sigma"
            ]
        },
        "skimage.restoration._cycle_spin": {
            "_generate_shifts": [
                "ndim",
                "multichannel",
                "max_shifts",
                "shift_steps"
            ],
            "_roll_axes": [
                "x",
                "rolls",
                "axes"
            ],
            "cycle_spin": [
                "x",
                "func",
                "max_shifts",
                "shift_steps",
                "num_workers",
                "multichannel",
                "func_kw"
            ]
        },
        "skimage.restoration.unwrap": {
            "unwrap_phase": [
                "image",
                "wrap_around",
                "seed"
            ]
        },
        "skimage.restoration.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.restoration.tests.test_denoise": {
            "test_denoise_tv_chambolle_2d": [],
            "test_denoise_tv_chambolle_multichannel": [],
            "test_denoise_tv_chambolle_float_result_range": [],
            "test_denoise_tv_chambolle_3d": [],
            "test_denoise_tv_chambolle_1d": [],
            "test_denoise_tv_chambolle_4d": [],
            "test_denoise_tv_chambolle_weighting": [],
            "test_denoise_tv_bregman_2d": [],
            "test_denoise_tv_bregman_float_result_range": [],
            "test_denoise_tv_bregman_3d": [],
            "test_denoise_bilateral_2d": [],
            "test_denoise_bilateral_types": [
                "dtype"
            ],
            "test_denoise_bregman_types": [
                "dtype"
            ],
            "test_denoise_bilateral_zeros": [],
            "test_denoise_bilateral_constant": [],
            "test_denoise_bilateral_color": [],
            "test_denoise_bilateral_3d_grayscale": [],
            "test_denoise_bilateral_3d_multichannel": [],
            "test_denoise_bilateral_multidimensional": [],
            "test_denoise_bilateral_nan": [],
            "test_denoise_nl_means_2d": [],
            "test_denoise_nl_means_2d_multichannel": [],
            "test_denoise_nl_means_3d": [],
            "test_denoise_nl_means_multichannel": [],
            "test_denoise_nl_means_wrong_dimension": [],
            "test_no_denoising_for_small_h": [],
            "test_wavelet_denoising": [],
            "test_wavelet_threshold": [],
            "test_wavelet_denoising_nd": [],
            "test_wavelet_invalid_method": [],
            "test_wavelet_denoising_levels": [],
            "test_estimate_sigma_gray": [],
            "test_estimate_sigma_masked_image": [],
            "test_estimate_sigma_color": [],
            "test_wavelet_denoising_args": [],
            "test_multichannel_warnings": [],
            "test_cycle_spinning_multichannel": [],
            "test_cycle_spinning_num_workers": []
        },
        "skimage.restoration.tests.test_restoration": {
            "test_wiener": [],
            "test_unsupervised_wiener": [],
            "test_image_shape": [],
            "test_richardson_lucy": []
        },
        "skimage.restoration.tests.test_unwrap": {
            "assert_phase_almost_equal": [
                "a",
                "b"
            ],
            "check_unwrap": [
                "image",
                "mask"
            ],
            "test_unwrap_1d": [],
            "test_unwrap_2d": [
                "check_with_mask"
            ],
            "test_unwrap_3d": [
                "check_with_mask"
            ],
            "check_wrap_around": [
                "ndim",
                "axis"
            ],
            "test_wrap_around": [
                "ndim",
                "axis"
            ],
            "test_mask": [],
            "test_invalid_input": [],
            "test_unwrap_3d_middle_wrap_around": [],
            "test_unwrap_2d_compressed_mask": [],
            "test_unwrap_2d_all_masked": [],
            "test_unwrap_3d_all_masked": []
        },
        "skimage.restoration.tests.test_inpaint": {
            "test_inpaint_biharmonic_2d": [],
            "test_inpaint_biharmonic_3d": [],
            "test_invalid_input": []
        },
        "skimage.feature.template": {
            "_window_sum_2d": [
                "image",
                "window_shape"
            ],
            "_window_sum_3d": [
                "image",
                "window_shape"
            ],
            "match_template": [
                "image",
                "template",
                "pad_input",
                "mode",
                "constant_values"
            ]
        },
        "skimage.feature.util": {
            "plot_matches": [
                "ax",
                "image1",
                "image2",
                "keypoints1",
                "keypoints2",
                "matches",
                "keypoints_color",
                "matches_color",
                "only_matches",
                "alignment"
            ],
            "_prepare_grayscale_input_2D": [
                "image"
            ],
            "_mask_border_keypoints": [
                "image_shape",
                "keypoints",
                "distance"
            ],
            "FeatureDetector": {
                "__init__": [
                    "self"
                ],
                "detect": [
                    "self",
                    "image"
                ]
            },
            "DescriptorExtractor": {
                "__init__": [
                    "self"
                ],
                "extract": [
                    "self",
                    "image",
                    "keypoints"
                ]
            }
        },
        "skimage.feature.match": {
            "match_descriptors": [
                "descriptors1",
                "descriptors2",
                "metric",
                "p",
                "max_distance",
                "cross_check",
                "max_ratio"
            ]
        },
        "skimage.feature.haar": {
            "_validate_feature_type": [
                "feature_type"
            ],
            "haar_like_feature_coord": [
                "width",
                "height",
                "feature_type"
            ],
            "haar_like_feature": [
                "int_image",
                "r",
                "c",
                "width",
                "height",
                "feature_type",
                "feature_coord"
            ],
            "draw_haar_like_feature": [
                "image",
                "r",
                "c",
                "width",
                "height",
                "feature_coord",
                "color_positive_block",
                "color_negative_block",
                "alpha",
                "max_n_features",
                "random_state"
            ]
        },
        "skimage.feature.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.feature.corner": {
            "_compute_derivatives": [
                "image",
                "mode",
                "cval"
            ],
            "structure_tensor": [
                "image",
                "sigma",
                "mode",
                "cval"
            ],
            "hessian_matrix": [
                "image",
                "sigma",
                "mode",
                "cval",
                "order"
            ],
            "_hessian_matrix_image": [
                "H_elems"
            ],
            "hessian_matrix_det": [
                "image",
                "sigma",
                "approximate"
            ],
            "_image_orthogonal_matrix22_eigvals": [
                "M00",
                "M01",
                "M11"
            ],
            "structure_tensor_eigvals": [
                "Axx",
                "Axy",
                "Ayy"
            ],
            "hessian_matrix_eigvals": [
                "H_elems",
                "Hxy",
                "Hyy",
                "Hxx"
            ],
            "shape_index": [
                "image",
                "sigma",
                "mode",
                "cval"
            ],
            "corner_kitchen_rosenfeld": [
                "image",
                "mode",
                "cval"
            ],
            "corner_harris": [
                "image",
                "method",
                "k",
                "eps",
                "sigma"
            ],
            "corner_shi_tomasi": [
                "image",
                "sigma"
            ],
            "corner_foerstner": [
                "image",
                "sigma"
            ],
            "corner_fast": [
                "image",
                "n",
                "threshold"
            ],
            "corner_subpix": [
                "image",
                "corners",
                "window_size",
                "alpha"
            ],
            "corner_peaks": [
                "image",
                "min_distance",
                "threshold_abs",
                "threshold_rel",
                "exclude_border",
                "indices",
                "num_peaks",
                "footprint",
                "labels"
            ],
            "corner_moravec": [
                "image",
                "window_size"
            ],
            "corner_orientations": [
                "image",
                "corners",
                "mask"
            ]
        },
        "skimage.feature": {},
        "skimage.feature.register_translation": {
            "_upsampled_dft": [
                "data",
                "upsampled_region_size",
                "upsample_factor",
                "axis_offsets"
            ],
            "_compute_phasediff": [
                "cross_correlation_max"
            ],
            "_compute_error": [
                "cross_correlation_max",
                "src_amp",
                "target_amp"
            ],
            "register_translation": [
                "src_image",
                "target_image",
                "upsample_factor",
                "space"
            ]
        },
        "skimage.feature._daisy": {
            "daisy": [
                "image",
                "step",
                "radius",
                "rings",
                "histograms",
                "orientations",
                "normalization",
                "sigmas",
                "ring_radii",
                "visualize"
            ]
        },
        "skimage.feature.censure": {
            "_filter_image": [
                "image",
                "min_scale",
                "max_scale",
                "mode"
            ],
            "_octagon_kernel": [
                "mo",
                "no",
                "mi",
                "ni"
            ],
            "_star_kernel": [
                "m",
                "n"
            ],
            "_suppress_lines": [
                "feature_mask",
                "image",
                "sigma",
                "line_threshold"
            ],
            "CENSURE": {
                "__init__": [
                    "self",
                    "min_scale",
                    "max_scale",
                    "mode",
                    "non_max_threshold",
                    "line_threshold"
                ],
                "detect": [
                    "self",
                    "image"
                ]
            }
        },
        "skimage.feature.brief": {
            "BRIEF": {
                "__init__": [
                    "self",
                    "descriptor_size",
                    "patch_size",
                    "mode",
                    "sigma",
                    "sample_seed"
                ],
                "extract": [
                    "self",
                    "image",
                    "keypoints"
                ]
            }
        },
        "skimage.feature.blob": {
            "_compute_disk_overlap": [
                "d",
                "r1",
                "r2"
            ],
            "_compute_sphere_overlap": [
                "d",
                "r1",
                "r2"
            ],
            "_blob_overlap": [
                "blob1",
                "blob2"
            ],
            "_prune_blobs": [
                "blobs_array",
                "overlap"
            ],
            "blob_dog": [
                "image",
                "min_sigma",
                "max_sigma",
                "sigma_ratio",
                "threshold",
                "overlap"
            ],
            "blob_log": [
                "image",
                "min_sigma",
                "max_sigma",
                "num_sigma",
                "threshold",
                "overlap",
                "log_scale"
            ],
            "blob_doh": [
                "image",
                "min_sigma",
                "max_sigma",
                "num_sigma",
                "threshold",
                "overlap",
                "log_scale"
            ]
        },
        "skimage.feature.orb": {
            "ORB": {
                "__init__": [
                    "self",
                    "downscale",
                    "n_scales",
                    "n_keypoints",
                    "fast_n",
                    "fast_threshold",
                    "harris_k"
                ],
                "_build_pyramid": [
                    "self",
                    "image"
                ],
                "_detect_octave": [
                    "self",
                    "octave_image"
                ],
                "detect": [
                    "self",
                    "image"
                ],
                "_extract_octave": [
                    "self",
                    "octave_image",
                    "keypoints",
                    "orientations"
                ],
                "extract": [
                    "self",
                    "image",
                    "keypoints",
                    "scales",
                    "orientations"
                ],
                "detect_and_extract": [
                    "self",
                    "image"
                ]
            }
        },
        "skimage.feature._canny": {
            "smooth_with_function_and_mask": [
                "image",
                "function",
                "mask"
            ],
            "canny": [
                "image",
                "sigma",
                "low_threshold",
                "high_threshold",
                "mask",
                "use_quantiles"
            ]
        },
        "skimage.feature.texture": {
            "greycomatrix": [
                "image",
                "distances",
                "angles",
                "levels",
                "symmetric",
                "normed"
            ],
            "greycoprops": [
                "P",
                "prop"
            ],
            "local_binary_pattern": [
                "image",
                "P",
                "R",
                "method"
            ],
            "multiblock_lbp": [
                "int_image",
                "r",
                "c",
                "width",
                "height"
            ],
            "draw_multiblock_lbp": [
                "image",
                "r",
                "c",
                "width",
                "height",
                "lbp_code",
                "color_greater_block",
                "color_less_block",
                "alpha"
            ]
        },
        "skimage.feature.peak": {
            "_get_high_intensity_peaks": [
                "image",
                "mask",
                "num_peaks"
            ],
            "peak_local_max": [
                "image",
                "min_distance",
                "threshold_abs",
                "threshold_rel",
                "exclude_border",
                "indices",
                "num_peaks",
                "footprint",
                "labels",
                "num_peaks_per_label"
            ],
            "_prominent_peaks": [
                "image",
                "min_xdistance",
                "min_ydistance",
                "threshold",
                "num_peaks"
            ]
        },
        "skimage.feature._hog": {
            "_hog_normalize_block": [
                "block",
                "method",
                "eps"
            ],
            "_hog_channel_gradient": [
                "channel"
            ],
            "hog": [
                "image",
                "orientations",
                "pixels_per_cell",
                "cells_per_block",
                "block_norm",
                "visualize",
                "visualise",
                "transform_sqrt",
                "feature_vector",
                "multichannel"
            ]
        },
        "skimage.feature.tests.test_daisy": {
            "test_daisy_color_image_unsupported_error": [],
            "test_daisy_desc_dims": [],
            "test_descs_shape": [],
            "test_daisy_sigmas_and_radii": [],
            "test_daisy_incompatible_sigmas_and_radii": [],
            "test_daisy_normalization": [],
            "test_daisy_visualization": []
        },
        "skimage.feature.tests.test_corner": {
            "im3d": [],
            "test_structure_tensor": [],
            "test_hessian_matrix": [],
            "test_hessian_matrix_3d": [],
            "test_structure_tensor_eigvals": [],
            "test_hessian_matrix_eigvals": [],
            "test_hessian_matrix_eigvals_3d": [
                "im3d"
            ],
            "test_hessian_matrix_det": [],
            "test_hessian_matrix_det_3d": [
                "im3d"
            ],
            "test_shape_index": [],
            "test_square_image": [],
            "test_noisy_square_image": [],
            "test_squared_dot": [],
            "test_rotated_img": [],
            "test_subpix_edge": [],
            "test_subpix_dot": [],
            "test_subpix_no_class": [],
            "test_subpix_border": [],
            "test_num_peaks": [],
            "test_corner_peaks": [],
            "test_blank_image_nans": [],
            "test_corner_fast_image_unsupported_error": [],
            "test_corner_fast_astronaut": [],
            "test_corner_orientations_image_unsupported_error": [],
            "test_corner_orientations_even_shape_error": [],
            "test_corner_orientations_astronaut": [],
            "test_corner_orientations_square": []
        },
        "skimage.feature.tests.test_canny": {
            "TestCanny": {
                "test_00_00_zeros": [
                    "self"
                ],
                "test_00_01_zeros_mask": [
                    "self"
                ],
                "test_01_01_circle": [
                    "self"
                ],
                "test_01_02_circle_with_noise": [
                    "self"
                ],
                "test_image_shape": [
                    "self"
                ],
                "test_mask_none": [
                    "self"
                ],
                "test_use_quantiles": [
                    "self"
                ],
                "test_invalid_use_quantiles": [
                    "self"
                ]
            }
        },
        "skimage.feature.tests.test_util": {
            "test_feature_detector": [],
            "test_descriptor_extractor": [],
            "test_prepare_grayscale_input_2D": [],
            "test_mask_border_keypoints": [],
            "test_plot_matches": []
        },
        "skimage.feature.tests.test_register_translation": {
            "test_correlation": [],
            "test_subpixel_precision": [],
            "test_real_input": [],
            "test_size_one_dimension_input": [],
            "test_3d_input": [],
            "test_unknown_space_input": [],
            "test_wrong_input": [],
            "test_mismatch_upsampled_region_size": [],
            "test_mismatch_offsets_size": []
        },
        "skimage.feature.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.feature.tests.test_censure": {
            "test_censure_on_rectangular_images": [],
            "test_keypoints_censure_color_image_unsupported_error": [],
            "test_keypoints_censure_mode_validity_error": [],
            "test_keypoints_censure_scale_range_error": [],
            "test_keypoints_censure_moon_image_dob": [],
            "test_keypoints_censure_moon_image_octagon": [],
            "test_keypoints_censure_moon_image_star": []
        },
        "skimage.feature.tests.test_match": {
            "test_binary_descriptors_unequal_descriptor_sizes_error": [],
            "test_binary_descriptors": [],
            "test_binary_descriptors_rotation_crosscheck_false": [],
            "test_binary_descriptors_rotation_crosscheck_true": [],
            "test_max_distance": [],
            "test_max_ratio": []
        },
        "skimage.feature.tests.test_template": {
            "test_template": [],
            "test_normalization": [],
            "test_no_nans": [],
            "test_switched_arguments": [],
            "test_pad_input": [],
            "test_3d": [],
            "test_3d_pad_input": [],
            "test_padding_reflect": [],
            "test_wrong_input": [],
            "test_bounding_values": []
        },
        "skimage.feature.tests.test_brief": {
            "test_color_image_unsupported_error": [],
            "test_normal_mode": [],
            "test_uniform_mode": [],
            "test_unsupported_mode": [],
            "test_border": []
        },
        "skimage.feature.tests.test_hog": {
            "test_hog_output_size": [],
            "test_hog_output_correctness_l1_norm": [],
            "test_hog_output_correctness_l2hys_norm": [],
            "test_hog_image_size_cell_size_mismatch": [],
            "test_hog_basic_orientations_and_data_types": [],
            "test_hog_orientations_circle": [],
            "test_hog_visualization_orientation": [],
            "test_hog_block_normalization_incorrect_error": [],
            "test_hog_incorrect_dimensions": [
                "shape",
                "multichannel"
            ],
            "test_hog_output_equivariance_multichannel": []
        },
        "skimage.feature.tests.test_haar": {
            "test_haar_like_feature_error": [],
            "test_haar_like_feature": [
                "feature_type",
                "shape_feature",
                "expected_feature_value",
                "dtype"
            ],
            "test_haar_like_feature_fused_type": [
                "dtype",
                "feature_type"
            ],
            "test_haar_like_feature_list": [],
            "test_haar_like_feature_precomputed": [
                "feature_type"
            ],
            "test_haar_like_feature_coord": [
                "feature_type",
                "height",
                "width",
                "expected_coord"
            ],
            "test_draw_haar_like_feature": [
                "max_n_features",
                "nnz_values"
            ]
        },
        "skimage.feature.tests.test_blob": {
            "test_blob_dog": [],
            "test_blob_log": [],
            "test_blob_doh": [],
            "test_blob_overlap": [],
            "test_no_blob": []
        },
        "skimage.feature.tests.test_orb": {
            "test_keypoints_orb_desired_no_of_keypoints": [],
            "test_keypoints_orb_less_than_desired_no_of_keypoints": [],
            "test_descriptor_orb": [],
            "test_no_descriptors_extracted_orb": []
        },
        "skimage.feature.tests.test_texture": {
            "TestGLCM": {
                "setup": [
                    "self"
                ],
                "test_output_angles": [
                    "self"
                ],
                "test_output_symmetric_1": [
                    "self"
                ],
                "test_error_raise_float": [
                    "self"
                ],
                "test_error_raise_int_types": [
                    "self"
                ],
                "test_error_raise_negative": [
                    "self"
                ],
                "test_error_raise_levels_smaller_max": [
                    "self"
                ],
                "test_image_data_types": [
                    "self"
                ],
                "test_output_distance": [
                    "self"
                ],
                "test_output_combo": [
                    "self"
                ],
                "test_output_empty": [
                    "self"
                ],
                "test_normed_symmetric": [
                    "self"
                ],
                "test_contrast": [
                    "self"
                ],
                "test_dissimilarity": [
                    "self"
                ],
                "test_dissimilarity_2": [
                    "self"
                ],
                "test_invalid_property": [
                    "self"
                ],
                "test_homogeneity": [
                    "self"
                ],
                "test_energy": [
                    "self"
                ],
                "test_correlation": [
                    "self"
                ],
                "test_uniform_properties": [
                    "self"
                ]
            },
            "TestLBP": {
                "setup": [
                    "self"
                ],
                "test_default": [
                    "self"
                ],
                "test_ror": [
                    "self"
                ],
                "test_uniform": [
                    "self"
                ],
                "test_var": [
                    "self"
                ],
                "test_nri_uniform": [
                    "self"
                ]
            },
            "TestMBLBP": {
                "test_single_mblbp": [
                    "self"
                ]
            }
        },
        "skimage.feature.tests.test_peak": {
            "TestPeakLocalMax": {
                "test_trivial_case": [
                    "self"
                ],
                "test_noisy_peaks": [
                    "self"
                ],
                "test_relative_threshold": [
                    "self"
                ],
                "test_absolute_threshold": [
                    "self"
                ],
                "test_constant_image": [
                    "self"
                ],
                "test_flat_peak": [
                    "self"
                ],
                "test_sorted_peaks": [
                    "self"
                ],
                "test_num_peaks": [
                    "self"
                ],
                "test_num_peaks_and_labels": [
                    "self"
                ],
                "test_num_peaks_tot_vs_labels_4quadrants": [
                    "self"
                ],
                "test_num_peaks3D": [
                    "self"
                ],
                "test_reorder_labels": [
                    "self"
                ],
                "test_indices_with_labels": [
                    "self"
                ],
                "test_ndarray_indices_false": [
                    "self"
                ],
                "test_ndarray_exclude_border": [
                    "self"
                ],
                "test_empty": [
                    "self"
                ],
                "test_one_point": [
                    "self"
                ],
                "test_adjacent_and_same": [
                    "self"
                ],
                "test_adjacent_and_different": [
                    "self"
                ],
                "test_not_adjacent_and_different": [
                    "self"
                ],
                "test_two_objects": [
                    "self"
                ],
                "test_adjacent_different_objects": [
                    "self"
                ],
                "test_four_quadrants": [
                    "self"
                ],
                "test_disk": [
                    "self"
                ],
                "test_3D": [
                    "self"
                ],
                "test_4D": [
                    "self"
                ],
                "test_threshold_rel_default": [
                    "self"
                ]
            },
            "TestProminentPeaks": {
                "test_isolated_peaks": [
                    "self"
                ],
                "test_threshold": [
                    "self"
                ],
                "test_peaks_in_contact": [
                    "self"
                ],
                "test_input_labels_unmodified": [
                    "self"
                ]
            }
        },
        "skimage.viewer": {},
        "skimage.viewer.qt": {},
        "skimage.viewer.viewers": {},
        "skimage.viewer.viewers.core": {
            "mpl_image_to_rgba": [
                "mpl_image"
            ],
            "ImageViewer": {
                "__init__": [
                    "self",
                    "image",
                    "useblit"
                ],
                "__add__": [
                    "self",
                    "plugin"
                ],
                "_add_widget_size": [
                    "self",
                    "widget",
                    "dimension"
                ],
                "open_file": [
                    "self",
                    "filename"
                ],
                "update_image": [
                    "self",
                    "image"
                ],
                "_update_original_image": [
                    "self",
                    "image"
                ],
                "save_to_file": [
                    "self",
                    "filename"
                ],
                "closeEvent": [
                    "self",
                    "event"
                ],
                "_show": [
                    "self",
                    "x"
                ],
                "show": [
                    "self",
                    "main_window"
                ],
                "redraw": [
                    "self"
                ],
                "image": [
                    "self",
                    "image"
                ],
                "reset_image": [
                    "self"
                ],
                "connect_event": [
                    "self",
                    "event",
                    "callback"
                ],
                "disconnect_event": [
                    "self",
                    "callback_id"
                ],
                "_update_status_bar": [
                    "self",
                    "event"
                ],
                "add_tool": [
                    "self",
                    "tool"
                ],
                "remove_tool": [
                    "self",
                    "tool"
                ],
                "_format_coord": [
                    "self",
                    "x",
                    "y"
                ]
            },
            "CollectionViewer": {
                "__init__": [
                    "self",
                    "image_collection",
                    "update_on"
                ],
                "update_index": [
                    "self",
                    "name",
                    "index"
                ],
                "keyPressEvent": [
                    "self",
                    "event"
                ]
            }
        },
        "skimage.viewer.utils": {},
        "skimage.viewer.utils.canvas": {
            "BlitManager": {
                "__init__": [
                    "self",
                    "ax"
                ],
                "add_artists": [
                    "self",
                    "artists"
                ],
                "remove_artists": [
                    "self",
                    "artists"
                ],
                "on_draw_event": [
                    "self",
                    "event"
                ],
                "redraw": [
                    "self"
                ],
                "draw_artists": [
                    "self"
                ]
            },
            "EventManager": {
                "__init__": [
                    "self",
                    "ax"
                ],
                "connect_event": [
                    "self",
                    "name",
                    "handler"
                ],
                "attach": [
                    "self",
                    "tool"
                ],
                "detach": [
                    "self",
                    "tool"
                ],
                "on_mouse_press": [
                    "self",
                    "event"
                ],
                "on_key_press": [
                    "self",
                    "event"
                ],
                "_get_tool": [
                    "self",
                    "event"
                ],
                "on_mouse_release": [
                    "self",
                    "event"
                ],
                "on_move": [
                    "self",
                    "event"
                ],
                "on_scroll": [
                    "self",
                    "event"
                ]
            }
        },
        "skimage.viewer.utils.core": {
            "init_qtapp": [],
            "is_event_loop_running": [
                "app"
            ],
            "start_qtapp": [
                "app"
            ],
            "new_canvas": [],
            "new_plot": [
                "parent",
                "subplot_kw"
            ],
            "figimage": [
                "image",
                "scale",
                "dpi"
            ],
            "update_axes_image": [
                "image_axes",
                "image"
            ],
            "RequiredAttr": {
                "__init__": [
                    "self",
                    "init_val"
                ],
                "__get__": [
                    "self",
                    "obj",
                    "objtype"
                ],
                "__set__": [
                    "self",
                    "obj",
                    "value"
                ]
            },
            "LinearColormap": {
                "__init__": [
                    "self",
                    "name",
                    "segmented_data"
                ]
            },
            "ClearColormap": {
                "__init__": [
                    "self",
                    "rgb",
                    "max_alpha",
                    "name"
                ]
            },
            "FigureCanvas": {
                "__init__": [
                    "self",
                    "figure"
                ],
                "resizeEvent": [
                    "self",
                    "event"
                ]
            }
        },
        "skimage.viewer.utils.dialogs": {
            "_format_filename": [
                "filename"
            ],
            "open_file_dialog": [],
            "save_file_dialog": [
                "default_format"
            ]
        },
        "skimage.viewer.tests.test_viewer": {
            "test_viewer": [],
            "make_key_event": [
                "key"
            ],
            "test_collection_viewer": [],
            "test_viewer_with_overlay": []
        },
        "skimage.viewer.tests.test_tools": {
            "get_end_points": [
                "image"
            ],
            "do_event": [
                "viewer",
                "etype",
                "button",
                "xdata",
                "ydata",
                "key"
            ],
            "test_line_tool": [],
            "test_thick_line_tool": [],
            "test_rect_tool": [],
            "test_paint_tool": [],
            "test_base_tool": []
        },
        "skimage.viewer.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.viewer.tests.test_utils": {
            "test_event_loop": [],
            "test_format_filename": [],
            "test_open_file_dialog": [],
            "test_save_file_dialog": []
        },
        "skimage.viewer.tests.test_plugins": {
            "setup_line_profile": [
                "image",
                "limits"
            ],
            "test_line_profile": [],
            "test_line_profile_rgb": [],
            "test_line_profile_dynamic": [],
            "test_measure": [],
            "test_canny": [],
            "test_label_painter": [],
            "test_crop": [],
            "test_color_histogram": [],
            "test_plot_plugin": [],
            "test_plugin": []
        },
        "skimage.viewer.tests.test_widgets": {
            "get_image_viewer": [],
            "test_check_box": [],
            "test_combo_box": [],
            "test_text_widget": [],
            "test_slider_int": [],
            "test_slider_float": [],
            "test_save_buttons": [],
            "test_ok_buttons": []
        },
        "skimage.viewer.plugins.measure": {
            "Measure": {
                "__init__": [
                    "self",
                    "maxdist"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "help": [
                    "self"
                ],
                "line_changed": [
                    "self",
                    "end_points"
                ]
            }
        },
        "skimage.viewer.plugins.color_histogram": {
            "pct_total_area": [
                "image",
                "percentile"
            ],
            "ColorHistogram": {
                "__init__": [
                    "self",
                    "max_pct"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "_on_new_image": [
                    "self",
                    "image"
                ],
                "help": [
                    "self"
                ],
                "ab_selected": [
                    "self",
                    "extents"
                ],
                "output": [
                    "self"
                ]
            }
        },
        "skimage.viewer.plugins.crop": {
            "Crop": {
                "__init__": [
                    "self",
                    "maxdist"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "help": [
                    "self"
                ],
                "crop": [
                    "self",
                    "extents"
                ],
                "reset": [
                    "self"
                ]
            }
        },
        "skimage.viewer.plugins.labelplugin": {
            "LabelPainter": {
                "__init__": [
                    "self",
                    "max_radius"
                ],
                "help": [
                    "self"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "_on_new_image": [
                    "self",
                    "image"
                ],
                "on_enter": [
                    "self",
                    "overlay"
                ],
                "radius": [
                    "self",
                    "val"
                ],
                "label": [
                    "self",
                    "val"
                ]
            }
        },
        "skimage.viewer.plugins": {},
        "skimage.viewer.plugins.plotplugin": {
            "PlotPlugin": {
                "__init__": [
                    "self",
                    "image_filter",
                    "height",
                    "width"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "redraw": [
                    "self"
                ],
                "add_plot": [
                    "self"
                ],
                "_update_original_image": [
                    "self",
                    "image"
                ],
                "add_tool": [
                    "self",
                    "tool"
                ],
                "remove_tool": [
                    "self",
                    "tool"
                ]
            }
        },
        "skimage.viewer.plugins.canny": {
            "CannyPlugin": {
                "__init__": [
                    "self"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ]
            }
        },
        "skimage.viewer.plugins.lineprofile": {
            "LineProfile": {
                "__init__": [
                    "self",
                    "maxdist",
                    "epsilon",
                    "limits"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "help": [
                    "self"
                ],
                "get_profiles": [
                    "self"
                ],
                "_autoscale_view": [
                    "self"
                ],
                "line_changed": [
                    "self",
                    "end_points"
                ],
                "_update_data": [
                    "self"
                ],
                "reset_axes": [
                    "self",
                    "scan_data"
                ],
                "output": [
                    "self"
                ]
            }
        },
        "skimage.viewer.plugins.base": {
            "Plugin": {
                "__init__": [
                    "self",
                    "image_filter",
                    "height",
                    "width",
                    "useblit",
                    "dock"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "add_widget": [
                    "self",
                    "widget"
                ],
                "__add__": [
                    "self",
                    "widget"
                ],
                "filter_image": [
                    "self"
                ],
                "_get_value": [
                    "self",
                    "param"
                ],
                "_update_original_image": [
                    "self",
                    "image"
                ],
                "_on_new_image": [
                    "self",
                    "image"
                ],
                "filtered_image": [
                    "self"
                ],
                "display_filtered_image": [
                    "self",
                    "image"
                ],
                "update_plugin": [
                    "self",
                    "name",
                    "value"
                ],
                "show": [
                    "self",
                    "main_window"
                ],
                "closeEvent": [
                    "self",
                    "event"
                ],
                "clean_up": [
                    "self"
                ],
                "remove_image_artists": [
                    "self"
                ],
                "output": [
                    "self"
                ]
            }
        },
        "skimage.viewer.plugins.overlayplugin": {
            "OverlayPlugin": {
                "__init__": [
                    "self"
                ],
                "attach": [
                    "self",
                    "image_viewer"
                ],
                "overlay": [
                    "self",
                    "image"
                ],
                "color": [
                    "self",
                    "index"
                ],
                "filtered_image": [
                    "self"
                ],
                "display_filtered_image": [
                    "self",
                    "image"
                ],
                "closeEvent": [
                    "self",
                    "event"
                ],
                "output": [
                    "self"
                ]
            }
        },
        "skimage.viewer.widgets": {},
        "skimage.viewer.widgets.core": {
            "BaseWidget": {
                "__init__": [
                    "self",
                    "name",
                    "ptype",
                    "callback"
                ],
                "val": [
                    "self"
                ],
                "_value_changed": [
                    "self",
                    "value"
                ]
            },
            "Text": {
                "__init__": [
                    "self",
                    "name",
                    "text"
                ],
                "text": [
                    "self",
                    "text_str"
                ]
            },
            "Slider": {
                "__init__": [
                    "self",
                    "name",
                    "low",
                    "high",
                    "value",
                    "value_type",
                    "ptype",
                    "callback",
                    "max_edit_width",
                    "orientation",
                    "update_on"
                ],
                "_on_slider_changed": [
                    "self"
                ],
                "_on_editbox_changed": [
                    "self"
                ],
                "_good_editbox_input": [
                    "self"
                ],
                "_bad_editbox_input": [
                    "self"
                ],
                "val": [
                    "self",
                    "value"
                ]
            },
            "ComboBox": {
                "__init__": [
                    "self",
                    "name",
                    "items",
                    "ptype",
                    "callback"
                ],
                "val": [
                    "self"
                ],
                "index": [
                    "self",
                    "i"
                ]
            },
            "CheckBox": {
                "__init__": [
                    "self",
                    "name",
                    "value",
                    "alignment",
                    "ptype",
                    "callback"
                ],
                "val": [
                    "self",
                    "i"
                ]
            },
            "Button": {
                "__init__": [
                    "self",
                    "name",
                    "callback"
                ]
            }
        },
        "skimage.viewer.widgets.history": {
            "notify": [
                "msg"
            ],
            "OKCancelButtons": {
                "__init__": [
                    "self",
                    "button_width"
                ],
                "update_original_image": [
                    "self"
                ],
                "close_plugin": [
                    "self"
                ]
            },
            "SaveButtons": {
                "__init__": [
                    "self",
                    "name",
                    "default_format"
                ],
                "save_to_stack": [
                    "self"
                ],
                "save_to_file": [
                    "self",
                    "filename"
                ]
            }
        },
        "skimage.viewer.canvastools": {},
        "skimage.viewer.canvastools.recttool": {
            "RectangleTool": {
                "__init__": [
                    "self",
                    "manager",
                    "on_move",
                    "on_release",
                    "on_enter",
                    "maxdist",
                    "rect_props"
                ],
                "_rect_bbox": [
                    "self"
                ],
                "corners": [
                    "self"
                ],
                "edge_centers": [
                    "self"
                ],
                "extents": [
                    "self",
                    "extents"
                ],
                "on_mouse_release": [
                    "self",
                    "event"
                ],
                "on_mouse_press": [
                    "self",
                    "event"
                ],
                "_set_active_handle": [
                    "self",
                    "event"
                ],
                "on_move": [
                    "self",
                    "event"
                ],
                "geometry": [
                    "self"
                ]
            }
        },
        "skimage.viewer.canvastools.base": {
            "_pass": [],
            "CanvasToolBase": {
                "__init__": [
                    "self",
                    "manager",
                    "on_move",
                    "on_enter",
                    "on_release",
                    "useblit",
                    "ax"
                ],
                "ignore": [
                    "self",
                    "event"
                ],
                "hit_test": [
                    "self",
                    "event"
                ],
                "redraw": [
                    "self"
                ],
                "set_visible": [
                    "self",
                    "val"
                ],
                "on_key_press": [
                    "self",
                    "event"
                ],
                "on_mouse_press": [
                    "self",
                    "event"
                ],
                "on_mouse_release": [
                    "self",
                    "event"
                ],
                "on_move": [
                    "self",
                    "event"
                ],
                "on_scroll": [
                    "self",
                    "event"
                ],
                "remove": [
                    "self"
                ],
                "geometry": [
                    "self"
                ]
            },
            "ToolHandles": {
                "__init__": [
                    "self",
                    "ax",
                    "x",
                    "y",
                    "marker",
                    "marker_props"
                ],
                "x": [
                    "self"
                ],
                "y": [
                    "self"
                ],
                "set_data": [
                    "self",
                    "pts",
                    "y"
                ],
                "set_visible": [
                    "self",
                    "val"
                ],
                "set_animated": [
                    "self",
                    "val"
                ],
                "closest": [
                    "self",
                    "x",
                    "y"
                ]
            }
        },
        "skimage.viewer.canvastools.linetool": {
            "LineTool": {
                "__init__": [
                    "self",
                    "manager",
                    "on_move",
                    "on_release",
                    "on_enter",
                    "maxdist",
                    "line_props",
                    "handle_props"
                ],
                "end_points": [
                    "self",
                    "pts"
                ],
                "hit_test": [
                    "self",
                    "event"
                ],
                "on_mouse_press": [
                    "self",
                    "event"
                ],
                "on_mouse_release": [
                    "self",
                    "event"
                ],
                "on_move": [
                    "self",
                    "event"
                ],
                "update": [
                    "self",
                    "x",
                    "y"
                ],
                "geometry": [
                    "self"
                ]
            },
            "ThickLineTool": {
                "__init__": [
                    "self",
                    "manager",
                    "on_move",
                    "on_enter",
                    "on_release",
                    "on_change",
                    "maxdist",
                    "line_props",
                    "handle_props"
                ],
                "on_scroll": [
                    "self",
                    "event"
                ],
                "on_key_press": [
                    "self",
                    "event"
                ],
                "_thicken_scan_line": [
                    "self"
                ],
                "_shrink_scan_line": [
                    "self"
                ]
            }
        },
        "skimage.viewer.canvastools.painttool": {
            "PaintTool": {
                "__init__": [
                    "self",
                    "manager",
                    "overlay_shape",
                    "radius",
                    "alpha",
                    "on_move",
                    "on_release",
                    "on_enter",
                    "rect_props"
                ],
                "label": [
                    "self",
                    "value"
                ],
                "radius": [
                    "self",
                    "r"
                ],
                "overlay": [
                    "self",
                    "image"
                ],
                "shape": [
                    "self",
                    "shape"
                ],
                "on_key_press": [
                    "self",
                    "event"
                ],
                "on_mouse_press": [
                    "self",
                    "event"
                ],
                "on_mouse_release": [
                    "self",
                    "event"
                ],
                "on_move": [
                    "self",
                    "event"
                ],
                "update_overlay": [
                    "self",
                    "x",
                    "y"
                ],
                "update_cursor": [
                    "self",
                    "x",
                    "y"
                ],
                "geometry": [
                    "self"
                ]
            },
            "CenteredWindow": {
                "__init__": [
                    "self",
                    "radius",
                    "array_shape"
                ],
                "at": [
                    "self",
                    "row",
                    "col"
                ]
            }
        },
        "skimage.util.unique": {
            "unique_rows": [
                "ar"
            ]
        },
        "skimage.util._invert": {
            "invert": [
                "image",
                "signed_float"
            ]
        },
        "skimage.util.arraycrop": {
            "crop": [
                "ar",
                "crop_width",
                "copy",
                "order"
            ]
        },
        "skimage.util": {},
        "skimage.util._regular_grid": {
            "regular_grid": [
                "ar_shape",
                "n_points"
            ],
            "regular_seeds": [
                "ar_shape",
                "n_points",
                "dtype"
            ]
        },
        "skimage.util.apply_parallel": {
            "_get_chunks": [
                "shape",
                "ncpu"
            ],
            "apply_parallel": [
                "function",
                "array",
                "chunks",
                "depth",
                "mode",
                "extra_arguments",
                "extra_keywords"
            ]
        },
        "skimage.util._montage": {
            "montage": [
                "arr_in",
                "fill",
                "rescale_intensity",
                "grid_shape",
                "padding_width",
                "multichannel"
            ],
            "montage2d": [
                "arr_in",
                "fill",
                "rescale_intensity",
                "grid_shape",
                "padding_width"
            ]
        },
        "skimage.util.shape": {
            "view_as_blocks": [
                "arr_in",
                "block_shape"
            ],
            "view_as_windows": [
                "arr_in",
                "window_shape",
                "step"
            ]
        },
        "skimage.util.dtype": {
            "dtype_limits": [
                "image",
                "clip_negative"
            ],
            "convert": [
                "image",
                "dtype",
                "force_copy",
                "uniform"
            ],
            "img_as_float32": [
                "image",
                "force_copy"
            ],
            "img_as_float64": [
                "image",
                "force_copy"
            ],
            "img_as_float": [
                "image",
                "force_copy"
            ],
            "img_as_uint": [
                "image",
                "force_copy"
            ],
            "img_as_int": [
                "image",
                "force_copy"
            ],
            "img_as_ubyte": [
                "image",
                "force_copy"
            ],
            "img_as_bool": [
                "image",
                "force_copy"
            ]
        },
        "skimage.util.colormap": {
            "register_cmap_safe": [
                "name",
                "data"
            ]
        },
        "skimage.util.lookfor": {
            "lookfor": [
                "what"
            ]
        },
        "skimage.util.noise": {
            "random_noise": [
                "image",
                "mode",
                "seed",
                "clip"
            ]
        },
        "skimage.util.tests.test_arraypad": {
            "TestConditionalShortcuts": {
                "test_zero_padding_shortcuts": [
                    "self"
                ],
                "test_shallow_statistic_range": [
                    "self"
                ],
                "test_clip_statistic_range": [
                    "self"
                ]
            },
            "TestStatistic": {
                "test_check_mean_stat_length": [
                    "self"
                ],
                "test_check_maximum_1": [
                    "self"
                ],
                "test_check_maximum_2": [
                    "self"
                ],
                "test_check_maximum_stat_length": [
                    "self"
                ],
                "test_check_minimum_1": [
                    "self"
                ],
                "test_check_minimum_2": [
                    "self"
                ],
                "test_check_minimum_stat_length": [
                    "self"
                ],
                "test_check_median": [
                    "self"
                ],
                "test_check_median_01": [
                    "self"
                ],
                "test_check_median_02": [
                    "self"
                ],
                "test_check_median_stat_length": [
                    "self"
                ],
                "test_check_mean_shape_one": [
                    "self"
                ],
                "test_check_mean_2": [
                    "self"
                ]
            },
            "TestConstant": {
                "test_check_constant": [
                    "self"
                ],
                "test_check_constant_zeros": [
                    "self"
                ],
                "test_check_constant_float": [
                    "self"
                ],
                "test_check_constant_float2": [
                    "self"
                ],
                "test_check_constant_float3": [
                    "self"
                ],
                "test_check_constant_odd_pad_amount": [
                    "self"
                ]
            },
            "TestLinearRamp": {
                "test_check_simple": [
                    "self"
                ],
                "test_check_2d": [
                    "self"
                ]
            },
            "TestReflect": {
                "test_check_simple": [
                    "self"
                ],
                "test_check_odd_method": [
                    "self"
                ],
                "test_check_large_pad": [
                    "self"
                ],
                "test_check_shape": [
                    "self"
                ],
                "test_check_01": [
                    "self"
                ],
                "test_check_02": [
                    "self"
                ],
                "test_check_03": [
                    "self"
                ]
            },
            "TestSymmetric": {
                "test_check_simple": [
                    "self"
                ],
                "test_check_odd_method": [
                    "self"
                ],
                "test_check_large_pad": [
                    "self"
                ],
                "test_check_large_pad_odd": [
                    "self"
                ],
                "test_check_shape": [
                    "self"
                ],
                "test_check_01": [
                    "self"
                ],
                "test_check_02": [
                    "self"
                ],
                "test_check_03": [
                    "self"
                ]
            },
            "TestWrap": {
                "test_check_simple": [
                    "self"
                ],
                "test_check_large_pad": [
                    "self"
                ],
                "test_check_01": [
                    "self"
                ],
                "test_check_02": [
                    "self"
                ]
            },
            "TestStatLen": {
                "test_check_simple": [
                    "self"
                ]
            },
            "TestEdge": {
                "test_check_simple": [
                    "self"
                ]
            },
            "TestZeroPadWidth": {
                "test_zero_pad_width": [
                    "self"
                ]
            },
            "TestLegacyVectorFunction": {
                "test_legacy_vector_functionality": [
                    "self"
                ]
            },
            "TestNdarrayPadWidth": {
                "test_check_simple": [
                    "self"
                ]
            },
            "ValueError1": {
                "test_check_simple": [
                    "self"
                ],
                "test_check_negative_stat_length": [
                    "self"
                ],
                "test_check_negative_pad_width": [
                    "self"
                ]
            },
            "ValueError2": {
                "test_check_negative_pad_amount": [
                    "self"
                ]
            },
            "ValueError3": {
                "test_check_kwarg_not_allowed": [
                    "self"
                ],
                "test_mode_not_set": [
                    "self"
                ],
                "test_malformed_pad_amount": [
                    "self"
                ],
                "test_malformed_pad_amount2": [
                    "self"
                ],
                "test_pad_too_many_axes": [
                    "self"
                ]
            },
            "TypeError1": {
                "test_float": [
                    "self"
                ],
                "test_str": [
                    "self"
                ],
                "test_object": [
                    "self"
                ],
                "test_complex": [
                    "self"
                ],
                "test_check_wrong_pad_amount": [
                    "self"
                ]
            }
        },
        "skimage.util.tests.test_random_noise": {
            "test_set_seed": [],
            "test_salt": [],
            "test_salt_p1": [],
            "test_singleton_dim": [],
            "test_pepper": [],
            "test_salt_and_pepper": [],
            "test_gaussian": [],
            "test_localvar": [],
            "test_speckle": [],
            "test_poisson": [],
            "test_clip_poisson": [],
            "test_clip_gaussian": [],
            "test_clip_speckle": [],
            "test_bad_mode": []
        },
        "skimage.util.tests.test_unique_rows": {
            "test_discontiguous_array": [],
            "test_uint8_array": [],
            "test_float_array": [],
            "test_1d_array": [],
            "test_3d_array": []
        },
        "skimage.util.tests.test_arraycrop": {
            "test_multi_crop": [],
            "test_pair_crop": [],
            "test_int_crop": [],
            "test_copy_crop": [],
            "test_zero_crop": []
        },
        "skimage.util.tests.test_dtype": {
            "_verify_range": [
                "msg",
                "x",
                "vmin",
                "vmax",
                "dtype"
            ],
            "test_range": [
                "dtype",
                "f_and_dt"
            ],
            "test_range_extra_dtypes": [
                "dtype_in",
                "dt"
            ],
            "test_downcast": [],
            "test_float_out_of_range": [],
            "test_float_float_all_ranges": [],
            "test_copy": [],
            "test_bool": [],
            "test_clobber": [],
            "test_signed_scaling_float32": [],
            "test_float32_passthrough": []
        },
        "skimage.util.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.util.tests.test_shape": {
            "test_view_as_blocks_block_not_a_tuple": [],
            "test_view_as_blocks_negative_shape": [],
            "test_view_as_blocks_block_too_large": [],
            "test_view_as_blocks_wrong_block_dimension": [],
            "test_view_as_blocks_1D_array_wrong_block_shape": [],
            "test_view_as_blocks_1D_array": [],
            "test_view_as_blocks_2D_array": [],
            "test_view_as_blocks_3D_array": [],
            "test_view_as_windows_input_not_array": [],
            "test_view_as_windows_wrong_window_dimension": [],
            "test_view_as_windows_negative_window_length": [],
            "test_view_as_windows_window_too_large": [],
            "test_view_as_windows_step_below_one": [],
            "test_view_as_windows_1D": [],
            "test_view_as_windows_2D": [],
            "test_view_as_windows_with_skip": [],
            "test_views_non_contiguous": [],
            "test_view_as_windows_step_tuple": []
        },
        "skimage.util.tests.test_invert": {
            "test_invert_bool": [],
            "test_invert_uint8": [],
            "test_invert_int8": [],
            "test_invert_float64_signed": [],
            "test_invert_float64_unsigned": [],
            "test_invert_roundtrip": []
        },
        "skimage.util.tests.test_apply_parallel": {
            "test_apply_parallel": [],
            "test_no_chunks": [],
            "test_apply_parallel_wrap": [],
            "test_apply_parallel_nearest": []
        },
        "skimage.util.tests.test_montage": {
            "montage2d": [],
            "test_montage2d_simple": [],
            "test_montage2d_fill": [],
            "test_montage2d_shape": [],
            "test_montage2d_grid_shape": [],
            "test_montage2d_rescale_intensity": [],
            "test_montage2d_simple_padding": [],
            "test_montage2d_error_ndim": [],
            "test_montage_simple_gray": [],
            "test_montage_simple_rgb": [],
            "test_montage_fill_gray": [],
            "test_montage_grid_default_gray": [],
            "test_montage_grid_custom_gray": [],
            "test_montage_rescale_intensity_gray": [],
            "test_montage_simple_padding_gray": [],
            "test_error_ndim": []
        },
        "skimage.util.tests.test_regular_grid": {
            "test_regular_grid_full": [],
            "test_regular_grid_2d_8": [],
            "test_regular_grid_2d_32": [],
            "test_regular_grid_3d_8": []
        },
        "skimage.measure._polygon": {
            "approximate_polygon": [
                "coords",
                "tolerance"
            ],
            "subdivide_polygon": [
                "coords",
                "degree",
                "preserve_ends"
            ]
        },
        "skimage.measure._moments": {
            "moments_coords": [
                "coords",
                "order"
            ],
            "moments_coords_central": [
                "coords",
                "center",
                "order"
            ],
            "moments": [
                "image",
                "order"
            ],
            "moments_central": [
                "image",
                "center",
                "cc",
                "order"
            ],
            "moments_normalized": [
                "mu",
                "order"
            ],
            "moments_hu": [
                "nu"
            ],
            "centroid": [
                "image"
            ],
            "inertia_tensor": [
                "image",
                "mu"
            ],
            "inertia_tensor_eigvals": [
                "image",
                "mu",
                "T"
            ]
        },
        "skimage.measure.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.measure": {},
        "skimage.measure._label": {
            "label": [
                "input",
                "neighbors",
                "background",
                "return_num",
                "connectivity"
            ]
        },
        "skimage.measure._marching_cubes_lewiner": {
            "marching_cubes_lewiner": [
                "volume",
                "level",
                "spacing",
                "gradient_direction",
                "step_size",
                "allow_degenerate",
                "use_classic"
            ],
            "_to_array": [
                "args"
            ],
            "_get_mc_luts": []
        },
        "skimage.measure.block": {
            "block_reduce": [
                "image",
                "block_size",
                "func",
                "cval"
            ]
        },
        "skimage.measure._structural_similarity": {
            "compare_ssim": [
                "X",
                "Y",
                "win_size",
                "gradient",
                "data_range",
                "multichannel",
                "gaussian_weights",
                "full"
            ]
        },
        "skimage.measure.fit": {
            "_check_data_dim": [
                "data",
                "dim"
            ],
            "_check_data_atleast_2D": [
                "data"
            ],
            "_norm_along_axis": [
                "x",
                "axis"
            ],
            "_dynamic_max_trials": [
                "n_inliers",
                "n_samples",
                "min_samples",
                "probability"
            ],
            "ransac": [
                "data",
                "model_class",
                "min_samples",
                "residual_threshold",
                "is_data_valid",
                "is_model_valid",
                "max_trials",
                "stop_sample_num",
                "stop_residuals_sum",
                "stop_probability",
                "random_state"
            ],
            "BaseModel": {
                "__init__": [
                    "self"
                ]
            },
            "LineModelND": {
                "estimate": [
                    "self",
                    "data"
                ],
                "residuals": [
                    "self",
                    "data",
                    "params"
                ],
                "predict": [
                    "self",
                    "x",
                    "axis",
                    "params"
                ],
                "predict_x": [
                    "self",
                    "y",
                    "params"
                ],
                "predict_y": [
                    "self",
                    "x",
                    "params"
                ]
            },
            "CircleModel": {
                "estimate": [
                    "self",
                    "data"
                ],
                "residuals": [
                    "self",
                    "data"
                ],
                "predict_xy": [
                    "self",
                    "t",
                    "params"
                ]
            },
            "EllipseModel": {
                "estimate": [
                    "self",
                    "data"
                ],
                "residuals": [
                    "self",
                    "data"
                ],
                "predict_xy": [
                    "self",
                    "t",
                    "params"
                ]
            }
        },
        "skimage.measure._marching_cubes_lewiner_luts": {},
        "skimage.measure._marching_cubes_classic": {
            "marching_cubes_classic": [
                "volume",
                "level",
                "spacing",
                "gradient_direction"
            ],
            "mesh_surface_area": [
                "verts",
                "faces"
            ],
            "correct_mesh_orientation": [
                "volume",
                "verts",
                "faces",
                "spacing",
                "gradient_direction"
            ],
            "_correct_mesh_orientation": [
                "volume",
                "actual_verts",
                "faces",
                "spacing",
                "gradient_direction"
            ]
        },
        "skimage.measure.simple_metrics": {
            "_assert_compatible": [
                "im1",
                "im2"
            ],
            "_as_floats": [
                "im1",
                "im2"
            ],
            "compare_mse": [
                "im1",
                "im2"
            ],
            "compare_nrmse": [
                "im_true",
                "im_test",
                "norm_type"
            ],
            "compare_psnr": [
                "im_true",
                "im_test",
                "data_range"
            ]
        },
        "skimage.measure._regionprops": {
            "_cached": [
                "f"
            ],
            "only2d": [
                "method"
            ],
            "regionprops": [
                "label_image",
                "intensity_image",
                "cache",
                "coordinates"
            ],
            "perimeter": [
                "image",
                "neighbourhood"
            ],
            "_parse_docs": [],
            "_install_properties_docs": [],
            "_RegionProperties": {
                "__init__": [
                    "self",
                    "slice",
                    "label",
                    "label_image",
                    "intensity_image",
                    "cache_active",
                    "coordinates"
                ],
                "area": [
                    "self"
                ],
                "bbox": [
                    "self"
                ],
                "bbox_area": [
                    "self"
                ],
                "centroid": [
                    "self"
                ],
                "convex_area": [
                    "self"
                ],
                "convex_image": [
                    "self"
                ],
                "coords": [
                    "self"
                ],
                "eccentricity": [
                    "self"
                ],
                "equivalent_diameter": [
                    "self"
                ],
                "euler_number": [
                    "self"
                ],
                "extent": [
                    "self"
                ],
                "filled_area": [
                    "self"
                ],
                "filled_image": [
                    "self"
                ],
                "image": [
                    "self"
                ],
                "inertia_tensor": [
                    "self"
                ],
                "inertia_tensor_eigvals": [
                    "self"
                ],
                "intensity_image": [
                    "self"
                ],
                "_intensity_image_double": [
                    "self"
                ],
                "local_centroid": [
                    "self"
                ],
                "max_intensity": [
                    "self"
                ],
                "mean_intensity": [
                    "self"
                ],
                "min_intensity": [
                    "self"
                ],
                "major_axis_length": [
                    "self"
                ],
                "minor_axis_length": [
                    "self"
                ],
                "moments": [
                    "self"
                ],
                "moments_central": [
                    "self"
                ],
                "moments_hu": [
                    "self"
                ],
                "moments_normalized": [
                    "self"
                ],
                "orientation": [
                    "self"
                ],
                "perimeter": [
                    "self"
                ],
                "solidity": [
                    "self"
                ],
                "weighted_centroid": [
                    "self"
                ],
                "weighted_local_centroid": [
                    "self"
                ],
                "weighted_moments": [
                    "self"
                ],
                "weighted_moments_central": [
                    "self"
                ],
                "weighted_moments_hu": [
                    "self"
                ],
                "weighted_moments_normalized": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__eq__": [
                    "self",
                    "other"
                ]
            }
        },
        "skimage.measure.entropy": {
            "shannon_entropy": [
                "image",
                "base"
            ]
        },
        "skimage.measure.profile": {
            "profile_line": [
                "image",
                "src",
                "dst",
                "linewidth",
                "order",
                "mode",
                "cval"
            ],
            "_line_profile_coordinates": [
                "src",
                "dst",
                "linewidth"
            ]
        },
        "skimage.measure._find_contours": {
            "find_contours": [
                "array",
                "level",
                "fully_connected",
                "positive_orientation"
            ],
            "_take_2": [
                "seq"
            ],
            "_assemble_contours": [
                "points_iterator"
            ]
        },
        "skimage.measure.pnpoly": {
            "grid_points_in_poly": [
                "shape",
                "verts"
            ],
            "points_in_poly": [
                "points",
                "verts"
            ]
        },
        "skimage.measure.tests.test_fit": {
            "test_line_model_invalid_input": [],
            "test_line_model_predict": [],
            "test_line_model_nd_invalid_input": [],
            "test_line_model_nd_predict": [],
            "test_line_model_nd_estimate": [],
            "test_line_model_nd_residuals": [],
            "test_line_modelND_under_determined": [],
            "test_circle_model_invalid_input": [],
            "test_circle_model_predict": [],
            "test_circle_model_estimate": [],
            "test_circle_model_residuals": [],
            "test_ellipse_model_invalid_input": [],
            "test_ellipse_model_predict": [],
            "test_ellipse_model_estimate": [],
            "test_ellipse_model_estimate_from_data": [],
            "test_ellipse_model_estimate_failers": [],
            "test_ellipse_model_residuals": [],
            "test_ransac_shape": [],
            "test_ransac_geometric": [],
            "test_ransac_is_data_valid": [],
            "test_ransac_is_model_valid": [],
            "test_ransac_dynamic_max_trials": [],
            "test_ransac_invalid_input": [],
            "test_ransac_sample_duplicates": []
        },
        "skimage.measure.tests.test_simple_metrics": {
            "test_PSNR_vs_IPOL": [],
            "test_PSNR_float": [],
            "test_PSNR_errors": [],
            "test_NRMSE": [],
            "test_NRMSE_no_int_overflow": [],
            "test_NRMSE_errors": []
        },
        "skimage.measure.tests.test_entropy": {
            "test_shannon_ones": [],
            "test_shannon_all_unique": []
        },
        "skimage.measure.tests.test_moments": {
            "test_moments": [],
            "test_moments_central": [],
            "test_moments_central_deprecated": [],
            "test_moments_coords": [],
            "test_moments_central_coords": [],
            "test_moments_normalized": [],
            "test_moments_normalized_3d": [],
            "test_moments_normalized_invalid": [],
            "test_moments_hu": [],
            "test_centroid": [],
            "test_inertia_tensor_2d": [],
            "test_inertia_tensor_3d": []
        },
        "skimage.measure.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.measure.tests.test_profile": {
            "test_horizontal_rightward": [],
            "test_horizontal_leftward": [],
            "test_vertical_downward": [],
            "test_vertical_upward": [],
            "test_45deg_right_downward": [],
            "test_45deg_right_downward_interpolated": [],
            "test_45deg_right_upward": [],
            "test_45deg_left_upward": [],
            "test_45deg_left_downward": [],
            "test_pythagorean_triangle_right_downward": [],
            "test_pythagorean_triangle_right_downward_interpolated": [],
            "test_pythagorean_triangle_right_downward_linewidth": [],
            "test_pythagorean_triangle_right_upward_linewidth": [],
            "test_pythagorean_triangle_transpose_left_down_linewidth": []
        },
        "skimage.measure.tests.test_find_contours": {
            "test_binary": [],
            "test_float": [],
            "test_memory_order": [],
            "test_invalid_input": []
        },
        "skimage.measure.tests.test_regionprops": {
            "test_all_props": [],
            "test_all_props_3d": [],
            "test_dtype": [],
            "test_ndim": [],
            "test_area": [],
            "test_bbox": [],
            "test_bbox_area": [],
            "test_moments_central": [],
            "test_centroid": [],
            "test_centroid_3d": [],
            "test_convex_area": [],
            "test_convex_image": [],
            "test_coordinates": [],
            "test_eccentricity": [],
            "test_equiv_diameter": [],
            "test_euler_number": [],
            "test_extent": [],
            "test_moments_hu": [],
            "test_image": [],
            "test_label": [],
            "test_filled_area": [],
            "test_filled_image": [],
            "test_major_axis_length": [],
            "test_max_intensity": [],
            "test_mean_intensity": [],
            "test_min_intensity": [],
            "test_minor_axis_length": [],
            "test_moments": [],
            "test_moments_normalized": [],
            "test_orientation": [],
            "test_perimeter": [],
            "test_solidity": [],
            "test_weighted_moments_central": [],
            "test_weighted_centroid": [],
            "test_weighted_moments_hu": [],
            "test_weighted_moments": [],
            "test_weighted_moments_normalized": [],
            "test_label_sequence": [],
            "test_pure_background": [],
            "test_invalid": [],
            "test_invalid_size": [],
            "test_equals": [],
            "test_iterate_all_props": [],
            "test_cache": [],
            "test_docstrings_and_props": [],
            "test_incorrect_coordinate_convention": []
        },
        "skimage.measure.tests.test_structural_similarity": {
            "test_ssim_patch_range": [],
            "test_ssim_image": [],
            "test_ssim_grad": [],
            "test_ssim_dtype": [],
            "test_ssim_multichannel": [],
            "test_ssim_nD": [],
            "test_ssim_multichannel_chelsea": [],
            "test_gaussian_mssim_vs_IPOL": [],
            "test_gaussian_mssim_vs_author_ref": [],
            "test_gaussian_mssim_and_gradient_vs_Matlab": [],
            "test_mssim_vs_legacy": [],
            "test_mssim_mixed_dtype": [],
            "test_invalid_input": []
        },
        "skimage.measure.tests.test_polygon": {
            "test_approximate_polygon": [],
            "test_subdivide_polygon": []
        },
        "skimage.measure.tests.test_marching_cubes": {
            "test_marching_cubes_isotropic": [],
            "test_marching_cubes_anisotropic": [],
            "test_invalid_input": [],
            "test_correct_mesh_orientation": [],
            "test_both_algs_same_result_ellipse": [],
            "_same_mesh": [
                "vertices1",
                "faces1",
                "vertices2",
                "faces2",
                "tol"
            ],
            "test_both_algs_same_result_donut": []
        },
        "skimage.measure.tests.test_block": {
            "test_block_reduce_sum": [],
            "test_block_reduce_mean": [],
            "test_block_reduce_median": [],
            "test_block_reduce_min": [],
            "test_block_reduce_max": [],
            "test_invalid_block_size": []
        },
        "skimage.measure.tests.test_pnpoly": {
            "test_grid_points_in_poly": [],
            "TestNpnpoly": {
                "test_square": [
                    "self"
                ],
                "test_triangle": [
                    "self"
                ],
                "test_type": [
                    "self"
                ]
            }
        },
        "skimage.color.delta_e": {
            "deltaE_cie76": [
                "lab1",
                "lab2"
            ],
            "deltaE_ciede94": [
                "lab1",
                "lab2",
                "kH",
                "kC",
                "kL",
                "k1",
                "k2"
            ],
            "deltaE_ciede2000": [
                "lab1",
                "lab2",
                "kL",
                "kC",
                "kH"
            ],
            "deltaE_cmc": [
                "lab1",
                "lab2",
                "kL",
                "kC"
            ],
            "get_dH2": [
                "lab1",
                "lab2"
            ]
        },
        "skimage.color": {},
        "skimage.color.colorlabel": {
            "_rgb_vector": [
                "color"
            ],
            "_match_label_with_color": [
                "label",
                "colors",
                "bg_label",
                "bg_color"
            ],
            "label2rgb": [
                "label",
                "image",
                "colors",
                "alpha",
                "bg_label",
                "bg_color",
                "image_alpha",
                "kind"
            ],
            "_label2rgb_overlay": [
                "label",
                "image",
                "colors",
                "alpha",
                "bg_label",
                "bg_color",
                "image_alpha"
            ],
            "_label2rgb_avg": [
                "label_field",
                "image",
                "bg_label",
                "bg_color"
            ]
        },
        "skimage.color.adapt_rgb": {
            "is_rgb_like": [
                "image"
            ],
            "adapt_rgb": [
                "apply_to_rgb"
            ],
            "hsv_value": [
                "image_filter",
                "image"
            ],
            "each_channel": [
                "image_filter",
                "image"
            ]
        },
        "skimage.color.colorconv": {
            "guess_spatial_dimensions": [
                "image"
            ],
            "convert_colorspace": [
                "arr",
                "fromspace",
                "tospace"
            ],
            "_prepare_colorarray": [
                "arr"
            ],
            "_prepare_rgba_array": [
                "arr"
            ],
            "rgba2rgb": [
                "rgba",
                "background"
            ],
            "rgb2hsv": [
                "rgb"
            ],
            "hsv2rgb": [
                "hsv"
            ],
            "get_xyz_coords": [
                "illuminant",
                "observer"
            ],
            "_convert": [
                "matrix",
                "arr"
            ],
            "xyz2rgb": [
                "xyz"
            ],
            "rgb2xyz": [
                "rgb"
            ],
            "rgb2rgbcie": [
                "rgb"
            ],
            "rgbcie2rgb": [
                "rgbcie"
            ],
            "rgb2gray": [
                "rgb"
            ],
            "gray2rgb": [
                "image",
                "alpha"
            ],
            "xyz2lab": [
                "xyz",
                "illuminant",
                "observer"
            ],
            "lab2xyz": [
                "lab",
                "illuminant",
                "observer"
            ],
            "rgb2lab": [
                "rgb",
                "illuminant",
                "observer"
            ],
            "lab2rgb": [
                "lab",
                "illuminant",
                "observer"
            ],
            "xyz2luv": [
                "xyz",
                "illuminant",
                "observer"
            ],
            "luv2xyz": [
                "luv",
                "illuminant",
                "observer"
            ],
            "rgb2luv": [
                "rgb"
            ],
            "luv2rgb": [
                "luv"
            ],
            "rgb2hed": [
                "rgb"
            ],
            "hed2rgb": [
                "hed"
            ],
            "separate_stains": [
                "rgb",
                "conv_matrix"
            ],
            "combine_stains": [
                "stains",
                "conv_matrix"
            ],
            "lab2lch": [
                "lab"
            ],
            "_cart2polar_2pi": [
                "x",
                "y"
            ],
            "lch2lab": [
                "lch"
            ],
            "_prepare_lab_array": [
                "arr"
            ],
            "rgb2yuv": [
                "rgb"
            ],
            "rgb2yiq": [
                "rgb"
            ],
            "rgb2ypbpr": [
                "rgb"
            ],
            "rgb2ycbcr": [
                "rgb"
            ],
            "rgb2ydbdr": [
                "rgb"
            ],
            "yuv2rgb": [
                "yuv"
            ],
            "yiq2rgb": [
                "yiq"
            ],
            "ypbpr2rgb": [
                "ypbpr"
            ],
            "ycbcr2rgb": [
                "ycbcr"
            ],
            "ydbdr2rgb": [
                "ydbdr"
            ]
        },
        "skimage.color.rgb_colors": {},
        "skimage.color.tests.test_colorconv": {
            "test_guess_spatial_dimensions": [],
            "test_gray2rgb": [],
            "test_gray2rgb_rgb": [],
            "test_gray2rgb_alpha": [],
            "TestColorconv": {
                "test_rgba2rgb_conversion": [
                    "self"
                ],
                "test_rgba2rgb_error_grayscale": [
                    "self"
                ],
                "test_rgba2rgb_error_rgb": [
                    "self"
                ],
                "test_rgb2hsv_conversion": [
                    "self"
                ],
                "test_rgb2hsv_error_grayscale": [
                    "self"
                ],
                "test_rgb2hsv_error_one_element": [
                    "self"
                ],
                "test_hsv2rgb_conversion": [
                    "self"
                ],
                "test_hsv2rgb_error_grayscale": [
                    "self"
                ],
                "test_hsv2rgb_error_one_element": [
                    "self"
                ],
                "test_rgb2xyz_conversion": [
                    "self"
                ],
                "test_rgb2xyz_error_grayscale": [
                    "self"
                ],
                "test_rgb2xyz_error_one_element": [
                    "self"
                ],
                "test_xyz2rgb_conversion": [
                    "self"
                ],
                "test_xyz_rgb_roundtrip": [
                    "self"
                ],
                "test_hed_rgb_roundtrip": [
                    "self"
                ],
                "test_hed_rgb_float_roundtrip": [
                    "self"
                ],
                "test_hdx_rgb_roundtrip": [
                    "self"
                ],
                "test_rgb2rgbcie_conversion": [
                    "self"
                ],
                "test_rgbcie2rgb_conversion": [
                    "self"
                ],
                "test_convert_colorspace": [
                    "self"
                ],
                "test_rgb2grey": [
                    "self"
                ],
                "test_rgb2grey_contiguous": [
                    "self"
                ],
                "test_rgb2grey_alpha": [
                    "self"
                ],
                "test_rgb2grey_on_grey": [
                    "self"
                ],
                "test_xyz2lab": [
                    "self"
                ],
                "test_lab2xyz": [
                    "self"
                ],
                "test_rgb2lab_brucelindbloom": [
                    "self"
                ],
                "test_lab_rgb_roundtrip": [
                    "self"
                ],
                "test_xyz2luv": [
                    "self"
                ],
                "test_luv2xyz": [
                    "self"
                ],
                "test_rgb2luv_brucelindbloom": [
                    "self"
                ],
                "test_luv_rgb_roundtrip": [
                    "self"
                ],
                "test_lab_rgb_outlier": [
                    "self"
                ],
                "test_lab_full_gamut": [
                    "self"
                ],
                "test_lab_lch_roundtrip": [
                    "self"
                ],
                "test_rgb_lch_roundtrip": [
                    "self"
                ],
                "test_lab_lch_0d": [
                    "self"
                ],
                "test_lab_lch_1d": [
                    "self"
                ],
                "test_lab_lch_3d": [
                    "self"
                ],
                "_get_lab0": [
                    "self"
                ],
                "test_yuv": [
                    "self"
                ],
                "test_yuv_roundtrip": [
                    "self"
                ],
                "test_rgb2yiq_conversion": [
                    "self"
                ]
            }
        },
        "skimage.color.tests.test_colorlabel": {
            "test_shape_mismatch": [],
            "test_rgb": [],
            "test_alpha": [],
            "test_no_input_image": [],
            "test_image_alpha": [],
            "test_color_names": [],
            "test_bg_and_color_cycle": [],
            "test_negative_labels": [],
            "test_nonconsecutive": [],
            "test_label_consistency": [],
            "test_leave_labels_alone": [],
            "test_avg": [],
            "test_negative_intensity": []
        },
        "skimage.color.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.color.tests.test_delta_e": {
            "test_ciede2000_dE": [],
            "load_ciede2000_data": [],
            "test_cie76": [],
            "test_ciede94": [],
            "test_cmc": [],
            "test_single_color_cie76": [],
            "test_single_color_ciede94": [],
            "test_single_color_ciede2000": [],
            "test_single_color_cmc": []
        },
        "skimage.color.tests.test_adapt_rgb": {
            "edges_each": [
                "image"
            ],
            "smooth_each": [
                "image",
                "sigma"
            ],
            "mask_each": [
                "image",
                "mask"
            ],
            "edges_hsv": [
                "image"
            ],
            "smooth_hsv": [
                "image",
                "sigma"
            ],
            "edges_hsv_uint": [
                "image"
            ],
            "test_gray_scale_image": [],
            "test_each_channel": [],
            "test_each_channel_with_filter_argument": [],
            "test_each_channel_with_asymmetric_kernel": [],
            "test_hsv_value": [],
            "test_hsv_value_with_filter_argument": [],
            "test_hsv_value_with_non_float_output": []
        },
        "skimage.data._binary_blobs": {
            "binary_blobs": [
                "length",
                "blob_size_fraction",
                "n_dim",
                "volume_fraction",
                "seed"
            ]
        },
        "skimage.data": {
            "load": [
                "f",
                "as_gray",
                "as_grey"
            ],
            "camera": [],
            "astronaut": [],
            "text": [],
            "checkerboard": [],
            "coins": [],
            "logo": [],
            "moon": [],
            "page": [],
            "horse": [],
            "clock": [],
            "immunohistochemistry": [],
            "chelsea": [],
            "coffee": [],
            "hubble_deep_field": [],
            "rocket": [],
            "stereo_motorcycle": [],
            "lfw_subset": []
        },
        "skimage.data.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.data.tests.test_data": {
            "test_astronaut": [],
            "test_camera": [],
            "test_checkerboard": [],
            "test_chelsea": [],
            "test_clock": [],
            "test_coffee": [],
            "test_horse": [],
            "test_hubble": [],
            "test_immunohistochemistry": [],
            "test_logo": [],
            "test_moon": [],
            "test_page": [],
            "test_rocket": [],
            "test_text": [],
            "test_stereo_motorcycle": [],
            "test_binary_blobs": [],
            "test_lfw_subset": []
        },
        "skimage.external.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.external": {},
        "skimage.external.test_tifffile": {
            "test_imread_uint16": [],
            "test_imread_uint16_big_endian": [],
            "test_extension": [],
            "TestSave": {
                "roundtrip": [
                    "self",
                    "dtype",
                    "x"
                ],
                "test_imsave_roundtrip": [
                    "self",
                    "shape",
                    "dtype"
                ]
            }
        },
        "skimage.external.tifffile": {},
        "skimage.external.tifffile.tifffile": {
            "imsave": [
                "file",
                "data"
            ],
            "imread": [
                "files"
            ],
            "read_bytes": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_numpy": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_json": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_mm_header": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_mm_stamp": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_uic1tag": [
                "fh",
                "byteorder",
                "dtype",
                "count",
                "plane_count"
            ],
            "read_uic2tag": [
                "fh",
                "byteorder",
                "dtype",
                "plane_count"
            ],
            "read_uic3tag": [
                "fh",
                "byteorder",
                "dtype",
                "plane_count"
            ],
            "read_uic4tag": [
                "fh",
                "byteorder",
                "dtype",
                "plane_count"
            ],
            "read_uic_tag": [
                "fh",
                "tagid",
                "plane_count",
                "offset"
            ],
            "read_uic_image_property": [
                "fh"
            ],
            "read_cz_lsm_info": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_cz_lsm_floatpairs": [
                "fh"
            ],
            "read_cz_lsm_positions": [
                "fh"
            ],
            "read_cz_lsm_time_stamps": [
                "fh"
            ],
            "read_cz_lsm_event_list": [
                "fh"
            ],
            "read_cz_lsm_scan_info": [
                "fh"
            ],
            "read_tvips_header": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_fei_metadata": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_sem_metadata": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_nih_image_header": [
                "fh",
                "byteorder",
                "dtype",
                "count"
            ],
            "read_micromanager_metadata": [
                "fh"
            ],
            "imagej_metadata": [
                "data",
                "bytecounts",
                "byteorder"
            ],
            "imagej_description_dict": [
                "description"
            ],
            "imagej_description": [
                "shape",
                "rgb",
                "colormaped",
                "version",
                "hyperstack",
                "mode",
                "loop"
            ],
            "imagej_shape": [
                "shape",
                "rgb"
            ],
            "image_description_dict": [
                "description"
            ],
            "image_description": [
                "shape",
                "colormaped"
            ],
            "_replace_by": [
                "module_function",
                "package",
                "warn"
            ],
            "decode_floats": [
                "data"
            ],
            "decode_jpeg": [
                "encoded",
                "tables",
                "photometric",
                "ycbcr_subsampling",
                "ycbcr_positioning"
            ],
            "decode_packbits": [
                "encoded"
            ],
            "decode_lzw": [
                "encoded"
            ],
            "unpack_ints": [
                "data",
                "dtype",
                "itemsize",
                "runlen"
            ],
            "unpack_rgb": [
                "data",
                "dtype",
                "bitspersample",
                "rescale"
            ],
            "reverse_bitorder": [
                "data"
            ],
            "apply_colormap": [
                "image",
                "colormap",
                "contig"
            ],
            "reorient": [
                "image",
                "orientation"
            ],
            "reshape_nd": [
                "image",
                "ndim"
            ],
            "squeeze_axes": [
                "shape",
                "axes",
                "skip"
            ],
            "transpose_axes": [
                "image",
                "axes",
                "asaxes"
            ],
            "reshape_axes": [
                "axes",
                "shape",
                "newshape"
            ],
            "stack_pages": [
                "pages",
                "memmap",
                "tempdir"
            ],
            "stripnull": [
                "string",
                "null"
            ],
            "stripascii": [
                "string"
            ],
            "astype": [
                "value",
                "types"
            ],
            "format_size": [
                "size"
            ],
            "sequence": [
                "value"
            ],
            "product": [
                "iterable"
            ],
            "natural_sorted": [
                "iterable"
            ],
            "excel_datetime": [
                "timestamp",
                "epoch"
            ],
            "julian_datetime": [
                "julianday",
                "milisecond"
            ],
            "parse_kwargs": [
                "kwargs"
            ],
            "update_kwargs": [
                "kwargs"
            ],
            "imshow": [
                "data",
                "title",
                "vmin",
                "vmax",
                "cmap",
                "bitspersample",
                "photometric",
                "interpolation",
                "dpi",
                "figure",
                "subplot",
                "maxdim"
            ],
            "_app_show": [],
            "askopenfilename": [],
            "main": [
                "argv"
            ],
            "TiffWriter": {
                "__init__": [
                    "self",
                    "file",
                    "append",
                    "bigtiff",
                    "byteorder",
                    "software",
                    "imagej"
                ],
                "save": [
                    "self",
                    "data",
                    "photometric",
                    "planarconfig",
                    "tile",
                    "contiguous",
                    "compress",
                    "colormap",
                    "description",
                    "datetime",
                    "resolution",
                    "metadata",
                    "extratags"
                ],
                "_write_remaining_pages": [
                    "self"
                ],
                "_write_image_description": [
                    "self"
                ],
                "_now": [
                    "self"
                ],
                "close": [
                    "self",
                    "truncate"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ]
            },
            "lazyattr": {
                "__init__": [
                    "self",
                    "func"
                ],
                "__get__": [
                    "self",
                    "instance",
                    "owner"
                ]
            },
            "TiffFile": {
                "__init__": [
                    "self",
                    "arg",
                    "name",
                    "offset",
                    "size",
                    "multifile",
                    "multifile_close",
                    "pages",
                    "fastij",
                    "is_ome"
                ],
                "filehandle": [
                    "self"
                ],
                "filename": [
                    "self"
                ],
                "close": [
                    "self"
                ],
                "_fromfile": [
                    "self",
                    "pages",
                    "fastij"
                ],
                "_fix_lsm_strip_offsets": [
                    "self"
                ],
                "_fix_lsm_strip_byte_counts": [
                    "self"
                ],
                "asarray": [
                    "self",
                    "key",
                    "series",
                    "memmap",
                    "tempdir"
                ],
                "series": [
                    "self"
                ],
                "_fluoview_series": [
                    "self"
                ],
                "_lsm_series": [
                    "self"
                ],
                "_imagej_series": [
                    "self"
                ],
                "_nih_series": [
                    "self"
                ],
                "_ome_series": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__iter__": [
                    "self"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ],
                "__str__": [
                    "self"
                ],
                "info": [
                    "self",
                    "series",
                    "pages"
                ],
                "fstat": [
                    "self"
                ],
                "is_bigtiff": [
                    "self"
                ],
                "is_rgb": [
                    "self"
                ],
                "is_indexed": [
                    "self"
                ],
                "is_mdgel": [
                    "self"
                ],
                "is_mediacy": [
                    "self"
                ],
                "is_stk": [
                    "self"
                ],
                "is_lsm": [
                    "self"
                ],
                "is_vista": [
                    "self"
                ],
                "is_imagej": [
                    "self"
                ],
                "is_micromanager": [
                    "self"
                ],
                "is_nih": [
                    "self"
                ],
                "is_fluoview": [
                    "self"
                ],
                "is_ome": [
                    "self"
                ],
                "is_scn": [
                    "self"
                ],
                "is_tvips": [
                    "self"
                ],
                "is_fei": [
                    "self"
                ],
                "is_sem": [
                    "self"
                ]
            },
            "TiffPage": {
                "__init__": [
                    "self",
                    "parent",
                    "skip"
                ],
                "_fromfile": [
                    "self",
                    "skip"
                ],
                "_process_tags": [
                    "self"
                ],
                "_patch_imagej": [
                    "self"
                ],
                "asarray": [
                    "self",
                    "squeeze",
                    "colormapped",
                    "rgbonly",
                    "scale_mdgel",
                    "memmap",
                    "reopen",
                    "maxsize"
                ],
                "_byte_counts_offsets": [
                    "self"
                ],
                "_is_memmappable": [
                    "self",
                    "rgbonly",
                    "colormapped"
                ],
                "is_contiguous": [
                    "self"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "__str__": [
                    "self"
                ],
                "info": [
                    "self"
                ],
                "uic_tags": [
                    "self"
                ],
                "imagej_tags": [
                    "self"
                ],
                "is_rgb": [
                    "self"
                ],
                "is_contig": [
                    "self"
                ],
                "is_indexed": [
                    "self"
                ],
                "is_tiled": [
                    "self"
                ],
                "is_reduced": [
                    "self"
                ],
                "is_chroma_subsampled": [
                    "self"
                ],
                "is_mdgel": [
                    "self"
                ],
                "is_mediacy": [
                    "self"
                ],
                "is_stk": [
                    "self"
                ],
                "is_lsm": [
                    "self"
                ],
                "is_fluoview": [
                    "self"
                ],
                "is_nih": [
                    "self"
                ],
                "is_sgi": [
                    "self"
                ],
                "is_vista": [
                    "self"
                ],
                "is_ome": [
                    "self"
                ],
                "is_scn": [
                    "self"
                ],
                "is_shaped": [
                    "self"
                ],
                "is_imagej": [
                    "self"
                ],
                "is_micromanager": [
                    "self"
                ],
                "is_tvips": [
                    "self"
                ],
                "is_fei": [
                    "self"
                ],
                "is_sem": [
                    "self"
                ]
            },
            "TiffTag": {
                "__init__": [
                    "self",
                    "arg"
                ],
                "_fromdata": [
                    "self",
                    "code",
                    "dtype",
                    "count",
                    "value",
                    "name"
                ],
                "_fromfile": [
                    "self",
                    "parent"
                ],
                "_fix_lsm_bitspersample": [
                    "self",
                    "parent"
                ],
                "as_str": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            },
            "TiffPageSeries": {
                "__init__": [
                    "self",
                    "pages",
                    "shape",
                    "dtype",
                    "axes",
                    "parent"
                ],
                "asarray": [
                    "self",
                    "memmap"
                ],
                "offset": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__iter__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            },
            "TiffSequence": {
                "__init__": [
                    "self",
                    "files",
                    "imread",
                    "pattern"
                ],
                "__str__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ],
                "close": [
                    "self"
                ],
                "asarray": [
                    "self",
                    "memmap",
                    "tempdir"
                ],
                "_parse": [
                    "self"
                ]
            },
            "Record": {
                "__init__": [
                    "self",
                    "arg"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "__setattr__": [
                    "self",
                    "name",
                    "value"
                ],
                "__str__": [
                    "self"
                ]
            },
            "TiffTags": {
                "__str__": [
                    "self"
                ]
            },
            "FileHandle": {
                "__init__": [
                    "self",
                    "file",
                    "mode",
                    "name",
                    "offset",
                    "size"
                ],
                "open": [
                    "self"
                ],
                "read": [
                    "self",
                    "size"
                ],
                "write": [
                    "self",
                    "bytestring"
                ],
                "flush": [
                    "self"
                ],
                "memmap_array": [
                    "self",
                    "dtype",
                    "shape",
                    "offset",
                    "mode",
                    "order"
                ],
                "read_array": [
                    "self",
                    "dtype",
                    "count"
                ],
                "read_record": [
                    "self",
                    "dtype",
                    "shape",
                    "byteorder"
                ],
                "write_array": [
                    "self",
                    "data"
                ],
                "tell": [
                    "self"
                ],
                "seek": [
                    "self",
                    "offset",
                    "whence"
                ],
                "close": [
                    "self"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "name": [
                    "self"
                ],
                "dirname": [
                    "self"
                ],
                "path": [
                    "self"
                ],
                "size": [
                    "self"
                ],
                "closed": [
                    "self"
                ]
            },
            "TIFF_SUBFILE_TYPES": {
                "__getitem__": [
                    "self",
                    "key"
                ]
            }
        },
        "skimage.exposure._adapthist": {
            "equalize_adapthist": [
                "image",
                "kernel_size",
                "clip_limit",
                "nbins"
            ],
            "_clahe": [
                "image",
                "kernel_size",
                "clip_limit",
                "nbins"
            ],
            "clip_histogram": [
                "hist",
                "clip_limit"
            ],
            "map_histogram": [
                "hist",
                "min_val",
                "max_val",
                "n_pixels"
            ],
            "interpolate": [
                "image",
                "xslice",
                "yslice",
                "mapLU",
                "mapRU",
                "mapLB",
                "mapRB",
                "lut"
            ]
        },
        "skimage.exposure.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.exposure": {},
        "skimage.exposure.exposure": {
            "histogram": [
                "image",
                "nbins"
            ],
            "cumulative_distribution": [
                "image",
                "nbins"
            ],
            "equalize_hist": [
                "image",
                "nbins",
                "mask"
            ],
            "intensity_range": [
                "image",
                "range_values",
                "clip_negative"
            ],
            "rescale_intensity": [
                "image",
                "in_range",
                "out_range"
            ],
            "_assert_non_negative": [
                "image"
            ],
            "adjust_gamma": [
                "image",
                "gamma",
                "gain"
            ],
            "adjust_log": [
                "image",
                "gain",
                "inv"
            ],
            "adjust_sigmoid": [
                "image",
                "cutoff",
                "gain",
                "inv"
            ],
            "is_low_contrast": [
                "image",
                "fraction_threshold",
                "lower_percentile",
                "upper_percentile",
                "method"
            ]
        },
        "skimage.exposure.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.exposure.tests.test_exposure": {
            "test_negative_overflow": [],
            "test_all_negative_image": [],
            "test_equalize_uint8_approx": [],
            "test_equalize_ubyte": [],
            "test_equalize_float": [],
            "test_equalize_masked": [],
            "check_cdf_slope": [
                "cdf"
            ],
            "test_intensity_range_uint8": [
                "test_input",
                "expected"
            ],
            "test_intensity_range_float": [
                "test_input",
                "expected"
            ],
            "test_intensity_range_clipped_float": [],
            "test_rescale_stretch": [],
            "test_rescale_shrink": [],
            "test_rescale_in_range": [],
            "test_rescale_in_range_clip": [],
            "test_rescale_out_range": [],
            "test_rescale_named_in_range": [],
            "test_rescale_named_out_range": [],
            "test_rescale_uint12_limits": [],
            "test_rescale_uint14_limits": [],
            "test_adapthist_grayscale": [],
            "test_adapthist_color": [],
            "test_adapthist_alpha": [],
            "peak_snr": [
                "img1",
                "img2"
            ],
            "norm_brightness_err": [
                "img1",
                "img2"
            ],
            "test_adjust_gamma_one": [],
            "test_adjust_gamma_zero": [],
            "test_adjust_gamma_less_one": [],
            "test_adjust_gamma_greater_one": [],
            "test_adjust_gamma_neggative": [],
            "test_adjust_log": [],
            "test_adjust_inv_log": [],
            "test_adjust_sigmoid_cutoff_one": [],
            "test_adjust_sigmoid_cutoff_zero": [],
            "test_adjust_sigmoid_cutoff_half": [],
            "test_adjust_inv_sigmoid_cutoff_half": [],
            "test_negative": [],
            "test_is_low_contrast": []
        },
        "skimage.segmentation.slic_superpixels": {
            "slic": [
                "image",
                "n_segments",
                "compactness",
                "max_iter",
                "sigma",
                "spacing",
                "multichannel",
                "convert2lab",
                "enforce_connectivity",
                "min_size_factor",
                "max_size_factor",
                "slic_zero"
            ]
        },
        "skimage.segmentation.boundaries": {
            "_find_boundaries_subpixel": [
                "label_img"
            ],
            "find_boundaries": [
                "label_img",
                "connectivity",
                "mode",
                "background"
            ],
            "mark_boundaries": [
                "image",
                "label_img",
                "color",
                "outline_color",
                "mode",
                "background_label"
            ]
        },
        "skimage.segmentation._felzenszwalb": {
            "felzenszwalb": [
                "image",
                "scale",
                "sigma",
                "min_size",
                "multichannel"
            ]
        },
        "skimage.segmentation.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.segmentation._chan_vese": {
            "_cv_curvature": [
                "phi"
            ],
            "_cv_calculate_variation": [
                "image",
                "phi",
                "mu",
                "lambda1",
                "lambda2",
                "dt"
            ],
            "_cv_heavyside": [
                "x",
                "eps"
            ],
            "_cv_delta": [
                "x",
                "eps"
            ],
            "_cv_calculate_averages": [
                "image",
                "Hphi"
            ],
            "_cv_difference_from_average_term": [
                "image",
                "Hphi",
                "lambda_pos",
                "lambda_neg"
            ],
            "_cv_edge_length_term": [
                "phi",
                "mu"
            ],
            "_cv_energy": [
                "image",
                "phi",
                "mu",
                "lambda1",
                "lambda2"
            ],
            "_cv_reset_level_set": [
                "phi"
            ],
            "_cv_checkerboard": [
                "image_size",
                "square_size"
            ],
            "_cv_large_disk": [
                "image_size"
            ],
            "_cv_small_disk": [
                "image_size"
            ],
            "_cv_init_level_set": [
                "init_level_set",
                "image_shape"
            ],
            "chan_vese": [
                "image",
                "mu",
                "lambda1",
                "lambda2",
                "tol",
                "max_iter",
                "dt",
                "init_level_set",
                "extended_output"
            ]
        },
        "skimage.segmentation": {},
        "skimage.segmentation.active_contour_model": {
            "active_contour": [
                "image",
                "snake",
                "alpha",
                "beta",
                "w_line",
                "w_edge",
                "gamma",
                "bc",
                "max_px_move",
                "max_iterations",
                "convergence"
            ]
        },
        "skimage.segmentation._quickshift": {
            "quickshift": [
                "image",
                "ratio",
                "kernel_size",
                "max_dist",
                "return_tree",
                "sigma",
                "convert2lab",
                "random_seed"
            ]
        },
        "skimage.segmentation._join": {
            "join_segmentations": [
                "s1",
                "s2"
            ],
            "relabel_from_one": [
                "label_field"
            ],
            "relabel_sequential": [
                "label_field",
                "offset"
            ]
        },
        "skimage.segmentation.random_walker_segmentation": {
            "_make_graph_edges_3d": [
                "n_x",
                "n_y",
                "n_z"
            ],
            "_compute_weights_3d": [
                "data",
                "spacing",
                "beta",
                "eps",
                "multichannel"
            ],
            "_compute_gradients_3d": [
                "data",
                "spacing"
            ],
            "_make_laplacian_sparse": [
                "edges",
                "weights"
            ],
            "_clean_labels_ar": [
                "X",
                "labels",
                "copy"
            ],
            "_buildAB": [
                "lap_sparse",
                "labels"
            ],
            "_mask_edges_weights": [
                "edges",
                "weights",
                "mask"
            ],
            "_build_laplacian": [
                "data",
                "spacing",
                "mask",
                "beta",
                "multichannel"
            ],
            "_check_isolated_seeds": [
                "labels"
            ],
            "random_walker": [
                "data",
                "labels",
                "beta",
                "mode",
                "tol",
                "copy",
                "multichannel",
                "return_full_prob",
                "spacing"
            ],
            "_solve_bf": [
                "lap_sparse",
                "B",
                "return_full_prob"
            ],
            "_solve_cg": [
                "lap_sparse",
                "B",
                "tol",
                "return_full_prob"
            ],
            "_solve_cg_mg": [
                "lap_sparse",
                "B",
                "tol",
                "return_full_prob"
            ]
        },
        "skimage.segmentation._clear_border": {
            "clear_border": [
                "labels",
                "buffer_size",
                "bgval",
                "in_place"
            ]
        },
        "skimage.segmentation.morphsnakes": {
            "sup_inf": [
                "u"
            ],
            "inf_sup": [
                "u"
            ],
            "_check_input": [
                "image",
                "init_level_set"
            ],
            "_init_level_set": [
                "init_level_set",
                "image_shape"
            ],
            "circle_level_set": [
                "image_shape",
                "center",
                "radius"
            ],
            "checkerboard_level_set": [
                "image_shape",
                "square_size"
            ],
            "inverse_gaussian_gradient": [
                "image",
                "alpha",
                "sigma"
            ],
            "morphological_chan_vese": [
                "image",
                "iterations",
                "init_level_set",
                "smoothing",
                "lambda1",
                "lambda2",
                "iter_callback"
            ],
            "morphological_geodesic_active_contour": [
                "gimage",
                "iterations",
                "init_level_set",
                "smoothing",
                "threshold",
                "balloon",
                "iter_callback"
            ],
            "_fcycle": {
                "__init__": [
                    "self",
                    "iterable"
                ],
                "__call__": [
                    "self"
                ]
            }
        },
        "skimage.segmentation.tests.test_felzenszwalb": {
            "test_grey": [],
            "test_minsize": [],
            "test_3D": [],
            "test_color": [],
            "test_merging": []
        },
        "skimage.segmentation.tests.test_active_contour_model": {
            "test_periodic_reference": [],
            "test_fixed_reference": [],
            "test_free_reference": [],
            "test_RGB": [],
            "test_end_points": [],
            "test_bad_input": []
        },
        "skimage.segmentation.tests.test_morphsnakes": {
            "gaussian_blob": [],
            "test_morphsnakes_incorrect_image_shape": [],
            "test_morphsnakes_incorrect_ndim": [],
            "test_morphsnakes_black": [],
            "test_morphsnakes_simple_shape_chan_vese": [],
            "test_morphsnakes_simple_shape_geodesic_active_contour": [],
            "test_init_level_sets": [],
            "test_morphsnakes_3d": []
        },
        "skimage.segmentation.tests.test_random_walker": {
            "make_2d_syntheticdata": [
                "lx",
                "ly"
            ],
            "make_3d_syntheticdata": [
                "lx",
                "ly",
                "lz"
            ],
            "test_2d_bf": [],
            "test_2d_cg": [],
            "test_2d_cg_mg": [],
            "test_types": [],
            "test_reorder_labels": [],
            "test_2d_inactive": [],
            "test_3d": [],
            "test_3d_inactive": [],
            "test_multispectral_2d": [],
            "test_multispectral_3d": [],
            "test_spacing_0": [],
            "test_spacing_1": [],
            "test_trivial_cases": [],
            "test_length2_spacing": [],
            "test_bad_inputs": [],
            "test_isolated_seeds": []
        },
        "skimage.segmentation.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.segmentation.tests.test_slic": {
            "test_color_2d": [],
            "test_multichannel_2d": [],
            "test_gray_2d": [],
            "test_color_3d": [],
            "test_gray_3d": [],
            "test_list_sigma": [],
            "test_spacing": [],
            "test_invalid_lab_conversion": [],
            "test_enforce_connectivity": [],
            "test_slic_zero": [],
            "test_more_segments_than_pixels": []
        },
        "skimage.segmentation.tests.test_join": {
            "test_join_segmentations": [],
            "test_relabel_sequential_offset1": [],
            "test_relabel_sequential_offset5": [],
            "test_relabel_sequential_offset5_with0": [],
            "test_relabel_sequential_dtype": []
        },
        "skimage.segmentation.tests.test_boundaries": {
            "test_find_boundaries": [],
            "test_find_boundaries_bool": [],
            "test_mark_boundaries": [],
            "test_mark_boundaries_bool": [],
            "test_mark_boundaries_subpixel": []
        },
        "skimage.segmentation.tests.test_clear_border": {
            "test_clear_border": [],
            "test_clear_border_3d": [],
            "test_clear_border_non_binary": [],
            "test_clear_border_non_binary_3d": [],
            "test_clear_border_non_binary_inplace": [],
            "test_clear_border_non_binary_inplace_3d": []
        },
        "skimage.segmentation.tests.test_quickshift": {
            "test_grey": [],
            "test_color": []
        },
        "skimage.segmentation.tests.test_chan_vese": {
            "test_chan_vese_flat_level_set": [],
            "test_chan_vese_small_disk_level_set": [],
            "test_chan_vese_simple_shape": [],
            "test_chan_vese_extended_output": [],
            "test_chan_vese_remove_noise": [],
            "test_chan_vese_incorrect_image_type": [],
            "test_chan_vese_gap_closing": [],
            "test_chan_vese_incorrect_level_set": [],
            "test_chan_vese_blank_image": []
        },
        "skimage.transform.finite_radon_transform": {
            "frt2": [
                "a"
            ],
            "ifrt2": [
                "a"
            ]
        },
        "skimage.transform.radon_transform": {
            "radon": [
                "image",
                "theta",
                "circle"
            ],
            "_sinogram_circle_to_square": [
                "sinogram"
            ],
            "iradon": [
                "radon_image",
                "theta",
                "output_size",
                "filter",
                "interpolation",
                "circle"
            ],
            "order_angles_golden_ratio": [
                "theta"
            ],
            "iradon_sart": [
                "radon_image",
                "theta",
                "image",
                "projection_shifts",
                "clip",
                "relaxation"
            ]
        },
        "skimage.transform.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.transform.hough_transform": {
            "hough_line_peaks": [
                "hspace",
                "angles",
                "dists",
                "min_distance",
                "min_angle",
                "threshold",
                "num_peaks"
            ],
            "hough_circle": [
                "image",
                "radius",
                "normalize",
                "full_output"
            ],
            "hough_ellipse": [
                "image",
                "threshold",
                "accuracy",
                "min_size",
                "max_size"
            ],
            "hough_line": [
                "image",
                "theta"
            ],
            "probabilistic_hough_line": [
                "image",
                "threshold",
                "line_length",
                "line_gap",
                "theta",
                "seed"
            ],
            "hough_circle_peaks": [
                "hspaces",
                "radii",
                "min_xdistance",
                "min_ydistance",
                "threshold",
                "num_peaks",
                "total_num_peaks",
                "normalize"
            ]
        },
        "skimage.transform.seam_carving": {
            "seam_carve": [
                "image",
                "energy_map",
                "mode",
                "num",
                "border",
                "force_copy"
            ]
        },
        "skimage.transform": {},
        "skimage.transform._geometric": {
            "_to_ndimage_mode": [
                "mode"
            ],
            "_center_and_normalize_points": [
                "points"
            ],
            "_umeyama": [
                "src",
                "dst",
                "estimate_scale"
            ],
            "estimate_transform": [
                "ttype",
                "src",
                "dst"
            ],
            "matrix_transform": [
                "coords",
                "matrix"
            ],
            "GeometricTransform": {
                "__call__": [
                    "self",
                    "coords"
                ],
                "inverse": [
                    "self",
                    "coords"
                ],
                "residuals": [
                    "self",
                    "src",
                    "dst"
                ],
                "__add__": [
                    "self",
                    "other"
                ]
            },
            "FundamentalMatrixTransform": {
                "__init__": [
                    "self",
                    "matrix"
                ],
                "__call__": [
                    "self",
                    "coords"
                ],
                "inverse": [
                    "self",
                    "coords"
                ],
                "_setup_constraint_matrix": [
                    "self",
                    "src",
                    "dst"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ],
                "residuals": [
                    "self",
                    "src",
                    "dst"
                ]
            },
            "EssentialMatrixTransform": {
                "__init__": [
                    "self",
                    "rotation",
                    "translation",
                    "matrix"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ]
            },
            "ProjectiveTransform": {
                "__init__": [
                    "self",
                    "matrix"
                ],
                "_inv_matrix": [
                    "self"
                ],
                "_apply_mat": [
                    "self",
                    "coords",
                    "matrix"
                ],
                "__call__": [
                    "self",
                    "coords"
                ],
                "inverse": [
                    "self",
                    "coords"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ],
                "__add__": [
                    "self",
                    "other"
                ]
            },
            "AffineTransform": {
                "__init__": [
                    "self",
                    "matrix",
                    "scale",
                    "rotation",
                    "shear",
                    "translation"
                ],
                "scale": [
                    "self"
                ],
                "rotation": [
                    "self"
                ],
                "shear": [
                    "self"
                ],
                "translation": [
                    "self"
                ]
            },
            "PiecewiseAffineTransform": {
                "__init__": [
                    "self"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ],
                "__call__": [
                    "self",
                    "coords"
                ],
                "inverse": [
                    "self",
                    "coords"
                ]
            },
            "EuclideanTransform": {
                "__init__": [
                    "self",
                    "matrix",
                    "rotation",
                    "translation"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ],
                "rotation": [
                    "self"
                ],
                "translation": [
                    "self"
                ]
            },
            "SimilarityTransform": {
                "__init__": [
                    "self",
                    "matrix",
                    "scale",
                    "rotation",
                    "translation"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst"
                ],
                "scale": [
                    "self"
                ]
            },
            "PolynomialTransform": {
                "__init__": [
                    "self",
                    "params"
                ],
                "estimate": [
                    "self",
                    "src",
                    "dst",
                    "order"
                ],
                "__call__": [
                    "self",
                    "coords"
                ],
                "inverse": [
                    "self",
                    "coords"
                ]
            }
        },
        "skimage.transform.pyramids": {
            "_smooth": [
                "image",
                "sigma",
                "mode",
                "cval",
                "multichannel"
            ],
            "_check_factor": [
                "factor"
            ],
            "pyramid_reduce": [
                "image",
                "downscale",
                "sigma",
                "order",
                "mode",
                "cval",
                "multichannel"
            ],
            "pyramid_expand": [
                "image",
                "upscale",
                "sigma",
                "order",
                "mode",
                "cval",
                "multichannel"
            ],
            "pyramid_gaussian": [
                "image",
                "max_layer",
                "downscale",
                "sigma",
                "order",
                "mode",
                "cval",
                "multichannel"
            ],
            "pyramid_laplacian": [
                "image",
                "max_layer",
                "downscale",
                "sigma",
                "order",
                "mode",
                "cval",
                "multichannel"
            ]
        },
        "skimage.transform._warps": {
            "_multichannel_default": [
                "multichannel",
                "ndim"
            ],
            "resize": [
                "image",
                "output_shape",
                "order",
                "mode",
                "cval",
                "clip",
                "preserve_range",
                "anti_aliasing",
                "anti_aliasing_sigma"
            ],
            "rescale": [
                "image",
                "scale",
                "order",
                "mode",
                "cval",
                "clip",
                "preserve_range",
                "multichannel",
                "anti_aliasing",
                "anti_aliasing_sigma"
            ],
            "rotate": [
                "image",
                "angle",
                "resize",
                "center",
                "order",
                "mode",
                "cval",
                "clip",
                "preserve_range"
            ],
            "downscale_local_mean": [
                "image",
                "factors",
                "cval",
                "clip"
            ],
            "_swirl_mapping": [
                "xy",
                "center",
                "rotation",
                "strength",
                "radius"
            ],
            "swirl": [
                "image",
                "center",
                "strength",
                "radius",
                "rotation",
                "output_shape",
                "order",
                "mode",
                "cval",
                "clip",
                "preserve_range"
            ],
            "_stackcopy": [
                "a",
                "b"
            ],
            "warp_coords": [
                "coord_map",
                "shape",
                "dtype"
            ],
            "_clip_warp_output": [
                "input_image",
                "output_image",
                "order",
                "mode",
                "cval",
                "clip"
            ],
            "warp": [
                "image",
                "inverse_map",
                "map_args",
                "output_shape",
                "order",
                "mode",
                "cval",
                "clip",
                "preserve_range"
            ]
        },
        "skimage.transform.integral": {
            "integral_image": [
                "image"
            ],
            "integrate": [
                "ii",
                "start",
                "end"
            ]
        },
        "skimage.transform.tests.test_seam_carving": {
            "test_seam_carving": []
        },
        "skimage.transform.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.transform.tests.test_finite_radon_transform": {
            "test_frt": []
        },
        "skimage.transform.tests.test_radon_transform": {
            "_debug_plot": [
                "original",
                "result",
                "sinogram"
            ],
            "_rescale_intensity": [
                "x"
            ],
            "check_radon_center": [
                "shape",
                "circle"
            ],
            "test_radon_center": [
                "shape",
                "circle"
            ],
            "test_radon_center_rectangular": [
                "shape"
            ],
            "check_iradon_center": [
                "size",
                "theta",
                "circle"
            ],
            "test_iradon_center": [
                "size",
                "theta",
                "circle"
            ],
            "check_radon_iradon": [
                "interpolation_type",
                "filter_type"
            ],
            "test_radon_iradon": [
                "interpolation_type",
                "filter_type"
            ],
            "test_iradon_angles": [],
            "check_radon_iradon_minimal": [
                "shape",
                "slices"
            ],
            "generate_test_data_for_radon_iradon_minimal": [
                "shapes"
            ],
            "test_radon_iradon_minimal": [
                "shape",
                "coordinate"
            ],
            "test_reconstruct_with_wrong_angles": [],
            "_random_circle": [
                "shape"
            ],
            "test_radon_circle": [],
            "check_sinogram_circle_to_square": [
                "size"
            ],
            "test_sinogram_circle_to_square": [
                "size"
            ],
            "check_radon_iradon_circle": [
                "interpolation",
                "shape",
                "output_size"
            ],
            "test_radon_iradon_circle": [
                "shape",
                "interpolation",
                "output_size"
            ],
            "test_order_angles_golden_ratio": [],
            "test_iradon_sart": []
        },
        "skimage.transform.tests.test_geometric": {
            "test_estimate_transform": [],
            "test_matrix_transform": [],
            "test_euclidean_estimation": [],
            "test_euclidean_init": [],
            "test_similarity_estimation": [],
            "test_similarity_init": [],
            "test_affine_estimation": [],
            "test_affine_init": [],
            "test_piecewise_affine": [],
            "test_fundamental_matrix_estimation": [],
            "test_fundamental_matrix_residuals": [],
            "test_fundamental_matrix_forward": [],
            "test_fundamental_matrix_inverse": [],
            "test_essential_matrix_init": [],
            "test_essential_matrix_estimation": [],
            "test_essential_matrix_forward": [],
            "test_essential_matrix_inverse": [],
            "test_essential_matrix_residuals": [],
            "test_projective_estimation": [],
            "test_projective_init": [],
            "test_polynomial_estimation": [],
            "test_polynomial_init": [],
            "test_polynomial_default_order": [],
            "test_polynomial_inverse": [],
            "test_union": [],
            "test_union_differing_types": [],
            "test_geometric_tform": [],
            "test_invalid_input": [],
            "test_degenerate": []
        },
        "skimage.transform.tests.test_integral": {
            "test_validity": [],
            "test_basic": [],
            "test_single": [],
            "test_vectorized_integrate": []
        },
        "skimage.transform.tests.test_pyramids": {
            "test_pyramid_reduce_rgb": [],
            "test_pyramid_reduce_gray": [],
            "test_pyramid_reduce_nd": [],
            "test_pyramid_expand_rgb": [],
            "test_pyramid_expand_gray": [],
            "test_pyramid_expand_nd": [],
            "test_build_gaussian_pyramid_rgb": [],
            "test_build_gaussian_pyramid_gray": [],
            "test_build_gaussian_pyramid_nd": [],
            "test_build_laplacian_pyramid_rgb": [],
            "test_build_laplacian_pyramid_nd": [],
            "test_laplacian_pyramid_max_layers": [],
            "test_check_factor": []
        },
        "skimage.transform.tests.test_warps": {
            "test_stackcopy": [],
            "test_warp_tform": [],
            "test_warp_callable": [],
            "test_warp_matrix": [],
            "test_warp_nd": [],
            "test_warp_clip": [],
            "test_homography": [],
            "test_rotate": [],
            "test_rotate_resize": [],
            "test_rotate_center": [],
            "test_rotate_resize_center": [],
            "test_rescale": [],
            "test_rescale_invalid_scale": [],
            "test_rescale_multichannel": [],
            "test_rescale_multichannel_multiscale": [],
            "test_rescale_multichannel_defaults": [],
            "test_resize2d": [],
            "test_resize3d_keep": [],
            "test_resize3d_resize": [],
            "test_resize3d_2din_3dout": [],
            "test_resize2d_4d": [],
            "test_resize_nd": [],
            "test_resize3d_bilinear": [],
            "test_swirl": [],
            "test_const_cval_out_of_range": [],
            "test_warp_identity": [],
            "test_warp_coords_example": [],
            "test_downsize": [],
            "test_downsize_anti_aliasing": [],
            "test_downsize_anti_aliasing_invalid_stddev": [],
            "test_downscale": [],
            "test_downscale_anti_aliasing": [],
            "test_downscale_local_mean": [],
            "test_invalid": [],
            "test_inverse": [],
            "test_slow_warp_nonint_oshape": [],
            "test_keep_range": []
        },
        "skimage.transform.tests.test_hough_transform": {
            "test_hough_line": [],
            "test_hough_line_angles": [],
            "test_hough_line_bad_input": [],
            "test_probabilistic_hough": [],
            "test_probabilistic_hough_seed": [],
            "test_probabilistic_hough_bad_input": [],
            "test_hough_line_peaks": [],
            "test_hough_line_peaks_ordered": [],
            "test_hough_line_peaks_dist": [],
            "test_hough_line_peaks_angle": [],
            "check_hough_line_peaks_angle": [],
            "test_hough_line_peaks_num": [],
            "test_hough_line_peaks_zero_input": [],
            "test_hough_circle": [],
            "test_hough_circle_extended": [],
            "test_hough_circle_peaks": [],
            "test_hough_circle_peaks_total_peak": [],
            "test_hough_ellipse_zero_angle": [],
            "test_hough_ellipse_non_zero_posangle1": [],
            "test_hough_ellipse_non_zero_posangle2": [],
            "test_hough_ellipse_non_zero_posangle3": [],
            "test_hough_ellipse_non_zero_posangle4": [],
            "test_hough_ellipse_non_zero_negangle1": [],
            "test_hough_ellipse_non_zero_negangle2": [],
            "test_hough_ellipse_non_zero_negangle3": [],
            "test_hough_ellipse_non_zero_negangle4": [],
            "test_hough_ellipse_all_black_img": []
        },
        "skimage.scripts": {},
        "skimage.scripts.skivi": {
            "main": []
        },
        "skimage.future.manual_segmentation": {
            "_mask_from_vertices": [
                "vertices",
                "shape",
                "label"
            ],
            "_draw_polygon": [
                "ax",
                "vertices",
                "alpha"
            ],
            "manual_polygon_segmentation": [
                "image",
                "alpha",
                "return_all"
            ],
            "manual_lasso_segmentation": [
                "image",
                "alpha",
                "return_all"
            ]
        },
        "skimage.future.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.future": {},
        "skimage.future.graph.rag": {
            "_edge_generator_from_csr": [
                "csr_matrix"
            ],
            "min_weight": [
                "graph",
                "src",
                "dst",
                "n"
            ],
            "_add_edge_filter": [
                "values",
                "graph"
            ],
            "rag_mean_color": [
                "image",
                "labels",
                "connectivity",
                "mode",
                "sigma"
            ],
            "rag_boundary": [
                "labels",
                "edge_map",
                "connectivity"
            ],
            "show_rag": [
                "labels",
                "rag",
                "image",
                "border_color",
                "edge_width",
                "edge_cmap",
                "img_cmap",
                "in_place",
                "ax"
            ],
            "RAG": {
                "__init__": [
                    "self",
                    "label_image",
                    "connectivity",
                    "data"
                ],
                "merge_nodes": [
                    "self",
                    "src",
                    "dst",
                    "weight_func",
                    "in_place",
                    "extra_arguments",
                    "extra_keywords"
                ],
                "add_node": [
                    "self",
                    "n",
                    "attr_dict"
                ],
                "add_edge": [
                    "self",
                    "u",
                    "v",
                    "attr_dict"
                ],
                "copy": [
                    "self"
                ],
                "fresh_copy": [
                    "self"
                ],
                "next_id": [
                    "self"
                ],
                "_add_node_silent": [
                    "self",
                    "n"
                ]
            }
        },
        "skimage.future.graph.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.future.graph": {},
        "skimage.future.graph.graph_merge": {
            "_revalidate_node_edges": [
                "rag",
                "node",
                "heap_list"
            ],
            "_rename_node": [
                "graph",
                "node_id",
                "copy_id"
            ],
            "_invalidate_edge": [
                "graph",
                "n1",
                "n2"
            ],
            "merge_hierarchical": [
                "labels",
                "rag",
                "thresh",
                "rag_copy",
                "in_place_merge",
                "merge_func",
                "weight_func"
            ]
        },
        "skimage.future.graph.graph_cut": {
            "cut_threshold": [
                "labels",
                "rag",
                "thresh",
                "in_place"
            ],
            "cut_normalized": [
                "labels",
                "rag",
                "thresh",
                "num_cuts",
                "in_place",
                "max_edge"
            ],
            "partition_by_cut": [
                "cut",
                "rag"
            ],
            "get_min_ncut": [
                "ev",
                "d",
                "w",
                "num_cuts"
            ],
            "_label_all": [
                "rag",
                "attr_name"
            ],
            "_ncut_relabel": [
                "rag",
                "thresh",
                "num_cuts"
            ]
        },
        "skimage.future.graph._ncut": {
            "DW_matrices": [
                "graph"
            ],
            "ncut_cost": [
                "cut",
                "D",
                "W"
            ]
        },
        "skimage.filters._rank_order": {
            "rank_order": [
                "image"
            ]
        },
        "skimage.filters.thresholding": {
            "_try_all": [
                "image",
                "methods",
                "figsize",
                "num_cols",
                "verbose"
            ],
            "try_all_threshold": [
                "image",
                "figsize",
                "verbose"
            ],
            "threshold_local": [
                "image",
                "block_size",
                "method",
                "offset",
                "mode",
                "param",
                "cval"
            ],
            "threshold_adaptive": [
                "image",
                "block_size",
                "method",
                "offset",
                "mode",
                "param"
            ],
            "threshold_otsu": [
                "image",
                "nbins"
            ],
            "threshold_yen": [
                "image",
                "nbins"
            ],
            "threshold_isodata": [
                "image",
                "nbins",
                "return_all"
            ],
            "_cross_entropy": [
                "image",
                "threshold",
                "bins"
            ],
            "threshold_li": [
                "image"
            ],
            "threshold_minimum": [
                "image",
                "nbins",
                "max_iter"
            ],
            "threshold_mean": [
                "image"
            ],
            "threshold_triangle": [
                "image",
                "nbins"
            ],
            "_mean_std": [
                "image",
                "w"
            ],
            "threshold_niblack": [
                "image",
                "window_size",
                "k"
            ],
            "threshold_sauvola": [
                "image",
                "window_size",
                "k",
                "r"
            ],
            "apply_hysteresis_threshold": [
                "image",
                "low",
                "high"
            ]
        },
        "skimage.filters.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.filters._frangi": {
            "_frangi_hessian_common_filter": [
                "image",
                "scale_range",
                "scale_step",
                "beta1",
                "beta2"
            ],
            "frangi": [
                "image",
                "scale_range",
                "scale_step",
                "beta1",
                "beta2",
                "black_ridges"
            ],
            "hessian": [
                "image",
                "scale_range",
                "scale_step",
                "beta1",
                "beta2"
            ]
        },
        "skimage.filters": {},
        "skimage.filters.lpi_filter": {
            "_min_limit": [
                "x",
                "val"
            ],
            "_centre": [
                "x",
                "oshape"
            ],
            "_pad": [
                "data",
                "shape"
            ],
            "forward": [
                "data",
                "impulse_response",
                "filter_params",
                "predefined_filter"
            ],
            "inverse": [
                "data",
                "impulse_response",
                "filter_params",
                "max_gain",
                "predefined_filter"
            ],
            "wiener": [
                "data",
                "impulse_response",
                "filter_params",
                "K",
                "predefined_filter"
            ],
            "constrained_least_squares": [
                "data",
                "lam",
                "impulse_response",
                "filter_params"
            ],
            "LPIFilter2D": {
                "__init__": [
                    "self",
                    "impulse_response"
                ],
                "_prepare": [
                    "self",
                    "data"
                ],
                "__call__": [
                    "self",
                    "data"
                ]
            }
        },
        "skimage.filters.edges": {
            "_mask_filter_result": [
                "result",
                "mask"
            ],
            "sobel": [
                "image",
                "mask"
            ],
            "sobel_h": [
                "image",
                "mask"
            ],
            "sobel_v": [
                "image",
                "mask"
            ],
            "scharr": [
                "image",
                "mask"
            ],
            "scharr_h": [
                "image",
                "mask"
            ],
            "scharr_v": [
                "image",
                "mask"
            ],
            "prewitt": [
                "image",
                "mask"
            ],
            "prewitt_h": [
                "image",
                "mask"
            ],
            "prewitt_v": [
                "image",
                "mask"
            ],
            "roberts": [
                "image",
                "mask"
            ],
            "roberts_pos_diag": [
                "image",
                "mask"
            ],
            "roberts_neg_diag": [
                "image",
                "mask"
            ],
            "laplace": [
                "image",
                "ksize",
                "mask"
            ]
        },
        "skimage.filters._gaussian": {
            "_convert_input": [
                "image",
                "preserve_range"
            ],
            "gaussian": [
                "image",
                "sigma",
                "output",
                "mode",
                "cval",
                "multichannel",
                "preserve_range",
                "truncate"
            ]
        },
        "skimage.filters._gabor": {
            "_sigma_prefactor": [
                "bandwidth"
            ],
            "gabor_kernel": [
                "frequency",
                "theta",
                "bandwidth",
                "sigma_x",
                "sigma_y",
                "n_stds",
                "offset"
            ],
            "gabor": [
                "image",
                "frequency",
                "theta",
                "bandwidth",
                "sigma_x",
                "sigma_y",
                "n_stds",
                "offset",
                "mode",
                "cval"
            ]
        },
        "skimage.filters.tests.test_median": {
            "test_median_in_filters": []
        },
        "skimage.filters.tests.test_edges": {
            "test_roberts_zeros": [],
            "test_roberts_diagonal1": [],
            "test_roberts_diagonal2": [],
            "test_sobel_zeros": [],
            "test_sobel_mask": [],
            "test_sobel_horizontal": [],
            "test_sobel_vertical": [],
            "test_sobel_h_zeros": [],
            "test_sobel_h_mask": [],
            "test_sobel_h_horizontal": [],
            "test_sobel_h_vertical": [],
            "test_sobel_v_zeros": [],
            "test_sobel_v_mask": [],
            "test_sobel_v_vertical": [],
            "test_sobel_v_horizontal": [],
            "test_scharr_zeros": [],
            "test_scharr_mask": [],
            "test_scharr_horizontal": [],
            "test_scharr_vertical": [],
            "test_scharr_h_zeros": [],
            "test_scharr_h_mask": [],
            "test_scharr_h_horizontal": [],
            "test_scharr_h_vertical": [],
            "test_scharr_v_zeros": [],
            "test_scharr_v_mask": [],
            "test_scharr_v_vertical": [],
            "test_scharr_v_horizontal": [],
            "test_prewitt_zeros": [],
            "test_prewitt_mask": [],
            "test_prewitt_horizontal": [],
            "test_prewitt_vertical": [],
            "test_prewitt_h_zeros": [],
            "test_prewitt_h_mask": [],
            "test_prewitt_h_horizontal": [],
            "test_prewitt_h_vertical": [],
            "test_prewitt_v_zeros": [],
            "test_prewitt_v_mask": [],
            "test_prewitt_v_vertical": [],
            "test_prewitt_v_horizontal": [],
            "test_laplace_zeros": [],
            "test_laplace_mask": [],
            "test_horizontal_mask_line": [
                "grad_func"
            ],
            "test_vertical_mask_line": [
                "grad_func"
            ],
            "test_range": []
        },
        "skimage.filters.tests.test_thresholding": {
            "test_otsu_camera_image": [],
            "test_otsu_coins_image": [],
            "test_otsu_coins_image_as_float": [],
            "test_otsu_astro_image": [],
            "test_otsu_one_color_image": [],
            "test_li_camera_image": [],
            "test_li_coins_image": [],
            "test_li_coins_image_as_float": [],
            "test_li_astro_image": [],
            "test_li_nan_image": [],
            "test_li_inf_image": [],
            "test_li_inf_minus_inf": [],
            "test_li_constant_image_with_nan": [],
            "test_yen_camera_image": [],
            "test_yen_coins_image": [],
            "test_yen_coins_image_as_float": [],
            "test_adaptive_even_block_size_error": [],
            "test_isodata_camera_image": [],
            "test_isodata_coins_image": [],
            "test_isodata_moon_image": [],
            "test_isodata_moon_image_negative_int": [],
            "test_isodata_moon_image_negative_float": [],
            "test_threshold_minimum": [],
            "test_threshold_minimum_synthetic": [],
            "test_threshold_minimum_failure": [],
            "test_mean": [],
            "test_triangle_uint_images": [],
            "test_triangle_float_images": [],
            "test_triangle_flip": [],
            "test_mean_std_2d": [],
            "test_mean_std_3d": [],
            "test_niblack_sauvola_pathological_image": [],
            "TestSimpleImage": {
                "setup": [
                    "self"
                ],
                "test_otsu": [
                    "self"
                ],
                "test_otsu_negative_int": [
                    "self"
                ],
                "test_otsu_float_image": [
                    "self"
                ],
                "test_li": [
                    "self"
                ],
                "test_li_negative_int": [
                    "self"
                ],
                "test_li_float_image": [
                    "self"
                ],
                "test_li_constant_image": [
                    "self"
                ],
                "test_yen": [
                    "self"
                ],
                "test_yen_negative_int": [
                    "self"
                ],
                "test_yen_float_image": [
                    "self"
                ],
                "test_yen_arange": [
                    "self"
                ],
                "test_yen_binary": [
                    "self"
                ],
                "test_yen_blank_zero": [
                    "self"
                ],
                "test_yen_blank_max": [
                    "self"
                ],
                "test_isodata": [
                    "self"
                ],
                "test_isodata_blank_zero": [
                    "self"
                ],
                "test_isodata_linspace": [
                    "self"
                ],
                "test_isodata_16bit": [
                    "self"
                ],
                "test_threshold_local_equals_adaptive": [
                    "self"
                ],
                "test_threshold_adaptive_generic": [
                    "self"
                ],
                "test_threshold_local_gaussian": [
                    "self"
                ],
                "test_threshold_local_mean": [
                    "self"
                ],
                "test_threshold_local_median": [
                    "self"
                ],
                "test_threshold_local_median_constant_mode": [
                    "self"
                ],
                "test_threshold_niblack": [
                    "self"
                ],
                "test_threshold_sauvola": [
                    "self"
                ]
            }
        },
        "skimage.filters.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.filters.tests.test_gabor": {
            "test_gabor_kernel_size": [],
            "test_gabor_kernel_bandwidth": [],
            "test_sigma_prefactor": [],
            "test_gabor_kernel_sum": [],
            "test_gabor_kernel_theta": [],
            "test_gabor": []
        },
        "skimage.filters.tests.test_frangi": {
            "test_null_matrix": [],
            "test_energy_decrease": [],
            "test_values_decreased": [],
            "test_cropped_camera_image": []
        },
        "skimage.filters.tests.test_gaussian": {
            "test_negative_sigma": [],
            "test_null_sigma": [],
            "test_default_sigma": [],
            "test_energy_decrease": [],
            "test_multichannel": [],
            "test_preserve_range": []
        },
        "skimage.filters.tests.test_lpi_filter": {
            "TestLPIFilter2D": {
                "filt_func": [
                    "self",
                    "r",
                    "c"
                ],
                "setUp": [
                    "self"
                ],
                "tst_shape": [
                    "self",
                    "x"
                ],
                "test_ip_shape": [
                    "self"
                ],
                "test_inverse": [
                    "self"
                ],
                "test_wiener": [
                    "self"
                ],
                "test_non_callable": [
                    "self"
                ]
            }
        },
        "skimage.filters.rank": {},
        "skimage.filters.rank.generic": {
            "_handle_input": [
                "image",
                "selem",
                "out",
                "mask",
                "out_dtype",
                "pixel_size"
            ],
            "_apply_scalar_per_pixel": [
                "func",
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "out_dtype"
            ],
            "_apply_vector_per_pixel": [
                "func",
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "out_dtype",
                "pixel_size"
            ],
            "_default_selem": [
                "func"
            ],
            "autolevel": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "bottomhat": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "equalize": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "gradient": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "maximum": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "mean": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "geometric_mean": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "subtract_mean": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "median": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "minimum": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "modal": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "enhance_contrast": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "pop": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "sum": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "threshold": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "tophat": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "noise_filter": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "entropy": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "otsu": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y"
            ],
            "windowed_histogram": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "n_bins"
            ]
        },
        "skimage.filters.rank._percentile": {
            "_apply": [
                "func",
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1",
                "out_dtype"
            ],
            "autolevel_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "gradient_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "mean_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "subtract_mean_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "enhance_contrast_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0"
            ],
            "pop_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "sum_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0",
                "p1"
            ],
            "threshold_percentile": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "p0"
            ]
        },
        "skimage.filters.rank.bilateral": {
            "_apply": [
                "func",
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "s0",
                "s1",
                "out_dtype"
            ],
            "mean_bilateral": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "s0",
                "s1"
            ],
            "pop_bilateral": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "s0",
                "s1"
            ],
            "sum_bilateral": [
                "image",
                "selem",
                "out",
                "mask",
                "shift_x",
                "shift_y",
                "s0",
                "s1"
            ]
        },
        "skimage.filters.rank.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.filters.rank.tests.test_rank": {
            "TestRank": {
                "setup": [
                    "self"
                ],
                "test_all": [
                    "self"
                ],
                "test_random_sizes": [
                    "self"
                ],
                "test_compare_with_grey_dilation": [
                    "self"
                ],
                "test_compare_with_grey_erosion": [
                    "self"
                ],
                "test_bitdepth": [
                    "self"
                ],
                "test_population": [
                    "self"
                ],
                "test_structuring_element8": [
                    "self"
                ],
                "test_pass_on_bitdepth": [
                    "self"
                ],
                "test_inplace_output": [
                    "self"
                ],
                "test_compare_autolevels": [
                    "self"
                ],
                "test_compare_autolevels_16bit": [
                    "self"
                ],
                "test_compare_ubyte_vs_float": [
                    "self"
                ],
                "test_compare_8bit_unsigned_vs_signed": [
                    "self"
                ],
                "test_compare_8bit_vs_16bit": [
                    "self"
                ],
                "test_trivial_selem8": [
                    "self"
                ],
                "test_trivial_selem16": [
                    "self"
                ],
                "test_smallest_selem8": [
                    "self"
                ],
                "test_smallest_selem16": [
                    "self"
                ],
                "test_empty_selem": [
                    "self"
                ],
                "test_otsu": [
                    "self"
                ],
                "test_entropy": [
                    "self"
                ],
                "test_selem_dtypes": [
                    "self"
                ],
                "test_16bit": [
                    "self"
                ],
                "test_bilateral": [
                    "self"
                ],
                "test_percentile_min": [
                    "self"
                ],
                "test_percentile_max": [
                    "self"
                ],
                "test_percentile_median": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_windowed_histogram": [
                    "self"
                ],
                "test_median_default_value": [
                    "self"
                ]
            }
        },
        "skimage.draw.draw3d": {
            "ellipsoid": [
                "a",
                "b",
                "c",
                "spacing",
                "levelset"
            ],
            "ellipsoid_stats": [
                "a",
                "b",
                "c"
            ]
        },
        "skimage.draw.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.draw": {},
        "skimage.draw.draw": {
            "_ellipse_in_shape": [
                "shape",
                "center",
                "radii",
                "rotation"
            ],
            "ellipse": [
                "r",
                "c",
                "r_radius",
                "c_radius",
                "shape",
                "rotation"
            ],
            "circle": [
                "r",
                "c",
                "radius",
                "shape"
            ],
            "polygon_perimeter": [
                "r",
                "c",
                "shape",
                "clip"
            ],
            "set_color": [
                "image",
                "coords",
                "color",
                "alpha"
            ],
            "line": [
                "r0",
                "c0",
                "r1",
                "c1"
            ],
            "line_aa": [
                "r0",
                "c0",
                "r1",
                "c1"
            ],
            "polygon": [
                "r",
                "c",
                "shape"
            ],
            "circle_perimeter": [
                "r",
                "c",
                "radius",
                "method",
                "shape"
            ],
            "circle_perimeter_aa": [
                "r",
                "c",
                "radius",
                "shape"
            ],
            "ellipse_perimeter": [
                "r",
                "c",
                "r_radius",
                "c_radius",
                "orientation",
                "shape"
            ],
            "bezier_curve": [
                "r0",
                "c0",
                "r1",
                "c1",
                "r2",
                "c2",
                "weight",
                "shape"
            ],
            "rectangle": [
                "start",
                "end",
                "extent",
                "shape"
            ]
        },
        "skimage.draw._random_shapes": {
            "_generate_rectangle_mask": [
                "point",
                "image",
                "shape",
                "random"
            ],
            "_generate_circle_mask": [
                "point",
                "image",
                "shape",
                "random"
            ],
            "_generate_triangle_mask": [
                "point",
                "image",
                "shape",
                "random"
            ],
            "_generate_random_colors": [
                "num_colors",
                "num_channels",
                "intensity_range",
                "random"
            ],
            "random_shapes": [
                "image_shape",
                "max_shapes",
                "min_shapes",
                "min_size",
                "max_size",
                "multichannel",
                "num_channels",
                "shape",
                "intensity_range",
                "allow_overlap",
                "num_trials",
                "random_seed"
            ]
        },
        "skimage.draw.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.draw.tests.test_draw3d": {
            "test_ellipsoid_sign_parameters1": [],
            "test_ellipsoid_sign_parameters2": [],
            "test_ellipsoid_sign_parameters3": [],
            "test_ellipsoid_bool": [],
            "test_ellipsoid_levelset": [],
            "test_ellipsoid_stats": [],
            "test_rect_3d_extent": [],
            "test_rect_3d_end": []
        },
        "skimage.draw.tests.test_random_shapes": {
            "test_generates_color_images_with_correct_shape": [],
            "test_generates_gray_images_with_correct_shape": [],
            "test_generates_correct_bounding_boxes_for_rectangles": [],
            "test_generates_correct_bounding_boxes_for_triangles": [],
            "test_generates_correct_bounding_boxes_for_circles": [],
            "test_generate_circle_throws_when_size_too_small": [],
            "test_generate_triangle_throws_when_size_too_small": [],
            "test_can_generate_one_by_one_rectangle": [],
            "test_throws_when_intensity_range_out_of_range": [],
            "test_returns_empty_labels_and_white_image_when_cannot_fit_shape": [],
            "test_random_shapes_is_reproducible_with_seed": [],
            "test_generates_white_image_when_intensity_range_255": []
        },
        "skimage.draw.tests.test_draw": {
            "test_set_color": [],
            "test_set_color_with_alpha": [],
            "test_line_horizontal": [],
            "test_line_vertical": [],
            "test_line_reverse": [],
            "test_line_diag": [],
            "test_line_aa_horizontal": [],
            "test_line_aa_vertical": [],
            "test_line_aa_diagonal": [],
            "test_line_equal_aliasing_horizontally_vertically": [],
            "test_polygon_rectangle": [],
            "test_polygon_rectangle_angular": [],
            "test_polygon_parallelogram": [],
            "test_polygon_exceed": [],
            "test_circle": [],
            "test_circle_perimeter_bresenham": [],
            "test_circle_perimeter_bresenham_shape": [],
            "test_circle_perimeter_andres": [],
            "test_circle_perimeter_aa": [],
            "test_circle_perimeter_aa_shape": [],
            "test_ellipse_trivial": [],
            "test_ellipse_generic": [],
            "test_ellipse_with_shape": [],
            "test_ellipse_negative": [],
            "test_ellipse_rotation_symmetry": [],
            "test_ellipse_rotated": [],
            "test_ellipse_perimeter_dot_zeroangle": [],
            "test_ellipse_perimeter_dot_nzeroangle": [],
            "test_ellipse_perimeter_flat_zeroangle": [],
            "test_ellipse_perimeter_zeroangle": [],
            "test_ellipse_perimeter_nzeroangle": [],
            "test_ellipse_perimeter_shape": [],
            "test_bezier_segment_straight": [],
            "test_bezier_segment_curved": [],
            "test_bezier_curve_straight": [],
            "test_bezier_curved_weight_eq_1": [],
            "test_bezier_curved_weight_neq_1": [],
            "test_bezier_curve_shape": [],
            "test_polygon_perimeter": [],
            "test_polygon_perimeter_outside_image": [],
            "test_rectangle_end": [],
            "test_rectangle_extent": []
        },
        "skimage.morphology.misc": {
            "default_selem": [
                "func"
            ],
            "_check_dtype_supported": [
                "ar"
            ],
            "remove_small_objects": [
                "ar",
                "min_size",
                "connectivity",
                "in_place"
            ],
            "remove_small_holes": [
                "ar",
                "area_threshold",
                "connectivity",
                "in_place",
                "min_size"
            ]
        },
        "skimage.morphology.extrema": {
            "_add_constant_clip": [
                "image",
                "const_value"
            ],
            "_subtract_constant_clip": [
                "image",
                "const_value"
            ],
            "h_maxima": [
                "image",
                "h",
                "selem"
            ],
            "h_minima": [
                "image",
                "h",
                "selem"
            ],
            "_set_edge_values_inplace": [
                "image",
                "value"
            ],
            "_fast_pad": [
                "image",
                "value"
            ],
            "_resolve_neighborhood": [
                "selem",
                "connectivity",
                "ndim"
            ],
            "local_maxima": [
                "image",
                "selem",
                "connectivity",
                "indices",
                "allow_borders"
            ],
            "local_minima": [
                "image",
                "selem",
                "connectivity",
                "indices",
                "allow_borders"
            ]
        },
        "skimage.morphology.binary": {
            "binary_erosion": [
                "image",
                "selem",
                "out"
            ],
            "binary_dilation": [
                "image",
                "selem",
                "out"
            ],
            "binary_opening": [
                "image",
                "selem",
                "out"
            ],
            "binary_closing": [
                "image",
                "selem",
                "out"
            ]
        },
        "skimage.morphology.greyreconstruct": {
            "reconstruction": [
                "seed",
                "mask",
                "method",
                "selem",
                "offset"
            ]
        },
        "skimage.morphology.setup": {
            "configuration": [
                "parent_package",
                "top_path"
            ]
        },
        "skimage.morphology._skeletonize_3d": {
            "skeletonize_3d": [
                "img"
            ]
        },
        "skimage.morphology._skeletonize": {
            "skeletonize": [
                "image"
            ],
            "_generate_thin_luts": [],
            "thin": [
                "image",
                "max_iter"
            ],
            "medial_axis": [
                "image",
                "mask",
                "return_distance"
            ],
            "_pattern_of": [
                "index"
            ],
            "_table_lookup": [
                "image",
                "table"
            ]
        },
        "skimage.morphology": {},
        "skimage.morphology.grey": {
            "_shift_selem": [
                "selem",
                "shift_x",
                "shift_y"
            ],
            "_invert_selem": [
                "selem"
            ],
            "pad_for_eccentric_selems": [
                "func"
            ],
            "erosion": [
                "image",
                "selem",
                "out",
                "shift_x",
                "shift_y"
            ],
            "dilation": [
                "image",
                "selem",
                "out",
                "shift_x",
                "shift_y"
            ],
            "opening": [
                "image",
                "selem",
                "out"
            ],
            "closing": [
                "image",
                "selem",
                "out"
            ],
            "white_tophat": [
                "image",
                "selem",
                "out"
            ],
            "black_tophat": [
                "image",
                "selem",
                "out"
            ]
        },
        "skimage.morphology.convex_hull": {
            "_offsets_diamond": [
                "ndim"
            ],
            "convex_hull_image": [
                "image",
                "offset_coordinates",
                "tolerance"
            ],
            "convex_hull_object": [
                "image",
                "neighbors"
            ]
        },
        "skimage.morphology.watershed": {
            "_validate_inputs": [
                "image",
                "markers",
                "mask"
            ],
            "_validate_connectivity": [
                "image_dim",
                "connectivity",
                "offset"
            ],
            "_offsets_to_raveled_neighbors": [
                "image_shape",
                "structure",
                "center"
            ],
            "watershed": [
                "image",
                "markers",
                "connectivity",
                "offset",
                "mask",
                "compactness",
                "watershed_line"
            ]
        },
        "skimage.morphology.selem": {
            "square": [
                "width",
                "dtype"
            ],
            "rectangle": [
                "width",
                "height",
                "dtype"
            ],
            "diamond": [
                "radius",
                "dtype"
            ],
            "disk": [
                "radius",
                "dtype"
            ],
            "ellipse": [
                "width",
                "height",
                "dtype"
            ],
            "cube": [
                "width",
                "dtype"
            ],
            "octahedron": [
                "radius",
                "dtype"
            ],
            "ball": [
                "radius",
                "dtype"
            ],
            "octagon": [
                "m",
                "n",
                "dtype"
            ],
            "star": [
                "a",
                "dtype"
            ],
            "_default_selem": [
                "ndim"
            ]
        },
        "skimage.morphology.tests.test_watershed": {
            "diff": [
                "a",
                "b"
            ],
            "test_compact_watershed": [],
            "test_numeric_seed_watershed": [],
            "test_incorrect_markers_shape": [],
            "TestWatershed": {
                "test_watershed01": [
                    "self"
                ],
                "test_watershed02": [
                    "self"
                ],
                "test_watershed03": [
                    "self"
                ],
                "test_watershed04": [
                    "self"
                ],
                "test_watershed05": [
                    "self"
                ],
                "test_watershed06": [
                    "self"
                ],
                "test_watershed07": [
                    "self"
                ],
                "test_watershed08": [
                    "self"
                ],
                "test_watershed09": [
                    "self"
                ],
                "test_watershed10": [
                    "self"
                ],
                "test_watershed11": [
                    "self"
                ],
                "test_watershed12": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_binary": {
            "test_non_square_image": [],
            "test_binary_erosion": [],
            "test_binary_dilation": [],
            "test_binary_closing": [],
            "test_binary_opening": [],
            "test_selem_overflow": [],
            "test_out_argument": [],
            "test_default_selem": [
                "function"
            ],
            "test_3d_fallback_default_selem": [],
            "test_3d_fallback_cube_selem": [
                "function"
            ],
            "test_2d_ndimage_equivalence": [],
            "test_binary_output_2d": [],
            "test_binary_output_3d": []
        },
        "skimage.morphology.tests.test_ccomp": {
            "TestConnectedComponents": {
                "setup": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_random": [
                    "self"
                ],
                "test_diag": [
                    "self"
                ],
                "test_4_vs_8": [
                    "self"
                ],
                "test_background": [
                    "self"
                ],
                "test_background_two_regions": [
                    "self"
                ],
                "test_background_one_region_center": [
                    "self"
                ],
                "test_return_num": [
                    "self"
                ]
            },
            "TestConnectedComponents3d": {
                "setup": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_random": [
                    "self"
                ],
                "test_diag": [
                    "self"
                ],
                "test_4_vs_8": [
                    "self"
                ],
                "test_background": [
                    "self"
                ],
                "test_background_two_regions": [
                    "self"
                ],
                "test_background_one_region_center": [
                    "self"
                ],
                "test_return_num": [
                    "self"
                ],
                "test_1D": [
                    "self"
                ],
                "test_nd": [
                    "self"
                ]
            },
            "TestSupport": {
                "test_reshape": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_misc": {
            "test_one_connectivity": [],
            "test_two_connectivity": [],
            "test_in_place": [],
            "test_labeled_image": [],
            "test_uint_image": [],
            "test_single_label_warning": [],
            "test_float_input": [],
            "test_negative_input": [],
            "test_one_connectivity_holes": [],
            "test_two_connectivity_holes": [],
            "test_in_place_holes": [],
            "test_labeled_image_holes": [],
            "test_uint_image_holes": [],
            "test_label_warning_holes": [],
            "test_float_input_holes": []
        },
        "skimage.morphology.tests.test_convex_hull": {
            "test_basic": [],
            "test_empty_image": [],
            "test_qhull_offset_example": [],
            "test_pathological_qhull_example": [],
            "test_possible_hull": [],
            "test_object": [],
            "images2d3d": [],
            "test_consistent_2d_3d_hulls": [
                "images2d3d"
            ]
        },
        "skimage.morphology.tests": {
            "setup": [],
            "teardown": []
        },
        "skimage.morphology.tests.test_extrema": {
            "diff": [
                "a",
                "b"
            ],
            "TestExtrema": {
                "test_saturated_arithmetic": [
                    "self"
                ],
                "test_h_maxima": [
                    "self"
                ],
                "test_h_minima": [
                    "self"
                ],
                "test_extrema_float": [
                    "self"
                ]
            },
            "TestLocalMaxima": {
                "test_empty": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_dtypes_old": [
                    "self"
                ],
                "test_connectivity": [
                    "self"
                ],
                "test_selem": [
                    "self"
                ],
                "test_indices": [
                    "self"
                ],
                "test_allow_borders": [
                    "self"
                ],
                "test_nd": [
                    "self"
                ],
                "test_constant": [
                    "self"
                ],
                "test_extrema_float": [
                    "self"
                ],
                "test_exceptions": [
                    "self"
                ],
                "test_small_array": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_skeletonize": {
            "TestSkeletonize": {
                "test_skeletonize_no_foreground": [
                    "self"
                ],
                "test_skeletonize_wrong_dim1": [
                    "self"
                ],
                "test_skeletonize_wrong_dim2": [
                    "self"
                ],
                "test_skeletonize_not_binary": [
                    "self"
                ],
                "test_skeletonize_unexpected_value": [
                    "self"
                ],
                "test_skeletonize_all_foreground": [
                    "self"
                ],
                "test_skeletonize_single_point": [
                    "self"
                ],
                "test_skeletonize_already_thinned": [
                    "self"
                ],
                "test_skeletonize_output": [
                    "self"
                ],
                "test_skeletonize_num_neighbours": [
                    "self"
                ],
                "test_lut_fix": [
                    "self"
                ]
            },
            "TestThin": {
                "input_image": [
                    "self"
                ],
                "test_zeros": [
                    "self"
                ],
                "test_iter_1": [
                    "self"
                ],
                "test_noiter": [
                    "self"
                ],
                "test_baddim": [
                    "self"
                ],
                "test_lut_generation": [
                    "self"
                ]
            },
            "TestMedialAxis": {
                "test_00_00_zeros": [
                    "self"
                ],
                "test_00_01_zeros_masked": [
                    "self"
                ],
                "test_01_01_rectangle": [
                    "self"
                ],
                "test_01_02_hole": [
                    "self"
                ],
                "test_narrow_image": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_grey": {
            "test_default_selem": [
                "function"
            ],
            "test_3d_fallback_default_selem": [],
            "test_3d_fallback_cube_selem": [
                "function"
            ],
            "test_3d_fallback_white_tophat": [],
            "test_3d_fallback_black_tophat": [],
            "test_2d_ndimage_equivalence": [],
            "test_float": [],
            "test_uint16": [],
            "test_discontiguous_out_array": [],
            "test_1d_erosion": [],
            "TestMorphology": {
                "_build_expected_output": [
                    "self"
                ],
                "test_gray_morphology": [
                    "self"
                ]
            },
            "TestEccentricStructuringElements": {
                "setUp": [
                    "self"
                ],
                "test_dilate_erode_symmetry": [
                    "self"
                ],
                "test_open_black_pixel": [
                    "self"
                ],
                "test_close_white_pixel": [
                    "self"
                ],
                "test_open_white_pixel": [
                    "self"
                ],
                "test_close_black_pixel": [
                    "self"
                ],
                "test_white_tophat_white_pixel": [
                    "self"
                ],
                "test_black_tophat_black_pixel": [
                    "self"
                ],
                "test_white_tophat_black_pixel": [
                    "self"
                ],
                "test_black_tophat_white_pixel": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_selem": {
            "TestSElem": {
                "test_square_selem": [
                    "self"
                ],
                "test_rectangle_selem": [
                    "self"
                ],
                "test_cube_selem": [
                    "self"
                ],
                "strel_worker": [
                    "self",
                    "fn",
                    "func"
                ],
                "strel_worker_3d": [
                    "self",
                    "fn",
                    "func"
                ],
                "test_selem_disk": [
                    "self"
                ],
                "test_selem_diamond": [
                    "self"
                ],
                "test_selem_ball": [
                    "self"
                ],
                "test_selem_octahedron": [
                    "self"
                ],
                "test_selem_octagon": [
                    "self"
                ],
                "test_selem_ellipse": [
                    "self"
                ],
                "test_selem_star": [
                    "self"
                ]
            }
        },
        "skimage.morphology.tests.test_reconstruction": {
            "test_zeros": [],
            "test_image_equals_mask": [],
            "test_image_less_than_mask": [],
            "test_one_image_peak": [],
            "test_two_image_peaks": [],
            "test_zero_image_one_mask": [],
            "test_fill_hole": [],
            "test_invalid_seed": [],
            "test_invalid_selem": [],
            "test_invalid_method": []
        },
        "skimage.morphology.tests.test_skeletonize_3d": {
            "test_skeletonize_wrong_dim": [],
            "test_skeletonize_1D": [],
            "test_skeletonize_no_foreground": [],
            "test_skeletonize_all_foreground": [],
            "test_skeletonize_single_point": [],
            "test_skeletonize_already_thinned": [],
            "test_dtype_conv": [],
            "test_input_with_warning": [
                "img"
            ],
            "test_input_without_warning": [
                "img"
            ],
            "check_input": [
                "img"
            ],
            "test_skeletonize_num_neighbours": [],
            "test_two_hole_image": [],
            "test_3d_vs_fiji": []
        },
        "doc.gh-pages": {
            "sh": [
                "cmd"
            ],
            "sh2": [
                "cmd"
            ],
            "sh3": [
                "cmd"
            ],
            "init_repo": [
                "path"
            ]
        },
        "doc": {},
        "doc.source.themes.scikit-image": {
            "setup": [
                "app"
            ]
        }
    }
}