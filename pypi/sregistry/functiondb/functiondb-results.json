{
    "0.0.1": {
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.utils": {
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "mkdir_p": [
                "path"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ],
            "download_repo": [
                "repo_url",
                "destination",
                "commit"
            ]
        },
        "sregistry.views.trees": {
            "container_difference": [
                "container",
                "container_subtract",
                "image_package",
                "image_package_subtract",
                "comparison"
            ],
            "container_similarity": [
                "container1",
                "container2",
                "image_package1",
                "image_package2",
                "comparison"
            ],
            "container_tree": [
                "container",
                "image_package"
            ],
            "make_container_tree": [
                "folders",
                "files",
                "path_delim",
                "parse_files"
            ],
            "make_package_tree": [
                "matrix",
                "labels",
                "width",
                "height",
                "title",
                "font_size"
            ],
            "make_interactive_tree": [
                "matrix",
                "labels"
            ],
            "add_node": [
                "node",
                "parent"
            ],
            "label_tree": [
                "n",
                "lookup"
            ]
        },
        "sregistry.views": {},
        "sregistry.views.utils": {
            "get_template": [
                "template_name",
                "fields"
            ]
        },
        "sregistry.cli": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.cli.utils": {
            "clean_up": [
                "image",
                "existed"
            ]
        },
        "sregistry.cli.main.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.cli.main": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.cli.main.package": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.cli.main.analysis": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.cli.main.create": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.cli.main.compare": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.cli.app": {},
        "sregistry.cli.app.main": {
            "app_plot_os_sims": [],
            "app_container_tree": [],
            "difference_tree": [],
            "app_similar_tree": [],
            "get_container_names": [],
            "make_tree": [
                "image",
                "port",
                "sudopw"
            ],
            "plot_os_sims": [
                "image",
                "port",
                "sudopw"
            ],
            "make_sim_tree": [
                "image1",
                "image2",
                "port"
            ],
            "make_diff_tree": [
                "image1",
                "image2",
                "port"
            ],
            "SingularityServer": {
                "__init__": [
                    "self"
                ]
            }
        },
        "sregistry.build": {},
        "sregistry.build.google": {
            "get_google_service": [
                "service_type",
                "version"
            ],
            "get_bucket": [
                "storage_service",
                "bucket_name"
            ],
            "delete_object": [
                "storage_service",
                "bucket_name",
                "object_name"
            ],
            "upload_file": [
                "storage_service",
                "bucket",
                "bucket_path",
                "file_name",
                "verbose"
            ],
            "list_bucket": [
                "bucket",
                "storage_service"
            ],
            "get_image_path": [
                "repo_url",
                "trailing_path"
            ],
            "run_build": [
                "logfile"
            ],
            "finish_build": [
                "verbose"
            ],
            "get_build_metadata": [
                "key"
            ],
            "get_build_params": [
                "metadata"
            ]
        },
        "sregistry.build.main": {
            "run_build": [
                "build_dir",
                "params",
                "verbose",
                "compress_image"
            ],
            "send_build_data": [
                "build_dir",
                "data",
                "secret",
                "response_url",
                "clean_up"
            ],
            "send_build_close": [
                "params",
                "response_url"
            ]
        },
        "sregistry.build.utils": {
            "stop_if_result_none": [
                "result"
            ],
            "test_container": [
                "image_path"
            ],
            "get_build_template": [
                "template_name",
                "params",
                "to_file"
            ],
            "get_singularity_version": [
                "singularity_version"
            ],
            "sniff_extension": [
                "file_path",
                "verbose"
            ],
            "get_script": [
                "script_name"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SingularityMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.hub.client": {
            "Client": {
                "__init__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "get_manifest": [
                    "self",
                    "container_name"
                ],
                "get_container": [
                    "self",
                    "uri",
                    "name",
                    "download_folder"
                ],
                "get_collection": [
                    "self",
                    "name"
                ],
                "get_collections": [
                    "self"
                ]
            }
        },
        "sregistry.hub": {
            "ApiConnection": {
                "__init__": [
                    "self",
                    "token",
                    "base"
                ],
                "get_headers": [
                    "self"
                ],
                "_init_headers": [
                    "self"
                ],
                "reset_headers": [
                    "self"
                ],
                "update_headers": [
                    "self",
                    "fields"
                ],
                "delete": [
                    "self",
                    "url",
                    "return_json"
                ],
                "put": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "post": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "get": [
                    "self",
                    "url",
                    "headers",
                    "token",
                    "data",
                    "return_json"
                ],
                "paginate_get": [
                    "self",
                    "url",
                    "headers",
                    "return_json",
                    "start_page"
                ],
                "download": [
                    "self",
                    "url",
                    "file_name",
                    "headers",
                    "show_progress"
                ],
                "stream": [
                    "self",
                    "url",
                    "headers",
                    "stream_to"
                ],
                "call": [
                    "self",
                    "url",
                    "func",
                    "data",
                    "return_json",
                    "stream"
                ]
            }
        },
        "sregistry.hub.utils": {
            "prepare_url": [
                "name",
                "get_type"
            ],
            "is_number": [
                "container_name"
            ],
            "parse_container_name": [
                "image"
            ],
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ]
        },
        "sregistry.tests.test_package_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_calculate_folder_size": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_reproduce": {
            "TestReproduce": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_image_hashes": [
                    "self"
                ],
                "test_assess_differences": [
                    "self"
                ],
                "test_get_custom_level": [
                    "self"
                ],
                "test_get_level": [
                    "self"
                ],
                "test_get_levels": [
                    "self"
                ],
                "test_get_content_hashes": [
                    "self"
                ],
                "test_extract_guts": [
                    "self"
                ],
                "test_get_image_file_hash": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_package": {
            "TestPackage": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_packaging": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_build_utils": {
            "TestBuildUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_stop_if_result_none": [
                    "self"
                ],
                "test_get_singularity_version": [
                    "self"
                ],
                "test_sniff_extension": [
                    "self"
                ],
                "test_get_script": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_hub": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ]
            }
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_build": {
            "TestBuildTemplate": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_read_template": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.tests._test_views_tree": {
            "TestViewsTree": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_tree": [
                    "self"
                ]
            }
        },
        "sregistry.tests._test_analysis_classify": {
            "TestAnalysisClassify": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_classify": [
                    "self"
                ]
            }
        },
        "sregistry.package.size": {
            "estimate_image_size": [
                "spec_file",
                "sudopw",
                "padding"
            ],
            "calculate_folder_size": [
                "folder_path",
                "truncate"
            ]
        },
        "sregistry.package.build": {
            "build_from_spec": [
                "spec_file",
                "build_dir",
                "build_folder",
                "sandbox",
                "isolated",
                "debug"
            ],
            "package": [
                "image_path",
                "spec_path",
                "output_folder",
                "remove_image",
                "verbose",
                "S"
            ]
        },
        "sregistry.package": {},
        "sregistry.package.clone": {
            "package_node": [
                "root",
                "name"
            ],
            "unpack_node": [
                "image_path",
                "name",
                "output_folder",
                "size"
            ]
        },
        "sregistry.package.utils": {
            "zip_up": [
                "file_list",
                "zip_name",
                "output_folder"
            ],
            "get_container_contents": [
                "container",
                "gets",
                "split_delim",
                "image_package"
            ]
        },
        "sregistry.package.manage": {
            "get_packages": [
                "family"
            ],
            "list_package_families": [],
            "get_package_base": [],
            "list_package": [
                "package_path"
            ],
            "load_package": [
                "package_path",
                "get"
            ]
        },
        "sregistry.analysis": {},
        "sregistry.analysis.apps": {
            "extract_apps": [
                "image_path",
                "app_names",
                "S",
                "verbose"
            ]
        },
        "sregistry.analysis.compare": {
            "container_similarity_vector": [
                "container1",
                "packages_set",
                "by",
                "custom_set"
            ],
            "compare_singularity_images": [
                "image_paths1",
                "image_paths2"
            ],
            "compare_containers": [
                "container1",
                "container2",
                "by",
                "image_package1",
                "image_package2"
            ],
            "compare_lists": [
                "list1",
                "list2"
            ],
            "calculate_similarity": [
                "container1",
                "container2",
                "image_package1",
                "image_package2",
                "by",
                "comparison",
                "metric"
            ],
            "compare_packages": [
                "packages_set1",
                "packages_set2",
                "by"
            ]
        },
        "sregistry.analysis.classify": {
            "get_diff": [
                "container",
                "image_package"
            ],
            "estimate_os": [
                "container",
                "image_package",
                "return_top"
            ],
            "get_tags": [
                "container",
                "image_package",
                "search_folders",
                "diff",
                "return_unique"
            ],
            "file_counts": [
                "container",
                "patterns",
                "image_package",
                "diff"
            ],
            "extension_counts": [
                "container",
                "image_package",
                "diff",
                "return_counts"
            ]
        },
        "sregistry.analysis.metrics": {
            "information_coefficient": [
                "total1",
                "total2",
                "intersect"
            ],
            "RSA": [
                "m1",
                "m2"
            ]
        },
        "sregistry.analysis.utils": {
            "remove_unicode_dict": [
                "input_dict"
            ],
            "update_dict": [
                "input_dict",
                "key",
                "value"
            ],
            "update_dict_sum": [
                "input_dict",
                "key",
                "increment",
                "initial_value"
            ]
        },
        "sregistry.analysis.reproduce.levels": {
            "get_custom_level": [
                "regexp",
                "description",
                "skip_files",
                "include_files"
            ],
            "get_level": [
                "level",
                "version",
                "include_files",
                "skip_files"
            ],
            "modify_level": [
                "level",
                "field",
                "values",
                "append"
            ],
            "get_levels": [
                "version"
            ],
            "make_levels_set": [
                "levels"
            ],
            "make_level_set": [
                "level"
            ]
        },
        "sregistry.analysis.reproduce": {},
        "sregistry.analysis.reproduce.criteria": {
            "include_file": [
                "member",
                "file_filter"
            ],
            "is_root_owned": [
                "member"
            ],
            "assess_content": [
                "member",
                "file_filter"
            ]
        },
        "sregistry.analysis.reproduce.metrics": {
            "assess_differences": [
                "image_file1",
                "image_file2",
                "levels",
                "version",
                "size_heuristic",
                "guts1",
                "guts2"
            ]
        },
        "sregistry.analysis.reproduce.utils": {
            "extract_guts": [
                "image_path",
                "tar",
                "file_filter",
                "tag_root",
                "include_sizes"
            ],
            "get_memory_tar": [
                "image_path"
            ],
            "get_image_tar": [
                "image_path",
                "S"
            ],
            "delete_image_tar": [
                "file_obj",
                "tar"
            ],
            "extract_content": [
                "image_path",
                "member_name",
                "cli",
                "return_hash"
            ]
        },
        "sregistry.analysis.reproduce.hash": {
            "get_image_hashes": [
                "image_path",
                "version",
                "levels"
            ],
            "get_image_hash": [
                "image_path",
                "level",
                "level_filter",
                "include_files",
                "skip_files",
                "version"
            ],
            "get_content_hashes": [
                "image_path",
                "level",
                "regexp",
                "include_files",
                "tag_root",
                "level_filter",
                "skip_files",
                "version",
                "include_sizes"
            ],
            "get_image_file_hash": [
                "image_path"
            ]
        },
        "sregistry.analysis.reproduce.data": {},
        "sregistry.registry.auth": {
            "encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "read_client_secrets": [
                "secrets",
                "required"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.registry": {},
        "sregistry.registry.main.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.main.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.main": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.registry.main.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.main.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.main.ls": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.main.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.registry.utils": {},
        "sregistry.registry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.registry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.registry.utils.names": {
            "parse_image_name": [
                "image_name",
                "tag",
                "defaults",
                "ext"
            ]
        },
        "sregistry.registry.client.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.registry.client.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.registry.client": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "update_secrets": [
                    "secrets"
                ],
                "__str__": [
                    "self"
                ],
                "read_response": [
                    "self",
                    "response",
                    "field"
                ]
            }
        },
        "sregistry.registry.client.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.registry.client.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.registry.client.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.registry.OLD.template": {
            "get_template": [
                "templates",
                "output_folder"
            ]
        },
        "sregistry.registry.OLD": {
            "get_parser": [],
            "main": [],
            "help": [],
            "subcommand_help": [
                "message",
                "command"
            ]
        },
        "sregistry.registry.OLD.init": {
            "generate_registry": [
                "base",
                "storage"
            ]
        }
    },
    "0.0.2": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": []
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ],
                "_get_headers": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_headers": [
                    "self",
                    "fields"
                ],
                "_delete": [
                    "self",
                    "url",
                    "return_json"
                ],
                "_put": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_post": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_get": [
                    "self",
                    "url",
                    "headers",
                    "token",
                    "data",
                    "return_json"
                ],
                "_paginate_get": [
                    "self",
                    "url",
                    "headers",
                    "return_json",
                    "start_page"
                ],
                "download": [
                    "self",
                    "url",
                    "file_name",
                    "headers",
                    "show_progress"
                ],
                "_stream": [
                    "self",
                    "url",
                    "headers",
                    "stream_to"
                ],
                "_call": [
                    "self",
                    "url",
                    "func",
                    "data",
                    "return_json",
                    "stream"
                ]
            }
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.globus.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.globus": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.globus.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "cli"
            ],
            "bpython": [
                "cli"
            ],
            "python": [
                "cli"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.3": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": []
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ],
                "_get_setting": [
                    "self",
                    "name"
                ],
                "_get_and_update_setting": [
                    "self",
                    "name"
                ],
                "_get_headers": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_headers": [
                    "self",
                    "fields"
                ],
                "_delete": [
                    "self",
                    "url",
                    "return_json"
                ],
                "_put": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_post": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_get": [
                    "self",
                    "url",
                    "headers",
                    "token",
                    "data",
                    "return_json"
                ],
                "_paginate_get": [
                    "self",
                    "url",
                    "headers",
                    "return_json",
                    "start_page"
                ],
                "download": [
                    "self",
                    "url",
                    "file_name",
                    "headers",
                    "show_progress"
                ],
                "_stream": [
                    "self",
                    "url",
                    "headers",
                    "stream_to"
                ],
                "_call": [
                    "self",
                    "url",
                    "func",
                    "data",
                    "return_json",
                    "stream"
                ]
            }
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.4": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": []
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ],
                "_get_setting": [
                    "self",
                    "name"
                ],
                "_get_and_update_setting": [
                    "self",
                    "name"
                ],
                "_get_headers": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_headers": [
                    "self",
                    "fields"
                ],
                "_auth_flow": [
                    "self",
                    "url"
                ],
                "_delete": [
                    "self",
                    "url",
                    "return_json"
                ],
                "_put": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_post": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_get": [
                    "self",
                    "url",
                    "headers",
                    "token",
                    "data",
                    "return_json"
                ],
                "_paginate_get": [
                    "self",
                    "url",
                    "headers",
                    "return_json",
                    "start_page"
                ],
                "download": [
                    "self",
                    "url",
                    "file_name",
                    "headers",
                    "show_progress"
                ],
                "_stream": [
                    "self",
                    "url",
                    "headers",
                    "stream_to"
                ],
                "_call": [
                    "self",
                    "url",
                    "func",
                    "data",
                    "return_json",
                    "stream"
                ]
            }
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.5": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": []
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ],
                "_get_setting": [
                    "self",
                    "name"
                ],
                "_get_and_update_setting": [
                    "self",
                    "name"
                ],
                "_get_headers": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_headers": [
                    "self",
                    "fields"
                ],
                "_auth_flow": [
                    "self",
                    "url"
                ],
                "_delete": [
                    "self",
                    "url",
                    "return_json"
                ],
                "_put": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_post": [
                    "self",
                    "url",
                    "data",
                    "return_json"
                ],
                "_get": [
                    "self",
                    "url",
                    "headers",
                    "token",
                    "data",
                    "return_json"
                ],
                "_paginate_get": [
                    "self",
                    "url",
                    "headers",
                    "return_json",
                    "start_page"
                ],
                "download": [
                    "self",
                    "url",
                    "file_name",
                    "headers",
                    "show_progress"
                ],
                "_stream": [
                    "self",
                    "url",
                    "headers",
                    "stream_to"
                ],
                "_call": [
                    "self",
                    "url",
                    "func",
                    "data",
                    "return_json",
                    "stream"
                ]
            }
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.6": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": []
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.utils": {
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "remove_uri": [
                "container"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "basic_auth_header": [
                "username",
                "password"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.auth": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.61": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.local.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.local.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.local": {
            "associate_user": [
                "user",
                "client",
                "code"
            ],
            "globus_transfer": [
                "request",
                "cid"
            ],
            "submit_transfer": [
                "request",
                "endpoint",
                "cid"
            ],
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "__str__": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "get_base_client": [
                    "self",
                    "reset"
                ],
                "get_transfer_client": [
                    "self"
                ],
                "_init_clients": [
                    "self"
                ],
                "ls_endpoints": [
                    "self",
                    "quiet"
                ],
                "ls_containers": [
                    "self",
                    "endpoint_id"
                ],
                "do_transfer": [
                    "user",
                    "endpoint",
                    "container"
                ]
            }
        },
        "sregistry.main.local.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.local.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.local.query": {
            "ls": [
                "self",
                "query",
                "args"
            ],
            "search": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections",
                "environment",
                "deffile",
                "runscript",
                "test"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.utils": {
            "get_image_name": [
                "manifest",
                "extension",
                "use_commit",
                "use_hash"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "print_date": [
                "date",
                "format"
            ],
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "test_download_repo": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_compare": {
            "TestAnalysisCompare": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_container_similarity": [
                    "self"
                ],
                "test_information_coefficient": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_analysis_utils": {
            "TestAnalysis": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_packages": [
                    "self"
                ],
                "test_list_package_families": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_registry": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_get_collection": [
                    "self"
                ],
                "test_get_container": [
                    "self"
                ],
                "test_pull_container": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "basic_auth_header": [
                "username",
                "password"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.62": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "_encode": [
                "item"
            ],
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.64": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "_speak": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [],
            "bpython": [],
            "python": []
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.65": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.66": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.67": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.68": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "schema_version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.69": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.70": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.71": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.72": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.73": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.74": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.75": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build2": {
            "get_google_service": [
                "service_type",
                "version"
            ],
            "operation_complete": [
                "service",
                "project",
                "zone",
                "operation",
                "container",
                "status"
            ],
            "delete_storage_files": [
                "files"
            ],
            "list_instances": [
                "project",
                "zone"
            ],
            "destroy_instance": [
                "container",
                "container_id"
            ],
            "insert_instance": [
                "service",
                "config"
            ],
            "setup_google_build": [
                "container",
                "machine_type",
                "storage_bucket",
                "metadata",
                "do_move"
            ],
            "run_google_build": [
                "container"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.76": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.singularity": {
            "Singularity": {
                "__init__": [
                    "self",
                    "sudo",
                    "debug",
                    "quiet"
                ],
                "_check_install": [
                    "self",
                    "message"
                ],
                "run_command": [
                    "self",
                    "cmd",
                    "sudo",
                    "quiet"
                ],
                "help": [
                    "self",
                    "command",
                    "stdout"
                ],
                "println": [
                    "self",
                    "output",
                    "quiet"
                ],
                "build": [
                    "self",
                    "image_path",
                    "spec_path",
                    "sudo",
                    "isolated",
                    "sandbox"
                ],
                "apps": [
                    "self",
                    "image_path",
                    "full_path"
                ],
                "bootstrap": [
                    "self",
                    "image_path",
                    "spec_path"
                ],
                "compress": [
                    "self",
                    "image_path"
                ],
                "create": [
                    "self",
                    "image_path",
                    "size",
                    "sudo"
                ],
                "decompress": [
                    "self",
                    "image_path",
                    "quiet"
                ],
                "execute": [
                    "self",
                    "image_path",
                    "command",
                    "writable",
                    "contain"
                ],
                "export": [
                    "self",
                    "image_path",
                    "tmptar"
                ],
                "importcmd": [
                    "self",
                    "image_path",
                    "input_source"
                ],
                "inspect": [
                    "self",
                    "image_path",
                    "json",
                    "quiet",
                    "app"
                ],
                "pull": [
                    "self",
                    "image_path",
                    "pull_folder",
                    "name_by_hash",
                    "name_by_commit",
                    "image_name",
                    "size"
                ],
                "run": [
                    "self",
                    "image_path",
                    "args",
                    "writable",
                    "contain"
                ],
                "version": [
                    "self"
                ],
                "get_labels": [
                    "self",
                    "image_path"
                ],
                "get_args": [
                    "self",
                    "image_path"
                ],
                "add_flags": [
                    "self",
                    "cmd",
                    "writable",
                    "contain"
                ]
            }
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.78": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.globus.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag",
                "compress"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "decompress"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.79": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.80": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.81": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_uri",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.82": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.83": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.nvidia.record": {
            "record": [
                "self",
                "images",
                "action"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "location": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "_get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.record": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.84": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.85": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.86": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.87": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.88": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.89": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.94": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.95": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.96": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.97": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.98": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.0.99": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.0": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.1": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.2": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.ceph": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.ceph.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.ceph.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.ceph.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.3": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.31": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.32": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.33": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.34": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.35": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.36": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "recipe",
                "config",
                "name",
                "commit",
                "tag",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.37": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.38": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.39": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.40": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.1.41": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.0": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.1": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rmi": [
                "self",
                "image_name"
            ],
            "rm": [
                "self",
                "image_name",
                "delete"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rmi": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.11": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.google_cloud_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_cloud_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_cloud_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_cloud_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_cloud_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_cloud_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_cloud_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_cloud_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.12": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.google_cloud_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_cloud_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_cloud_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_cloud_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_cloud_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_cloud_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_cloud_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_cloud_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.13": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.google_cloud_build.delete": {
            "delete_object": [
                "service",
                "bucket_name",
                "object_name"
            ],
            "delete": [
                "self",
                "name"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_cloud_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_cloud_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_cloud_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_cloud_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_cloud_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_cloud_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_cloud_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "remove": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "force",
                "file_name"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.14": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_speak": [
                    "self"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.15": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.16": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self",
                    "new_base"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.17": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.18": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview"
            ],
            "create_build_package": [
                "package_files"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe"
            ],
            "run_build": [
                "self",
                "config",
                "bucket",
                "names"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "config",
                "bucket",
                "names"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": []
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "subparser"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "get_subparsers": [
                "parser"
            ],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "subparser"
            ]
        }
    },
    "0.2.19": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "path",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.2": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "path",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.21": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.22": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.23": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_delete": [
                "file_name",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.test_client": {
            "TestClient": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_commands": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.24": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket_name"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.cache": {
            "clean_path": [
                "path"
            ],
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "required",
                "default",
                "silent"
            ],
            "get_cache": [
                "subfolder",
                "quiet"
            ]
        },
        "sregistry.utils.recipes": {
            "get_recipe_tag": [
                "path"
            ],
            "parse_header": [
                "recipe",
                "header",
                "remove_header"
            ],
            "find_recipes": [
                "folders",
                "pattern",
                "base"
            ],
            "find_folder_recipes": [
                "base_folder",
                "pattern",
                "manifest",
                "base"
            ],
            "find_single_recipe": [
                "filename",
                "pattern",
                "manifest"
            ]
        },
        "sregistry.utils.templates": {
            "get_template": [
                "name"
            ]
        },
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ],
            "get_file_hash": [
                "filename"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ],
            "clean_up": [
                "files"
            ]
        },
        "sregistry.utils.names": {
            "get_image_hash": [
                "image_path"
            ],
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "format_container_name": [
                "name",
                "special_characters"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.Xtest_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.25": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.Xtest_utils": {
            "TestUtils": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_write_read_files": [
                    "self"
                ],
                "test_check_install": [
                    "self"
                ],
                "test_get_installdir": [
                    "self"
                ],
                "test_remove_uri": [
                    "self"
                ],
                "ubuntu_check": [
                    "self",
                    "names"
                ],
                "test_parse_image_name": [
                    "self"
                ]
            }
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.26": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.27": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.28": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.29": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.30": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.31": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.32": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.33": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.34": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.35": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    },
    "0.2.36": {
        "sregistry.defaults": {
            "convert2boolean": [
                "arg"
            ],
            "getenv": [
                "variable_key",
                "default",
                "required",
                "silent"
            ]
        },
        "sregistry": {},
        "sregistry.version": {},
        "sregistry.main": {
            "get_client": [
                "image",
                "quiet"
            ]
        },
        "sregistry.main.google_storage.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_storage.build": {
            "build": [
                "self",
                "repo",
                "config",
                "name",
                "commit",
                "tag",
                "recipe",
                "preview"
            ],
            "list_builders": [
                "self",
                "project",
                "zone"
            ],
            "list_templates": [
                "self",
                "name"
            ],
            "get_templates": [
                "self"
            ],
            "load_templates": [
                "self",
                "name"
            ],
            "get_instances": [
                "self",
                "project",
                "zone"
            ],
            "get_ipaddress": [
                "self",
                "name",
                "retries",
                "delay"
            ],
            "load_build_config": [
                "self",
                "config"
            ],
            "setup_build": [
                "self",
                "name",
                "repo",
                "config",
                "tag",
                "commit",
                "recipe",
                "startup_script"
            ],
            "setconfig": [
                "lookup",
                "key",
                "value"
            ],
            "run_build": [
                "self",
                "config"
            ]
        },
        "sregistry.main.google_storage": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_storage.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "chunk_size",
                "metadata"
            ]
        },
        "sregistry.main.google_storage.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_storage.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_storage.utils": {
            "prepare_metadata": [
                "metadata"
            ],
            "get_build_template": [
                "name",
                "manager"
            ]
        },
        "sregistry.main.google_storage.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.__template__": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.__template__.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.__template__.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.__template__.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.dropbox.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.dropbox": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_get_metadata": [
                    "self",
                    "image_file",
                    "dbx_metadata"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "exists": [
                    "self",
                    "path"
                ]
            }
        },
        "sregistry.main.dropbox.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.dropbox.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.dropbox.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.workers": {},
        "sregistry.main.workers.aws": {
            "download_task": [
                "url",
                "headers",
                "download_to",
                "download_type"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "update_token": [
                "headers"
            ]
        },
        "sregistry.main.workers.tasks": {
            "download_task": [
                "url",
                "headers",
                "destination",
                "download_type"
            ],
            "post": [
                "url",
                "headers",
                "data",
                "return_json"
            ],
            "get": [
                "url",
                "headers",
                "token",
                "data",
                "return_json"
            ],
            "download": [
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "url",
                "headers",
                "stream_to",
                "retry"
            ],
            "call": [
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry"
            ],
            "update_token": [
                "response",
                "headers"
            ]
        },
        "sregistry.main.workers.worker": {
            "init_worker": [],
            "multi_wrapper": [
                "func_args"
            ],
            "multi_package": [
                "func",
                "args"
            ],
            "Workers": {
                "__init__": [
                    "self",
                    "workers"
                ],
                "start": [
                    "self"
                ],
                "end": [
                    "self"
                ],
                "run": [
                    "self",
                    "func",
                    "tasks",
                    "func2"
                ]
            }
        },
        "sregistry.main.hub": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ]
            }
        },
        "sregistry.main.hub.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.main.hub.query": {
            "search": [
                "self",
                "query"
            ],
            "list_all": [
                "self"
            ],
            "search_collection": [
                "self",
                "query"
            ]
        },
        "sregistry.main.gitlab": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_get_metadata": [
                    "self"
                ],
                "artifact_to_tag": [
                    "self",
                    "filename"
                ],
                "_parse_image_name": [
                    "self",
                    "image",
                    "retry"
                ]
            }
        },
        "sregistry.main.gitlab.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.gitlab.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "collection",
                "job_id"
            ]
        },
        "sregistry.main.google_build.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ],
            "destroy": [
                "self",
                "name"
            ]
        },
        "sregistry.main.google_build.build": {
            "build": [
                "self",
                "name",
                "recipe",
                "context",
                "preview",
                "headless",
                "working_dir",
                "webhook",
                "timeout",
                "extra_data"
            ],
            "build_repo": [
                "self",
                "repo",
                "recipe",
                "commit",
                "branch",
                "headless",
                "preview",
                "webhook",
                "timeout",
                "token",
                "extra_data"
            ],
            "create_build_package": [
                "package_files",
                "working_dir"
            ],
            "get_relative_path": [
                "filename",
                "working_dir"
            ],
            "add_webhook": [
                "config",
                "webhook",
                "extra_data"
            ],
            "load_build_config": [
                "self",
                "name",
                "recipe",
                "template",
                "version",
                "prefix"
            ],
            "run_build": [
                "self",
                "config"
            ],
            "submit_build": [
                "self",
                "config"
            ],
            "build_status": [
                "self",
                "build_id"
            ],
            "finish_build": [
                "self",
                "build_id",
                "config",
                "response"
            ],
            "get_blob_location": [
                "response",
                "bucket"
            ],
            "update_blob_metadata": [
                "blob",
                "response",
                "bucket",
                "config"
            ]
        },
        "sregistry.main.google_build.client": {
            "get_client": [
                "quiet",
                "init"
            ]
        },
        "sregistry.main.google_build": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base",
                    "init"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_services": [
                    "self",
                    "version"
                ],
                "_get_bucket": [
                    "self",
                    "bucket_name"
                ],
                "_get_project": [
                    "self",
                    "project"
                ],
                "_get_zone": [
                    "self",
                    "zone"
                ]
            }
        },
        "sregistry.main.google_build.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "upload": [
                "self",
                "source",
                "destination",
                "bucket",
                "chunk_size",
                "metadata",
                "keep_private"
            ]
        },
        "sregistry.main.google_build.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_build.logs": {
            "logs": [
                "self",
                "name"
            ],
            "list_logs": [
                "self"
            ],
            "print_log": [
                "self",
                "logname"
            ]
        },
        "sregistry.main.google_build.utils": {
            "get_build_template": [
                "name"
            ]
        },
        "sregistry.main.google_build.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.globus": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_init_clients": [
                    "self"
                ],
                "_load_secrets": [
                    "self"
                ],
                "_tokens_need_update": [
                    "self"
                ],
                "_update_tokens": [
                    "self"
                ]
            }
        },
        "sregistry.main.globus.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.globus.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.globus.utils": {
            "parse_endpoint_name": [
                "self",
                "endpoint"
            ],
            "create_endpoint_cache": [
                "self",
                "endpoint_id",
                "cache"
            ],
            "create_endpoint_folder": [
                "self",
                "endpoint_id",
                "folder"
            ],
            "get_endpoint_path": [
                "self",
                "endpoint_id"
            ],
            "init_transfer_client": [
                "self"
            ],
            "get_endpoint": [
                "self",
                "endpoint_id"
            ],
            "get_endpoints": [
                "self",
                "query"
            ]
        },
        "sregistry.main.globus.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_endpoints": [
                "self",
                "query"
            ],
            "list_endpoint": [
                "self",
                "endpoint",
                "query"
            ]
        },
        "sregistry.main.docker.api": {
            "update_token": [
                "self",
                "response"
            ],
            "get_manifests": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest_selfLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "digest",
                "version"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_download_cache": [
                "self",
                "destination",
                "subfolder"
            ],
            "get_digests": [
                "self"
            ],
            "get_layerLink": [
                "self",
                "repo_name",
                "digest"
            ],
            "get_layer": [
                "self",
                "image_id",
                "repo_name",
                "download_folder"
            ],
            "get_size": [
                "self",
                "add_padding",
                "round_up",
                "return_mb"
            ],
            "get_config": [
                "self",
                "key",
                "delim"
            ],
            "get_environment_tar": [
                "self"
            ],
            "create_metadata_tar": [
                "self",
                "destination",
                "metadata_folder"
            ],
            "extract_env": [
                "self"
            ],
            "extract_runscript": [
                "self"
            ],
            "extract_labels": [
                "self"
            ]
        },
        "sregistry.main.docker": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_update_base": [
                    "self",
                    "image"
                ],
                "_set_base": [
                    "self",
                    "default_base"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.docker.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force",
                "base"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force",
                "uri"
            ]
        },
        "sregistry.main.docker.utils": {
            "get_template": [
                "name"
            ],
            "create_tar": [
                "files",
                "output_folder"
            ],
            "get_content_hash": [
                "contents"
            ]
        },
        "sregistry.main.base.headers": {
            "get_headers": [
                "self"
            ],
            "reset_headers": [
                "self"
            ],
            "update_headers": [
                "self",
                "fields"
            ]
        },
        "sregistry.main.base.inspect": {
            "get_metadata": [
                "self",
                "image_file",
                "names"
            ]
        },
        "sregistry.main.base.auth": {
            "require_secrets": [
                "self",
                "params"
            ],
            "auth_flow": [
                "self",
                "url"
            ]
        },
        "sregistry.main.base": {
            "ApiConnection": {
                "__init__": [
                    "self"
                ],
                "_client_tagged": [
                    "self",
                    "tags"
                ],
                "speak": [
                    "self"
                ],
                "_speak": [
                    "self"
                ],
                "announce": [
                    "self",
                    "command"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "client_name": [
                    "self"
                ]
            }
        },
        "sregistry.main.base.settings": {
            "get_settings": [
                "self",
                "client_name"
            ],
            "get_setting": [
                "self",
                "name",
                "default"
            ],
            "get_and_update_setting": [
                "self",
                "name",
                "default"
            ],
            "required_get_and_update": [
                "self",
                "name",
                "default"
            ],
            "update_setting": [
                "self",
                "name",
                "value"
            ],
            "get_storage_name": [
                "self",
                "names",
                "remove_dir"
            ]
        },
        "sregistry.main.base.http": {
            "delete": [
                "self",
                "url",
                "headers",
                "return_json",
                "default_headers"
            ],
            "head": [
                "self",
                "url"
            ],
            "healthy": [
                "self",
                "url"
            ],
            "put": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "post": [
                "self",
                "url",
                "headers",
                "data",
                "return_json",
                "default_headers"
            ],
            "get": [
                "self",
                "url",
                "headers",
                "token",
                "data",
                "return_json",
                "default_headers",
                "quiet"
            ],
            "paginate_get": [
                "self",
                "url",
                "headers",
                "return_json",
                "start_page"
            ],
            "verify": [
                "self"
            ],
            "download": [
                "self",
                "url",
                "file_name",
                "headers",
                "show_progress"
            ],
            "stream": [
                "self",
                "url",
                "headers",
                "stream_to",
                "retry",
                "default_headers",
                "show_progress"
            ],
            "stream_response": [
                "self",
                "response",
                "stream_to",
                "show_progress"
            ],
            "call": [
                "self",
                "url",
                "func",
                "data",
                "headers",
                "return_json",
                "stream",
                "retry",
                "default_headers",
                "quiet"
            ]
        },
        "sregistry.main.swift": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "get_collections": [
                    "self"
                ],
                "_get_collection": [
                    "self",
                    "name"
                ],
                "_get_or_create_collection": [
                    "self",
                    "name"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.swift.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.swift.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.swift.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query"
            ]
        },
        "sregistry.main.aws.api": {
            "update_token": [
                "self"
            ],
            "download_layers": [
                "self",
                "repo_name",
                "digest",
                "destination"
            ],
            "get_manifest": [
                "self",
                "repo_name",
                "tag"
            ],
            "get_digests": [
                "self",
                "repo_name",
                "tag"
            ]
        },
        "sregistry.main.aws": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self",
                    "zone"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.aws.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ],
            "_pull": [
                "self",
                "file_name",
                "names",
                "save",
                "force"
            ]
        },
        "sregistry.main.registry.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.registry.build": {
            "build": [
                "self",
                "recipe",
                "name",
                "extra"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.auth": {
            "authorize": [
                "self",
                "names",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_update_base": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "_add_https": [
                    "self",
                    "q"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.registry.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ],
            "create_callback": [
                "encoder",
                "quiet"
            ]
        },
        "sregistry.main.registry.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.registry.utils": {
            "_encode": [
                "item"
            ],
            "generate_signature": [
                "payload",
                "secret"
            ],
            "generate_timestamp": [],
            "generate_credential": [
                "s"
            ],
            "generate_header_signature": [
                "secret",
                "payload",
                "request_type"
            ]
        },
        "sregistry.main.registry.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self"
            ],
            "collection_search": [
                "self",
                "query"
            ],
            "label_search": [
                "self",
                "key",
                "value"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.templates": {},
        "sregistry.main.templates.build": {},
        "sregistry.main.google_drive.share": {
            "share": [
                "self",
                "query",
                "share_to"
            ]
        },
        "sregistry.main.google_drive": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "_init_client": [
                    "self"
                ],
                "_get_service": [
                    "self",
                    "version"
                ]
            }
        },
        "sregistry.main.google_drive.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.google_drive.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.google_drive.utils": {
            "get_or_create_folder": [
                "self",
                "folder"
            ],
            "create_folder": [
                "self",
                "folder"
            ]
        },
        "sregistry.main.google_drive.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "list_containers": [
                "self"
            ],
            "search_all": [
                "self"
            ],
            "container_query": [
                "self",
                "query",
                "quiet"
            ]
        },
        "sregistry.main.s3.delete": {
            "delete": [
                "self",
                "image",
                "force"
            ]
        },
        "sregistry.main.s3": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets",
                    "base"
                ],
                "_speak": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "_read_response": [
                    "self",
                    "response",
                    "field"
                ],
                "get_bucket_name": [
                    "self"
                ],
                "get_bucket": [
                    "self"
                ],
                "get_resource": [
                    "self"
                ],
                "_update_secrets": [
                    "self",
                    "base"
                ]
            }
        },
        "sregistry.main.s3.push": {
            "push": [
                "self",
                "path",
                "name",
                "tag"
            ]
        },
        "sregistry.main.s3.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save"
            ]
        },
        "sregistry.main.s3.query": {
            "search": [
                "self",
                "query",
                "args"
            ],
            "search_all": [
                "self",
                "quiet"
            ],
            "container_search": [
                "self",
                "query",
                "across_collections"
            ]
        },
        "sregistry.main.nvidia": {
            "Client": {
                "__init__": [
                    "self",
                    "secrets"
                ],
                "_reset_headers": [
                    "self"
                ],
                "_set_base": [
                    "self"
                ],
                "_update_secrets": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            }
        },
        "sregistry.main.nvidia.pull": {
            "pull": [
                "self",
                "images",
                "file_name",
                "save",
                "force"
            ]
        },
        "sregistry.logger.spinner": {
            "Spinner": {
                "spinning_cursor": [],
                "balloons_cursor": [],
                "changing_arrows": [],
                "select_generator": [
                    "self",
                    "generator"
                ],
                "__init__": [
                    "self",
                    "delay",
                    "generator"
                ],
                "run": [
                    "self"
                ],
                "start": [
                    "self"
                ],
                "stop": [
                    "self"
                ]
            }
        },
        "sregistry.logger.namer": {
            "main": [],
            "RobotNamer": {
                "generate": [
                    "self",
                    "delim",
                    "length",
                    "chars"
                ],
                "_select": [
                    "self",
                    "select_from"
                ]
            }
        },
        "sregistry.logger": {},
        "sregistry.logger.message": {
            "get_logging_level": [],
            "get_user_color_preference": [],
            "convert2boolean": [
                "arg"
            ],
            "SRegistryMessage": {
                "__init__": [
                    "self",
                    "MESSAGELEVEL"
                ],
                "useColor": [
                    "self"
                ],
                "addColor": [
                    "self",
                    "level",
                    "text"
                ],
                "emitError": [
                    "self",
                    "level"
                ],
                "emitOutput": [
                    "self",
                    "level"
                ],
                "isEnabledFor": [
                    "self",
                    "messageLevel"
                ],
                "emit": [
                    "self",
                    "level",
                    "message",
                    "prefix",
                    "color"
                ],
                "write": [
                    "self",
                    "stream",
                    "message"
                ],
                "get_logs": [
                    "self",
                    "join_newline"
                ],
                "show_progress": [
                    "self",
                    "iteration",
                    "total",
                    "length",
                    "min_level",
                    "prefix",
                    "carriage_return",
                    "suffix",
                    "symbol"
                ],
                "abort": [
                    "self",
                    "message"
                ],
                "critical": [
                    "self",
                    "message"
                ],
                "error": [
                    "self",
                    "message"
                ],
                "exit": [
                    "self",
                    "message",
                    "return_code"
                ],
                "warning": [
                    "self",
                    "message"
                ],
                "log": [
                    "self",
                    "message"
                ],
                "custom": [
                    "self",
                    "prefix",
                    "message",
                    "color"
                ],
                "info": [
                    "self",
                    "message"
                ],
                "newline": [
                    "self"
                ],
                "verbose": [
                    "self",
                    "message"
                ],
                "verbose1": [
                    "self",
                    "message"
                ],
                "verbose2": [
                    "self",
                    "message"
                ],
                "verbose3": [
                    "self",
                    "message"
                ],
                "debug": [
                    "self",
                    "message"
                ],
                "is_quiet": [
                    "self"
                ],
                "table": [
                    "self",
                    "rows",
                    "col_width"
                ]
            }
        },
        "sregistry.logger.progress": {
            "bar": [
                "it",
                "label",
                "width",
                "hide",
                "empty_char",
                "filled_char",
                "expected_size",
                "every"
            ],
            "ProgressBar": {
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_val",
                    "exc_tb"
                ],
                "__init__": [
                    "self",
                    "label",
                    "width",
                    "hide",
                    "empty_char",
                    "filled_char",
                    "expected_size",
                    "every"
                ],
                "show": [
                    "self",
                    "progress",
                    "count"
                ],
                "done": [
                    "self"
                ],
                "format_time": [
                    "self",
                    "seconds"
                ]
            }
        },
        "sregistry.database.dummy": {
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ],
            "init_db": [
                "self",
                "db_path"
            ]
        },
        "sregistry.database": {},
        "sregistry.database.sqlite": {
            "get_or_create_collection": [
                "self",
                "name"
            ],
            "get_collection": [
                "self",
                "name"
            ],
            "get_container": [
                "self",
                "name",
                "collection_id",
                "tag",
                "version"
            ],
            "get": [
                "self",
                "name",
                "quiet"
            ],
            "images": [
                "self",
                "query"
            ],
            "inspect": [
                "self",
                "name"
            ],
            "rename": [
                "self",
                "image_name",
                "path"
            ],
            "update_container_metadata": [
                "container",
                "collection",
                "names"
            ],
            "mv": [
                "self",
                "image_name",
                "path"
            ],
            "cp": [
                "self",
                "move_to",
                "image_name",
                "container",
                "command"
            ],
            "rm": [
                "self",
                "image_name"
            ],
            "add": [
                "self",
                "image_path",
                "image_uri",
                "image_name",
                "url",
                "metadata",
                "save",
                "copy"
            ]
        },
        "sregistry.database.models": {
            "init_db": [
                "self",
                "db_path"
            ],
            "Collection": {
                "__init__": [
                    "self",
                    "name",
                    "token"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "url": [
                    "self"
                ]
            },
            "Container": {
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "get_uri": [
                    "self"
                ]
            }
        },
        "sregistry.utils.terminal": {
            "get_singularity_version": [
                "singularity_version"
            ],
            "which": [
                "software",
                "strip_newline"
            ],
            "check_install": [
                "software",
                "quiet"
            ],
            "get_installdir": [],
            "get_thumbnail": [],
            "run_command": [
                "cmd",
                "sudo"
            ],
            "confirm_action": [
                "question",
                "force"
            ],
            "confirm_delete": [
                "filename",
                "force"
            ]
        },
        "sregistry.utils": {},
        "sregistry.utils.recipes": {},
        "sregistry.utils.fileio": {
            "mkdir_p": [
                "path"
            ],
            "get_tmpfile": [
                "requested_tmpdir",
                "prefix"
            ],
            "get_tmpdir": [
                "requested_tmpdir",
                "prefix",
                "create"
            ],
            "get_userhome": [],
            "extract_tar": [
                "archive",
                "output_folder",
                "handle_whiteout"
            ],
            "_extract_tar": [
                "archive",
                "output_folder"
            ],
            "get_file_hash": [
                "image_path",
                "algorithm"
            ],
            "copyfile": [
                "source",
                "destination",
                "force"
            ],
            "write_file": [
                "filename",
                "content",
                "mode"
            ],
            "write_json": [
                "json_obj",
                "filename",
                "mode",
                "print_pretty"
            ],
            "print_json": [
                "json_obj"
            ],
            "read_file": [
                "filename",
                "mode",
                "readlines"
            ],
            "read_json": [
                "filename",
                "mode"
            ]
        },
        "sregistry.utils.names": {
            "set_default": [
                "item",
                "default",
                "use_default"
            ],
            "parse_image_name": [
                "image_name",
                "tag",
                "version",
                "defaults",
                "ext",
                "default_collection",
                "default_tag",
                "base",
                "lowercase"
            ],
            "get_uri": [
                "image",
                "validate"
            ],
            "remove_uri": [
                "image"
            ],
            "get_recipe_tag": [
                "path"
            ]
        },
        "sregistry.tests": {},
        "sregistry.tests.test_utils": {
            "test_write_read_files": [
                "tmp_path"
            ],
            "test_write_bad_json": [
                "tmp_path"
            ],
            "test_write_json": [
                "tmp_path"
            ],
            "test_check_install": [],
            "test_get_installdir": [],
            "test_remove_uri": [],
            "ubuntu_check": [
                "names",
                "original"
            ],
            "test_parse_image_name": [],
            "test_recipe_tag": [],
            "test_run_command": [],
            "test_get_thumbnail": [],
            "test_which": [],
            "test_get_file_hash": [],
            "test_get_uri": [],
            "test_get_userhome": [],
            "test_read_tar": [
                "tmp_path"
            ],
            "test_copyfile": [
                "tmp_path"
            ],
            "test_get_tmpdir_tmpfile": [],
            "test_mkdir_p": [
                "tmp_path"
            ],
            "test_print_json": []
        },
        "sregistry.tests.testdata": {},
        "sregistry.auth": {},
        "sregistry.auth.utils": {
            "basic_auth_header": [
                "username",
                "password"
            ]
        },
        "sregistry.auth.secrets": {
            "get_credential_cache": [],
            "_default_client_secrets": [],
            "update_client_secrets": [
                "backend",
                "updates",
                "secrets",
                "save"
            ],
            "read_client_secrets": [],
            "get_secrets_file": []
        },
        "sregistry.client.shell": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "ipython": [
                "args"
            ],
            "bpython": [
                "args"
            ],
            "python": [
                "args"
            ]
        },
        "sregistry.client.inspect": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.delete": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.share": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.backend": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "usage": [],
            "status": [
                "backend"
            ],
            "add": [
                "backend",
                "variable",
                "value",
                "force"
            ],
            "remove": [
                "backend",
                "variable"
            ],
            "activate": [
                "backend"
            ],
            "update_secrets": [
                "secrets"
            ],
            "delete_backend": [
                "backend"
            ],
            "deactivate": [],
            "list_backends": [
                "backend"
            ]
        },
        "sregistry.client.mv": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rename": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.build": {
            "main": [
                "args",
                "parser",
                "extra"
            ],
            "run_google_build": [
                "cli",
                "args"
            ],
            "run_compute_build": [
                "cli",
                "args"
            ],
            "run_registry_build": [
                "cli",
                "args",
                "extra"
            ],
            "print_output": [
                "response",
                "output_file"
            ],
            "kill": [
                "args"
            ],
            "instances": [
                "args"
            ],
            "templates": [
                "args",
                "template_name"
            ],
            "list_logs": [
                "args",
                "container_name"
            ]
        },
        "sregistry.client.get": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client": {
            "get_parser": [],
            "main": []
        },
        "sregistry.client.push": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.pull": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.labels": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.search": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.add": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.rm": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.list": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        },
        "sregistry.client.images": {
            "main": [
                "args",
                "parser",
                "extra"
            ]
        }
    }
}