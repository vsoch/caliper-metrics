{
    "0.9.1": {
        "doc.sphinxext.setup": {},
        "doc.sphinxext.ipython_console_highlighting": {
            "setup": [
                "app"
            ],
            "IPythonConsoleLexer": {
                "get_tokens_unprocessed": [
                    "self",
                    "text"
                ]
            }
        },
        "doc.sphinxext.only_directives": {
            "run": [
                "content",
                "node_class",
                "state",
                "content_offset"
            ],
            "setup": [
                "app"
            ],
            "html_only": {},
            "latex_only": {}
        },
        "doc.sphinxext.compiler_unparse": {
            "unparse": [
                "ast",
                "single_line_functions"
            ],
            "UnparseCompilerAst": {
                "__init__": [
                    "self",
                    "tree",
                    "file",
                    "single_line_functions"
                ],
                "_fill": [
                    "self",
                    "text"
                ],
                "_write": [
                    "self",
                    "text"
                ],
                "_enter": [
                    "self"
                ],
                "_leave": [
                    "self"
                ],
                "_dispatch": [
                    "self",
                    "tree"
                ],
                "_Add": [
                    "self",
                    "t"
                ],
                "_And": [
                    "self",
                    "t"
                ],
                "_AssAttr": [
                    "self",
                    "t"
                ],
                "_Assign": [
                    "self",
                    "t"
                ],
                "_AssName": [
                    "self",
                    "t"
                ],
                "_AssTuple": [
                    "self",
                    "t"
                ],
                "_AugAssign": [
                    "self",
                    "t"
                ],
                "_Bitand": [
                    "self",
                    "t"
                ],
                "_Bitor": [
                    "self",
                    "t"
                ],
                "_CallFunc": [
                    "self",
                    "t"
                ],
                "_Compare": [
                    "self",
                    "t"
                ],
                "_Const": [
                    "self",
                    "t"
                ],
                "_Decorators": [
                    "self",
                    "t"
                ],
                "_Dict": [
                    "self",
                    "t"
                ],
                "_Discard": [
                    "self",
                    "t"
                ],
                "_Div": [
                    "self",
                    "t"
                ],
                "_Ellipsis": [
                    "self",
                    "t"
                ],
                "_From": [
                    "self",
                    "t"
                ],
                "_Function": [
                    "self",
                    "t"
                ],
                "_Getattr": [
                    "self",
                    "t"
                ],
                "_If": [
                    "self",
                    "t"
                ],
                "_IfExp": [
                    "self",
                    "t"
                ],
                "_Import": [
                    "self",
                    "t"
                ],
                "_Keyword": [
                    "self",
                    "t"
                ],
                "_List": [
                    "self",
                    "t"
                ],
                "_Module": [
                    "self",
                    "t"
                ],
                "_Mul": [
                    "self",
                    "t"
                ],
                "_Name": [
                    "self",
                    "t"
                ],
                "_NoneType": [
                    "self",
                    "t"
                ],
                "_Not": [
                    "self",
                    "t"
                ],
                "_Or": [
                    "self",
                    "t"
                ],
                "_Pass": [
                    "self",
                    "t"
                ],
                "_Printnl": [
                    "self",
                    "t"
                ],
                "_Power": [
                    "self",
                    "t"
                ],
                "_Return": [
                    "self",
                    "t"
                ],
                "_Slice": [
                    "self",
                    "t"
                ],
                "_Sliceobj": [
                    "self",
                    "t"
                ],
                "_Stmt": [
                    "self",
                    "tree"
                ],
                "_Sub": [
                    "self",
                    "t"
                ],
                "_Subscript": [
                    "self",
                    "t"
                ],
                "_TryExcept": [
                    "self",
                    "t"
                ],
                "_Tuple": [
                    "self",
                    "t"
                ],
                "_UnaryAdd": [
                    "self",
                    "t"
                ],
                "_UnarySub": [
                    "self",
                    "t"
                ],
                "_With": [
                    "self",
                    "t"
                ],
                "_int": [
                    "self",
                    "t"
                ],
                "__binary_op": [
                    "self",
                    "t",
                    "symbol"
                ],
                "_float": [
                    "self",
                    "t"
                ],
                "_str": [
                    "self",
                    "t"
                ],
                "_tuple": [
                    "self",
                    "t"
                ]
            }
        },
        "doc.sphinxext.docscrape_sphinx": {
            "get_doc_object": [
                "obj",
                "what",
                "doc",
                "config"
            ],
            "SphinxDocString": {
                "__init__": [
                    "self",
                    "docstring",
                    "config"
                ],
                "_str_header": [
                    "self",
                    "name",
                    "symbol"
                ],
                "_str_field_list": [
                    "self",
                    "name"
                ],
                "_str_indent": [
                    "self",
                    "doc",
                    "indent"
                ],
                "_str_signature": [
                    "self"
                ],
                "_str_summary": [
                    "self"
                ],
                "_str_extended_summary": [
                    "self"
                ],
                "_str_param_list": [
                    "self",
                    "name"
                ],
                "_obj": [
                    "self"
                ],
                "_str_member_list": [
                    "self",
                    "name"
                ],
                "_str_section": [
                    "self",
                    "name"
                ],
                "_str_see_also": [
                    "self",
                    "func_role"
                ],
                "_str_warnings": [
                    "self"
                ],
                "_str_index": [
                    "self"
                ],
                "_str_references": [
                    "self"
                ],
                "_str_examples": [
                    "self"
                ],
                "__str__": [
                    "self",
                    "indent",
                    "func_role"
                ]
            },
            "SphinxFunctionDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "config"
                ]
            },
            "SphinxClassDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "func_doc",
                    "config"
                ]
            },
            "SphinxObjDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "config"
                ]
            }
        },
        "doc.sphinxext": {},
        "doc.sphinxext.traitsdoc": {
            "looks_like_issubclass": [
                "obj",
                "classname"
            ],
            "get_doc_object": [
                "obj",
                "what",
                "config"
            ],
            "setup": [
                "app"
            ],
            "SphinxTraitsDoc": {
                "__init__": [
                    "self",
                    "cls",
                    "modulename",
                    "func_doc"
                ],
                "_str_summary": [
                    "self"
                ],
                "_str_extended_summary": [
                    "self"
                ],
                "__str__": [
                    "self",
                    "indent",
                    "func_role"
                ]
            }
        },
        "doc.sphinxext.comment_eater": {
            "strip_comment_marker": [
                "text"
            ],
            "get_class_traits": [
                "klass"
            ],
            "Comment": {
                "__init__": [
                    "self",
                    "start_lineno",
                    "end_lineno",
                    "text"
                ],
                "add": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "NonComment": {
                "__init__": [
                    "self",
                    "start_lineno",
                    "end_lineno"
                ],
                "add": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "CommentBlocker": {
                "__init__": [
                    "self"
                ],
                "process_file": [
                    "self",
                    "file"
                ],
                "process_token": [
                    "self",
                    "kind",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "new_noncomment": [
                    "self",
                    "start_lineno",
                    "end_lineno"
                ],
                "new_comment": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "make_index": [
                    "self"
                ],
                "search_for_comment": [
                    "self",
                    "lineno",
                    "default"
                ]
            }
        },
        "pandas.version": {},
        "pandas.info": {},
        "pandas.stats.misc": {
            "zscore": [
                "series"
            ],
            "correl_ts": [
                "frame1",
                "frame2"
            ],
            "correl_xs": [
                "frame1",
                "frame2"
            ],
            "percentileRank": [
                "frame",
                "column",
                "kind"
            ],
            "bucket": [
                "series",
                "k",
                "by"
            ],
            "_split_quantile": [
                "arr",
                "k"
            ],
            "bucketcat": [
                "series",
                "cats"
            ],
            "bucketpanel": [
                "series",
                "bins",
                "by",
                "cat"
            ],
            "_bucketpanel_by": [
                "series",
                "xby",
                "yby",
                "xbins",
                "ybins"
            ],
            "_bucketpanel_cat": [
                "series",
                "xcat",
                "ycat"
            ],
            "_intern": [
                "values"
            ],
            "_uniquify": [
                "xlabels",
                "ylabels",
                "xbins",
                "ybins"
            ],
            "_bucket_labels": [
                "series",
                "k"
            ]
        },
        "pandas.stats.common": {
            "_get_cluster_type": [
                "cluster_type"
            ],
            "_get_window_type": [
                "window_type"
            ],
            "banner": [
                "text",
                "width"
            ]
        },
        "pandas.stats.math": {
            "rank": [
                "X",
                "cond"
            ],
            "solve": [
                "a",
                "b"
            ],
            "inv": [
                "a"
            ],
            "is_psd": [
                "m"
            ],
            "newey_west": [
                "m",
                "max_lags",
                "nobs",
                "df",
                "nw_overlap"
            ],
            "calc_F": [
                "R",
                "r",
                "beta",
                "var_beta",
                "nobs",
                "df"
            ]
        },
        "pandas.stats.fama_macbeth": {
            "fama_macbeth": [],
            "_calc_t_stat": [
                "beta",
                "nw_lags_beta"
            ],
            "FamaMacBeth": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "intercept",
                    "nw_lags",
                    "nw_lags_beta",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_stats": [
                    "self"
                ],
                "_mean_beta_raw": [
                    "self"
                ],
                "_std_beta_raw": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "_make_result": [
                    "self",
                    "result"
                ],
                "mean_beta": [
                    "self"
                ],
                "std_beta": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "_results": [
                    "self"
                ],
                "_coef_table": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "summary": [
                    "self"
                ]
            },
            "MovingFamaMacBeth": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "window_type",
                    "window",
                    "intercept",
                    "nw_lags",
                    "nw_lags_beta",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose"
                ],
                "_is_rolling": [
                    "self"
                ],
                "_calc_stats": [
                    "self"
                ],
                "_make_result": [
                    "self",
                    "result"
                ],
                "_result_index": [
                    "self"
                ],
                "_results": [
                    "self"
                ]
            }
        },
        "pandas.stats.api": {},
        "pandas.stats.moments": {
            "rolling_count": [
                "arg",
                "window",
                "freq",
                "time_rule"
            ],
            "rolling_cov": [
                "arg1",
                "arg2",
                "window",
                "min_periods",
                "time_rule"
            ],
            "rolling_corr": [
                "arg1",
                "arg2",
                "window",
                "min_periods",
                "time_rule"
            ],
            "_flex_binary_moment": [
                "arg1",
                "arg2",
                "f"
            ],
            "rolling_corr_pairwise": [
                "df",
                "window",
                "min_periods"
            ],
            "_rolling_moment": [
                "arg",
                "window",
                "func",
                "minp",
                "axis",
                "freq",
                "time_rule"
            ],
            "_process_data_structure": [
                "arg",
                "kill_inf"
            ],
            "_get_center_of_mass": [
                "com",
                "span"
            ],
            "ewma": [
                "arg",
                "com",
                "span",
                "min_periods",
                "freq",
                "time_rule",
                "adjust"
            ],
            "_first_valid_index": [
                "arr"
            ],
            "ewmvar": [
                "arg",
                "com",
                "span",
                "min_periods",
                "bias",
                "freq",
                "time_rule"
            ],
            "ewmstd": [
                "arg",
                "com",
                "span",
                "min_periods",
                "bias",
                "time_rule"
            ],
            "ewmcov": [
                "arg1",
                "arg2",
                "com",
                "span",
                "min_periods",
                "bias",
                "freq",
                "time_rule"
            ],
            "ewmcorr": [
                "arg1",
                "arg2",
                "com",
                "span",
                "min_periods",
                "freq",
                "time_rule"
            ],
            "_zsqrt": [
                "x"
            ],
            "_prep_binary": [
                "arg1",
                "arg2"
            ],
            "_conv_timerule": [
                "arg",
                "freq",
                "time_rule"
            ],
            "_require_min_periods": [
                "p"
            ],
            "_use_window": [
                "minp",
                "window"
            ],
            "_rolling_func": [
                "func",
                "desc",
                "check_minp"
            ],
            "rolling_quantile": [
                "arg",
                "window",
                "quantile",
                "min_periods",
                "freq",
                "time_rule"
            ],
            "rolling_apply": [
                "arg",
                "window",
                "func",
                "min_periods",
                "freq",
                "time_rule"
            ],
            "_expanding_func": [
                "func",
                "desc",
                "check_minp"
            ],
            "expanding_count": [
                "arg",
                "freq",
                "time_rule"
            ],
            "expanding_quantile": [
                "arg",
                "quantile",
                "min_periods",
                "freq",
                "time_rule"
            ],
            "expanding_cov": [
                "arg1",
                "arg2",
                "min_periods",
                "time_rule"
            ],
            "expanding_corr": [
                "arg1",
                "arg2",
                "min_periods",
                "time_rule"
            ],
            "expanding_corr_pairwise": [
                "df",
                "min_periods"
            ],
            "expanding_apply": [
                "arg",
                "func",
                "min_periods",
                "freq",
                "time_rule"
            ]
        },
        "pandas.stats.interface": {
            "ols": []
        },
        "pandas.stats": {},
        "pandas.stats.ols": {
            "_safe_update": [
                "d",
                "other"
            ],
            "_filter_data": [
                "lhs",
                "rhs",
                "weights"
            ],
            "_combine_rhs": [
                "rhs"
            ],
            "_y_converter": [
                "y"
            ],
            "f_stat_to_dict": [
                "result"
            ],
            "OLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "intercept",
                    "weights",
                    "nw_lags",
                    "nw_overlap"
                ],
                "_prepare_data": [
                    "self"
                ],
                "nobs": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "nw_lags": [
                    "self"
                ],
                "x": [
                    "self"
                ],
                "y": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "df": [
                    "self"
                ],
                "_df_model_raw": [
                    "self"
                ],
                "df_model": [
                    "self"
                ],
                "_df_resid_raw": [
                    "self"
                ],
                "df_resid": [
                    "self"
                ],
                "_f_stat_raw": [
                    "self"
                ],
                "f_stat": [
                    "self"
                ],
                "f_test": [
                    "self",
                    "hypothesis"
                ],
                "_p_value_raw": [
                    "self"
                ],
                "p_value": [
                    "self"
                ],
                "_r2_raw": [
                    "self"
                ],
                "_use_centered_tss": [
                    "self"
                ],
                "r2": [
                    "self"
                ],
                "_r2_adj_raw": [
                    "self"
                ],
                "r2_adj": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "_rmse_raw": [
                    "self"
                ],
                "rmse": [
                    "self"
                ],
                "_std_err_raw": [
                    "self"
                ],
                "std_err": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "var_beta": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "_y_predict_raw": [
                    "self"
                ],
                "y_predict": [
                    "self"
                ],
                "predict": [
                    "self",
                    "beta",
                    "x",
                    "fill_value",
                    "fill_method",
                    "axis"
                ],
                "_results": [
                    "self"
                ],
                "_coef_table": [
                    "self"
                ],
                "summary_as_matrix": [
                    "self"
                ],
                "summary": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "_time_obs_count": [
                    "self"
                ],
                "_total_times": [
                    "self"
                ]
            },
            "MovingOLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "weights",
                    "window_type",
                    "window",
                    "min_periods",
                    "intercept",
                    "nw_lags",
                    "nw_overlap"
                ],
                "_set_window": [
                    "self",
                    "window_type",
                    "window",
                    "min_periods"
                ],
                "beta": [
                    "self"
                ],
                "rank": [
                    "self"
                ],
                "df": [
                    "self"
                ],
                "df_model": [
                    "self"
                ],
                "df_resid": [
                    "self"
                ],
                "f_stat": [
                    "self"
                ],
                "f_test": [
                    "self",
                    "hypothesis"
                ],
                "forecast_mean": [
                    "self"
                ],
                "forecast_vol": [
                    "self"
                ],
                "p_value": [
                    "self"
                ],
                "r2": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "r2_adj": [
                    "self"
                ],
                "rmse": [
                    "self"
                ],
                "std_err": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "var_beta": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "y_predict": [
                    "self"
                ],
                "_is_rolling": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_result_index": [
                    "self"
                ],
                "_valid_indices": [
                    "self"
                ],
                "_rolling_ols_call": [
                    "self"
                ],
                "_calc_betas": [
                    "self",
                    "x",
                    "y"
                ],
                "_rolling_rank": [
                    "self"
                ],
                "_cum_xx": [
                    "self",
                    "x"
                ],
                "_cum_xy": [
                    "self",
                    "x",
                    "y"
                ],
                "_rank_raw": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "_df_model_raw": [
                    "self"
                ],
                "_df_resid_raw": [
                    "self"
                ],
                "_f_stat_raw": [
                    "self"
                ],
                "_p_value_raw": [
                    "self"
                ],
                "_resid_stats": [
                    "self"
                ],
                "_rmse_raw": [
                    "self"
                ],
                "_r2_raw": [
                    "self"
                ],
                "_r2_adj_raw": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "_std_err_raw": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "_forecast_mean_raw": [
                    "self"
                ],
                "_forecast_vol_raw": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "_y_predict_raw": [
                    "self"
                ],
                "_results": [
                    "self"
                ],
                "_window_time_obs": [
                    "self"
                ],
                "_nobs_raw": [
                    "self"
                ],
                "_beta_matrix": [
                    "self",
                    "lag"
                ],
                "_valid_obs_labels": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "nobs": [
                    "self"
                ],
                "_enough_obs": [
                    "self"
                ]
            }
        },
        "pandas.stats.var": {
            "lag_select": [
                "data",
                "max_lags",
                "ic"
            ],
            "_prep_panel_data": [
                "data"
            ],
            "_drop_incomplete_rows": [
                "array"
            ],
            "_make_param_name": [
                "lag",
                "name"
            ],
            "chain_dot": [],
            "VAR": {
                "__init__": [
                    "self",
                    "data",
                    "p",
                    "intercept"
                ],
                "aic": [
                    "self"
                ],
                "bic": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "forecast": [
                    "self",
                    "h"
                ],
                "forecast_cov": [
                    "self",
                    "h"
                ],
                "forecast_std_err": [
                    "self",
                    "h"
                ],
                "granger_causality": [
                    "self"
                ],
                "ols_results": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "summary": [
                    "self"
                ],
                "_alpha": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_trans_B": [
                    "self",
                    "h"
                ],
                "_x": [
                    "self"
                ],
                "_cov_beta": [
                    "self"
                ],
                "_data_xs": [
                    "self",
                    "i"
                ],
                "_forecast_cov_raw": [
                    "self",
                    "n"
                ],
                "_forecast_cov_beta_raw": [
                    "self",
                    "n"
                ],
                "_forecast_cov_resid_raw": [
                    "self",
                    "h"
                ],
                "_forecast_raw": [
                    "self",
                    "h"
                ],
                "_forecast_std_err_raw": [
                    "self",
                    "h"
                ],
                "_ic": [
                    "self"
                ],
                "_k": [
                    "self"
                ],
                "_lag_betas": [
                    "self"
                ],
                "_lagged_data": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "_psi": [
                    "self",
                    "h"
                ],
                "_resid_raw": [
                    "self"
                ],
                "_rss": [
                    "self"
                ],
                "_sigma": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "PanelVAR": {
                "__init__": [
                    "self",
                    "data",
                    "lags",
                    "intercept"
                ],
                "_nobs": [
                    "self"
                ],
                "_rss": [
                    "self"
                ],
                "forecast": [
                    "self",
                    "h"
                ],
                "resid": [
                    "self"
                ],
                "_data_xs": [
                    "self",
                    "i"
                ],
                "_sigma": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_math": {
            "TestMath": {
                "setUp": [
                    "self"
                ],
                "test_rank_1d": [
                    "self"
                ],
                "test_solve_rect": [
                    "self"
                ],
                "test_inv_illformed": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_ols": {
            "_check_repr": [
                "obj"
            ],
            "_compare_ols_results": [
                "model1",
                "model2"
            ],
            "_compare_fullsample_ols": [
                "model1",
                "model2"
            ],
            "_compare_moving_ols": [
                "model1",
                "model2"
            ],
            "_check_non_raw_results": [
                "model"
            ],
            "_period_slice": [
                "panelModel",
                "i"
            ],
            "TestOLS": {
                "setUpClass": [
                    "cls"
                ],
                "testOLSWithDatasets": [
                    "self"
                ],
                "testWLS": [
                    "self"
                ],
                "_check_wls": [
                    "self",
                    "x",
                    "y",
                    "weights"
                ],
                "checkDataSet": [
                    "self",
                    "dataset",
                    "start",
                    "end",
                    "skip_moving"
                ],
                "checkOLS": [
                    "self",
                    "exog",
                    "endog",
                    "x",
                    "y"
                ],
                "checkMovingOLS": [
                    "self",
                    "window_type",
                    "x",
                    "y",
                    "weights"
                ],
                "compare": [
                    "self",
                    "static",
                    "moving",
                    "event_index",
                    "result_index"
                ],
                "test_ols_object_dtype": [
                    "self"
                ]
            },
            "TestOLSMisc": {
                "setupClass": [
                    "cls"
                ],
                "test_f_test": [
                    "self"
                ],
                "test_r2_no_intercept": [
                    "self"
                ],
                "test_summary_many_terms": [
                    "self"
                ],
                "test_y_predict": [
                    "self"
                ],
                "test_predict": [
                    "self"
                ],
                "test_predict_longer_exog": [
                    "self"
                ],
                "test_longpanel_series_combo": [
                    "self"
                ],
                "test_series_rhs": [
                    "self"
                ],
                "test_various_attributes": [
                    "self"
                ],
                "test_catch_regressor_overlap": [
                    "self"
                ],
                "test_plm_ctor": [
                    "self"
                ],
                "test_plm_attrs": [
                    "self"
                ],
                "test_plm_lagged_y_predict": [
                    "self"
                ],
                "test_plm_f_test": [
                    "self"
                ],
                "test_plm_exclude_dummy_corner": [
                    "self"
                ],
                "test_columns_tuples_summary": [
                    "self"
                ]
            },
            "TestPanelOLS": {
                "testFiltering": [
                    "self"
                ],
                "test_wls_panel": [
                    "self"
                ],
                "testWithTimeEffects": [
                    "self"
                ],
                "testWithEntityEffects": [
                    "self"
                ],
                "testWithEntityEffectsAndDroppedDummies": [
                    "self"
                ],
                "testWithXEffects": [
                    "self"
                ],
                "testWithXEffectsAndDroppedDummies": [
                    "self"
                ],
                "testWithXEffectsAndConversion": [
                    "self"
                ],
                "testWithXEffectsAndConversionAndDroppedDummies": [
                    "self"
                ],
                "testForSeries": [
                    "self"
                ],
                "testRolling": [
                    "self"
                ],
                "testRollingWithFixedEffects": [
                    "self"
                ],
                "testRollingWithTimeEffects": [
                    "self"
                ],
                "testRollingWithNeweyWest": [
                    "self"
                ],
                "testRollingWithEntityCluster": [
                    "self"
                ],
                "testRollingWithTimeEffectsAndEntityCluster": [
                    "self"
                ],
                "testRollingWithTimeCluster": [
                    "self"
                ],
                "testRollingWithNeweyWestAndEntityCluster": [
                    "self"
                ],
                "testRollingWithNeweyWestAndTimeEffectsAndEntityCluster": [
                    "self"
                ],
                "testExpanding": [
                    "self"
                ],
                "testNonPooled": [
                    "self"
                ],
                "checkNonPooled": [
                    "self",
                    "x",
                    "y"
                ],
                "checkMovingOLS": [
                    "self",
                    "x",
                    "y",
                    "window_type"
                ],
                "checkForSeries": [
                    "self",
                    "x",
                    "y",
                    "series_x",
                    "series_y"
                ],
                "compare": [
                    "self",
                    "static",
                    "moving",
                    "event_index",
                    "result_index"
                ],
                "test_auto_rolling_window_type": [
                    "self"
                ]
            },
            "TestOLSFilter": {
                "setUp": [
                    "self"
                ],
                "testFilterWithSeriesRHS": [
                    "self"
                ],
                "testFilterWithSeriesRHS2": [
                    "self"
                ],
                "testFilterWithSeriesRHS3": [
                    "self"
                ],
                "testFilterWithDataFrameRHS": [
                    "self"
                ],
                "testFilterWithDictRHS": [
                    "self"
                ],
                "tsAssertEqual": [
                    "self",
                    "ts1",
                    "ts2"
                ]
            }
        },
        "pandas.stats.tests.common": {
            "makeDataFrame": [],
            "getBasicDatasets": [],
            "check_for_scipy": [],
            "check_for_statsmodels": [],
            "BaseTest": {
                "setUp": [
                    "self"
                ],
                "createData1": [
                    "self"
                ],
                "createData2": [
                    "self"
                ],
                "createData3": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_fama_macbeth": {
            "TestFamaMacBeth": {
                "testFamaMacBethRolling": [
                    "self"
                ],
                "checkFamaMacBethExtended": [
                    "self",
                    "window_type",
                    "x",
                    "y"
                ],
                "_check_stuff_works": [
                    "self",
                    "result"
                ]
            }
        },
        "pandas.stats.tests": {},
        "pandas.stats.tests.test_moments": {
            "TestMoments": {
                "setUp": [
                    "self"
                ],
                "test_rolling_sum": [
                    "self"
                ],
                "test_rolling_count": [
                    "self"
                ],
                "test_rolling_mean": [
                    "self"
                ],
                "test_rolling_median": [
                    "self"
                ],
                "test_rolling_min": [
                    "self"
                ],
                "test_rolling_max": [
                    "self"
                ],
                "test_rolling_quantile": [
                    "self"
                ],
                "test_rolling_apply": [
                    "self"
                ],
                "test_rolling_apply_out_of_bounds": [
                    "self"
                ],
                "test_rolling_std": [
                    "self"
                ],
                "test_rolling_std_1obs": [
                    "self"
                ],
                "test_rolling_std_neg_sqrt": [
                    "self"
                ],
                "test_rolling_var": [
                    "self"
                ],
                "test_rolling_skew": [
                    "self"
                ],
                "test_rolling_kurt": [
                    "self"
                ],
                "test_fperr_robustness": [
                    "self"
                ],
                "_check_moment_func": [
                    "self",
                    "func",
                    "static_comp",
                    "window",
                    "has_min_periods",
                    "has_time_rule",
                    "preserve_nan"
                ],
                "_check_ndarray": [
                    "self",
                    "func",
                    "static_comp",
                    "window",
                    "has_min_periods",
                    "preserve_nan"
                ],
                "_check_structures": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule"
                ],
                "test_legacy_time_rule_arg": [
                    "self"
                ],
                "test_ewma": [
                    "self"
                ],
                "test_ewma_nan_handling": [
                    "self"
                ],
                "test_ewmvar": [
                    "self"
                ],
                "test_ewmvol": [
                    "self"
                ],
                "test_ewma_span_com_args": [
                    "self"
                ],
                "test_ew_empty_arrays": [
                    "self"
                ],
                "_check_ew": [
                    "self",
                    "func"
                ],
                "_check_ew_ndarray": [
                    "self",
                    "func",
                    "preserve_nan"
                ],
                "_check_ew_structures": [
                    "self",
                    "func"
                ],
                "test_rolling_cov": [
                    "self"
                ],
                "test_rolling_corr": [
                    "self"
                ],
                "test_rolling_corr_pairwise": [
                    "self"
                ],
                "test_flex_binary_frame": [
                    "self"
                ],
                "test_ewmcov": [
                    "self"
                ],
                "test_ewmcorr": [
                    "self"
                ],
                "_check_binary_ew": [
                    "self",
                    "func"
                ],
                "test_expanding_apply": [
                    "self"
                ],
                "test_expanding_corr": [
                    "self"
                ],
                "test_expanding_count": [
                    "self"
                ],
                "test_expanding_quantile": [
                    "self"
                ],
                "test_expanding_cov": [
                    "self"
                ],
                "test_expanding_max": [
                    "self"
                ],
                "test_expanding_corr_pairwise": [
                    "self"
                ],
                "_check_expanding_ndarray": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule",
                    "preserve_nan"
                ],
                "_check_expanding_structures": [
                    "self",
                    "func"
                ],
                "_check_expanding": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule",
                    "preserve_nan"
                ]
            }
        },
        "pandas.tools.pivot": {
            "pivot_table": [
                "data",
                "values",
                "rows",
                "cols",
                "aggfunc",
                "fill_value",
                "margins"
            ],
            "_add_margins": [
                "table",
                "data",
                "values",
                "rows",
                "cols",
                "aggfunc"
            ],
            "_convert_by": [
                "by"
            ],
            "crosstab": [
                "rows",
                "cols",
                "values",
                "rownames",
                "colnames",
                "aggfunc",
                "margins"
            ],
            "_get_names": [
                "arrs",
                "names",
                "prefix"
            ]
        },
        "pandas.tools.describe": {
            "value_range": [
                "df"
            ]
        },
        "pandas.tools.util": {
            "match": [
                "needles",
                "haystack"
            ]
        },
        "pandas.tools": {},
        "pandas.tools.plotting": {
            "_get_standard_kind": [
                "kind"
            ],
            "scatter_matrix": [
                "frame",
                "alpha",
                "figsize",
                "ax",
                "grid",
                "diagonal",
                "marker"
            ],
            "_gca": [],
            "_gcf": [],
            "_get_marker_compat": [
                "marker"
            ],
            "radviz": [
                "frame",
                "class_column",
                "ax"
            ],
            "andrews_curves": [
                "data",
                "class_column",
                "ax",
                "samples"
            ],
            "bootstrap_plot": [
                "series",
                "fig",
                "size",
                "samples"
            ],
            "parallel_coordinates": [
                "data",
                "class_column",
                "cols",
                "ax"
            ],
            "lag_plot": [
                "series",
                "ax"
            ],
            "autocorrelation_plot": [
                "series",
                "ax"
            ],
            "grouped_hist": [
                "data",
                "column",
                "by",
                "ax",
                "bins",
                "log",
                "figsize",
                "layout",
                "sharex",
                "sharey",
                "rot"
            ],
            "plot_frame": [
                "frame",
                "x",
                "y",
                "subplots",
                "sharex",
                "sharey",
                "use_index",
                "figsize",
                "grid",
                "legend",
                "rot",
                "ax",
                "style",
                "title",
                "xlim",
                "ylim",
                "logy",
                "xticks",
                "yticks",
                "kind",
                "sort_columns",
                "fontsize",
                "secondary_y"
            ],
            "plot_series": [
                "series",
                "label",
                "kind",
                "use_index",
                "rot",
                "xticks",
                "yticks",
                "xlim",
                "ylim",
                "ax",
                "style",
                "grid",
                "legend",
                "logy",
                "secondary_y"
            ],
            "boxplot": [
                "data",
                "column",
                "by",
                "ax",
                "fontsize",
                "rot",
                "grid",
                "figsize"
            ],
            "format_date_labels": [
                "ax",
                "rot"
            ],
            "scatter_plot": [
                "data",
                "x",
                "y",
                "by",
                "ax",
                "figsize",
                "grid"
            ],
            "hist_frame": [
                "data",
                "grid",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot",
                "ax",
                "sharex",
                "sharey"
            ],
            "hist_series": [
                "self",
                "ax",
                "grid",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot"
            ],
            "boxplot_frame_groupby": [
                "grouped",
                "subplots",
                "column",
                "fontsize",
                "rot",
                "grid",
                "figsize"
            ],
            "_grouped_plot": [
                "plotf",
                "data",
                "column",
                "by",
                "numeric_only",
                "figsize",
                "sharex",
                "sharey",
                "layout",
                "rot",
                "ax"
            ],
            "_grouped_plot_by_column": [
                "plotf",
                "data",
                "columns",
                "by",
                "numeric_only",
                "grid",
                "figsize",
                "ax"
            ],
            "_get_layout": [
                "nplots"
            ],
            "_subplots": [
                "nrows",
                "ncols",
                "sharex",
                "sharey",
                "squeeze",
                "subplot_kw",
                "ax",
                "secondary_y",
                "data"
            ],
            "_get_xlim": [
                "lines"
            ],
            "_maybe_convert_date": [
                "x"
            ],
            "_Options": {
                "__init__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "reset": [
                    "self"
                ],
                "_get_canonical_key": [
                    "self",
                    "key"
                ],
                "use": [
                    "self",
                    "key",
                    "value"
                ]
            },
            "MPLPlot": {
                "__init__": [
                    "self",
                    "data",
                    "kind",
                    "by",
                    "subplots",
                    "sharex",
                    "sharey",
                    "use_index",
                    "figsize",
                    "grid",
                    "legend",
                    "rot",
                    "ax",
                    "fig",
                    "title",
                    "xlim",
                    "ylim",
                    "xticks",
                    "yticks",
                    "sort_columns",
                    "fontsize",
                    "secondary_y"
                ],
                "_validate_color_args": [
                    "self"
                ],
                "_iter_data": [
                    "self"
                ],
                "nseries": [
                    "self"
                ],
                "draw": [
                    "self"
                ],
                "generate": [
                    "self"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_maybe_right_yaxis": [
                    "self",
                    "ax"
                ],
                "_setup_subplots": [
                    "self"
                ],
                "_get_layout": [
                    "self"
                ],
                "_compute_plot_data": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ],
                "_adorn_subplots": [
                    "self"
                ],
                "legend_title": [
                    "self"
                ],
                "plt": [
                    "self"
                ],
                "_get_xticks": [
                    "self",
                    "convert_period"
                ],
                "_is_datetype": [
                    "self"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_get_index_name": [
                    "self"
                ],
                "_get_ax": [
                    "self",
                    "i"
                ],
                "on_right": [
                    "self",
                    "i"
                ],
                "_get_style": [
                    "self",
                    "i",
                    "col_name"
                ]
            },
            "KdePlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "LinePlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_index_freq": [
                    "self"
                ],
                "_is_dynamic_freq": [
                    "self",
                    "freq"
                ],
                "_use_dynamic_x": [
                    "self"
                ],
                "_get_colors": [
                    "self"
                ],
                "_maybe_add_color": [
                    "self",
                    "colors",
                    "kwds",
                    "style",
                    "i"
                ],
                "_make_plot": [
                    "self"
                ],
                "_make_ts_plot": [
                    "self",
                    "data"
                ],
                "_make_legend": [
                    "self",
                    "lines",
                    "labels"
                ],
                "_get_ax_legend": [
                    "self",
                    "ax"
                ],
                "_maybe_convert_index": [
                    "self",
                    "data"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "BarPlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_args_adjust": [
                    "self"
                ],
                "bar_f": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "BoxPlot": {},
            "HistPlot": {}
        },
        "pandas.tools.tile": {
            "cut": [
                "x",
                "bins",
                "right",
                "labels",
                "retbins",
                "precision",
                "include_lowest"
            ],
            "qcut": [
                "x",
                "q",
                "labels",
                "retbins",
                "precision"
            ],
            "_bins_to_cuts": [
                "x",
                "bins",
                "right",
                "labels",
                "retbins",
                "precision",
                "name",
                "include_lowest"
            ],
            "_format_levels": [
                "bins",
                "prec",
                "right",
                "include_lowest"
            ],
            "_format_label": [
                "x",
                "precision"
            ],
            "_trim_zeros": [
                "x"
            ]
        },
        "pandas.tools.tests.test_pivot": {
            "TestPivotTable": {
                "setUp": [
                    "self"
                ],
                "test_pivot_table": [
                    "self"
                ],
                "test_pass_array": [
                    "self"
                ],
                "test_pass_function": [
                    "self"
                ],
                "test_pivot_table_multiple": [
                    "self"
                ],
                "test_pivot_multi_values": [
                    "self"
                ],
                "test_pivot_multi_functions": [
                    "self"
                ],
                "test_margins": [
                    "self"
                ],
                "test_pivot_integer_columns": [
                    "self"
                ],
                "test_pivot_no_level_overlap": [
                    "self"
                ],
                "test_pivot_columns_lexsorted": [
                    "self"
                ]
            },
            "TestCrosstab": {
                "setUp": [
                    "self"
                ],
                "test_crosstab_single": [
                    "self"
                ],
                "test_crosstab_multiple": [
                    "self"
                ],
                "test_crosstab_ndarray": [
                    "self"
                ],
                "test_crosstab_margins": [
                    "self"
                ],
                "test_crosstab_pass_values": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests.test_tools": {
            "test_value_range": []
        },
        "pandas.tools.tests": {},
        "pandas.tools.tests.test_tile": {
            "curpath": [],
            "TestCut": {
                "test_simple": [
                    "self"
                ],
                "test_bins": [
                    "self"
                ],
                "test_right": [
                    "self"
                ],
                "test_noright": [
                    "self"
                ],
                "test_arraylike": [
                    "self"
                ],
                "test_bins_not_monotonic": [
                    "self"
                ],
                "test_wrong_num_labels": [
                    "self"
                ],
                "test_cut_corner": [
                    "self"
                ],
                "test_cut_out_of_range_more": [
                    "self"
                ],
                "test_labels": [
                    "self"
                ],
                "test_cut_pass_series_name_to_factor": [
                    "self"
                ],
                "test_label_precision": [
                    "self"
                ],
                "test_na_handling": [
                    "self"
                ],
                "test_qcut": [
                    "self"
                ],
                "test_qcut_bounds": [
                    "self"
                ],
                "test_qcut_specify_quantiles": [
                    "self"
                ],
                "test_cut_out_of_bounds": [
                    "self"
                ],
                "test_cut_pass_labels": [
                    "self"
                ],
                "test_qcut_include_lowest": [
                    "self"
                ],
                "test_qcut_nas": [
                    "self"
                ],
                "test_label_formatting": [
                    "self"
                ],
                "test_qcut_binning_issues": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests.test_merge": {
            "get_test_data": [
                "ngroups",
                "n"
            ],
            "_check_merge": [
                "x",
                "y"
            ],
            "_check_join": [
                "left",
                "right",
                "result",
                "join_col",
                "how",
                "lsuffix",
                "rsuffix"
            ],
            "_restrict_to_columns": [
                "group",
                "columns",
                "suffix"
            ],
            "_assert_same_contents": [
                "join_chunk",
                "source"
            ],
            "_assert_all_na": [
                "join_chunk",
                "source_columns",
                "join_col"
            ],
            "_join_by_hand": [
                "a",
                "b",
                "how"
            ],
            "TestMerge": {
                "setUp": [
                    "self"
                ],
                "test_cython_left_outer_join": [
                    "self"
                ],
                "test_cython_right_outer_join": [
                    "self"
                ],
                "test_cython_inner_join": [
                    "self"
                ],
                "test_left_outer_join": [
                    "self"
                ],
                "test_right_outer_join": [
                    "self"
                ],
                "test_full_outer_join": [
                    "self"
                ],
                "test_inner_join": [
                    "self"
                ],
                "test_handle_overlap": [
                    "self"
                ],
                "test_handle_overlap_arbitrary_key": [
                    "self"
                ],
                "test_merge_common": [
                    "self"
                ],
                "test_join_on": [
                    "self"
                ],
                "test_join_on_pass_vector": [
                    "self"
                ],
                "test_join_with_len0": [
                    "self"
                ],
                "test_join_on_inner": [
                    "self"
                ],
                "test_join_on_singlekey_list": [
                    "self"
                ],
                "test_join_on_series": [
                    "self"
                ],
                "test_join_on_series_buglet": [
                    "self"
                ],
                "test_join_index_mixed": [
                    "self"
                ],
                "test_join_empty_bug": [
                    "self"
                ],
                "test_join_unconsolidated": [
                    "self"
                ],
                "test_join_multiindex": [
                    "self"
                ],
                "test_join_inner_multiindex": [
                    "self"
                ],
                "test_join_float64_float32": [
                    "self"
                ],
                "test_join_many_non_unique_index": [
                    "self"
                ],
                "test_merge_index_singlekey_right_vs_left": [
                    "self"
                ],
                "test_merge_index_singlekey_inner": [
                    "self"
                ],
                "test_merge_misspecified": [
                    "self"
                ],
                "test_merge_overlap": [
                    "self"
                ],
                "test_merge_different_column_key_names": [
                    "self"
                ],
                "test_merge_nocopy": [
                    "self"
                ],
                "test_join_sort": [
                    "self"
                ],
                "test_intelligently_handle_join_key": [
                    "self"
                ],
                "test_handle_join_key_pass_array": [
                    "self"
                ],
                "test_mixed_type_join_with_suffix": [
                    "self"
                ],
                "test_no_overlap_more_informative_error": [
                    "self"
                ],
                "test_merge_non_unique_indexes": [
                    "self"
                ],
                "test_merge_non_unique_index_many_to_many": [
                    "self"
                ],
                "test_left_merge_empty_dataframe": [
                    "self"
                ],
                "test_merge_nosort": [
                    "self"
                ]
            },
            "TestMergeMulti": {
                "setUp": [
                    "self"
                ],
                "test_merge_on_multikey": [
                    "self"
                ],
                "test_merge_right_vs_left": [
                    "self"
                ],
                "test_compress_group_combinations": [
                    "self"
                ],
                "test_left_join_index_preserve_order": [
                    "self"
                ],
                "test_left_merge_na_buglet": [
                    "self"
                ],
                "test_merge_na_keys": [
                    "self"
                ]
            },
            "TestConcatenate": {
                "setUp": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_length0_frame": [
                    "self"
                ],
                "test_append_records": [
                    "self"
                ],
                "test_append_different_columns": [
                    "self"
                ],
                "test_append_many": [
                    "self"
                ],
                "test_append_preserve_index_name": [
                    "self"
                ],
                "test_join_many": [
                    "self"
                ],
                "test_join_many_mixed": [
                    "self"
                ],
                "test_append_missing_column_proper_upcast": [
                    "self"
                ],
                "test_concat_with_group_keys": [
                    "self"
                ],
                "test_concat_keys_specific_levels": [
                    "self"
                ],
                "test_concat_dataframe_keys_bug": [
                    "self"
                ],
                "test_concat_dict": [
                    "self"
                ],
                "test_concat_ignore_index": [
                    "self"
                ],
                "test_concat_multiindex_with_keys": [
                    "self"
                ],
                "test_concat_keys_and_levels": [
                    "self"
                ],
                "test_concat_keys_levels_no_overlap": [
                    "self"
                ],
                "test_concat_rename_index": [
                    "self"
                ],
                "test_crossed_dtypes_weird_corner": [
                    "self"
                ],
                "test_handle_empty_objects": [
                    "self"
                ],
                "test_panel_join": [
                    "self"
                ],
                "test_panel_join_overlap": [
                    "self"
                ],
                "test_panel_join_many": [
                    "self"
                ],
                "test_panel_concat_other_axes": [
                    "self"
                ],
                "test_concat_series": [
                    "self"
                ],
                "test_concat_series_axis1": [
                    "self"
                ],
                "test_concat_single_with_key": [
                    "self"
                ],
                "test_concat_exclude_none": [
                    "self"
                ],
                "test_concat_datetime64_block": [
                    "self"
                ],
                "test_concat_keys_with_none": [
                    "self"
                ],
                "test_concat_bug_1719": [
                    "self"
                ]
            },
            "TestOrderedMerge": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_ffill": [
                    "self"
                ],
                "test_multigroup": [
                    "self"
                ]
            }
        },
        "pandas.io": {},
        "pandas.io.date_converters": {
            "parse_date_time": [
                "date_col",
                "time_col"
            ],
            "parse_date_fields": [
                "year_col",
                "month_col",
                "day_col"
            ],
            "parse_all_fields": [
                "year_col",
                "month_col",
                "day_col",
                "hour_col",
                "minute_col",
                "second_col"
            ],
            "generic_parser": [
                "parse_func"
            ],
            "_maybe_cast": [
                "arr"
            ],
            "_check_columns": [
                "cols"
            ]
        },
        "pandas.io.tests.test_sql": {
            "TestSQLite": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_write_row_by_row": [
                    "self"
                ],
                "test_execute": [
                    "self"
                ],
                "test_schema": [
                    "self"
                ],
                "test_execute_fail": [
                    "self"
                ],
                "test_execute_closed_connection": [
                    "self"
                ],
                "test_na_roundtrip": [
                    "self"
                ],
                "_check_roundtrip": [
                    "self",
                    "frame"
                ],
                "test_tquery": [
                    "self"
                ],
                "test_uquery": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_yahoo": {
            "TestYahoo": {
                "test_yahoo": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_pytables": {
            "curpath": [],
            "_test_sort": [
                "obj"
            ],
            "TestHDFStore": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_factory_fun": [
                    "self"
                ],
                "test_len_keys": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_reopen_handle": [
                    "self"
                ],
                "test_flush": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_put": [
                    "self"
                ],
                "test_put_compression": [
                    "self"
                ],
                "test_put_compression_blosc": [
                    "self"
                ],
                "test_put_integer": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_diff_item_order": [
                    "self"
                ],
                "test_append_incompatible_dtypes": [
                    "self"
                ],
                "test_remove": [
                    "self"
                ],
                "test_remove_where_not_exist": [
                    "self"
                ],
                "test_remove_crit": [
                    "self"
                ],
                "test_series": [
                    "self"
                ],
                "test_sparse_series": [
                    "self"
                ],
                "test_sparse_frame": [
                    "self"
                ],
                "test_sparse_panel": [
                    "self"
                ],
                "test_float_index": [
                    "self"
                ],
                "test_tuple_index": [
                    "self"
                ],
                "test_index_types": [
                    "self"
                ],
                "test_timeseries_preepoch": [
                    "self"
                ],
                "test_frame": [
                    "self"
                ],
                "test_empty_series_frame": [
                    "self"
                ],
                "test_can_serialize_dates": [
                    "self"
                ],
                "test_timezones": [
                    "self"
                ],
                "test_fixed_offset_tz": [
                    "self"
                ],
                "test_store_hierarchical": [
                    "self"
                ],
                "test_store_index_name": [
                    "self"
                ],
                "test_store_series_name": [
                    "self"
                ],
                "test_store_mixed": [
                    "self"
                ],
                "test_wide": [
                    "self"
                ],
                "test_wide_table": [
                    "self"
                ],
                "test_wide_table_dups": [
                    "self"
                ],
                "test_long": [
                    "self"
                ],
                "test_longpanel": [
                    "self"
                ],
                "test_overwrite_node": [
                    "self"
                ],
                "test_panel_select": [
                    "self"
                ],
                "test_frame_select": [
                    "self"
                ],
                "test_select_filter_corner": [
                    "self"
                ],
                "_check_roundtrip": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "_check_double_roundtrip": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "_check_roundtrip_table": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "test_legacy_read": [
                    "self"
                ],
                "test_store_datetime_fractional_secs": [
                    "self"
                ],
                "test_tseries_indices_series": [
                    "self"
                ],
                "test_tseries_indices_frame": [
                    "self"
                ],
                "test_unicode_index": [
                    "self"
                ],
                "test_store_datetime_mixed": [
                    "self"
                ],
                "test_cant_write_multiindex_table": [
                    "self"
                ]
            }
        },
        "pandas.io.tests": {},
        "pandas.io.tests.test_date_converters": {
            "TestConverters": {
                "setUp": [
                    "self"
                ],
                "test_parse_date_time": [
                    "self"
                ],
                "test_parse_date_fields": [
                    "self"
                ],
                "test_datetime_six_col": [
                    "self"
                ],
                "test_generic": [
                    "self"
                ]
            }
        },
        "pandas.util.clipboard": {
            "clipboard_get": [],
            "clipboard_set": [
                "text"
            ],
            "win32_clipboard_get": [],
            "osx_clipboard_get": [],
            "tkinter_clipboard_get": [],
            "win32_clipboard_set": [
                "text"
            ],
            "_fix_line_endings": [
                "text"
            ],
            "osx_clipboard_set": [
                "text"
            ],
            "xsel_clipboard_set": [
                "text"
            ]
        },
        "pandas.util.misc": {
            "exclusive": []
        },
        "pandas.util.py3compat": {},
        "pandas.util.counter": {
            "Counter": {
                "__init__": [
                    "self",
                    "iterable"
                ],
                "__missing__": [
                    "self",
                    "key"
                ],
                "most_common": [
                    "self",
                    "n"
                ],
                "elements": [
                    "self"
                ],
                "fromkeys": [
                    "cls",
                    "iterable",
                    "v"
                ],
                "update": [
                    "self",
                    "iterable"
                ],
                "subtract": [
                    "self",
                    "iterable"
                ],
                "copy": [
                    "self"
                ],
                "__reduce__": [
                    "self"
                ],
                "__delitem__": [
                    "self",
                    "elem"
                ],
                "__repr__": [
                    "self"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "__or__": [
                    "self",
                    "other"
                ],
                "__and__": [
                    "self",
                    "other"
                ]
            }
        },
        "pandas.util.testing": {
            "rands": [
                "n"
            ],
            "randu": [
                "n"
            ],
            "debug": [
                "f"
            ],
            "pudebug": [
                "f"
            ],
            "set_trace": [],
            "equalContents": [
                "arr1",
                "arr2"
            ],
            "isiterable": [
                "obj"
            ],
            "assert_almost_equal": [
                "a",
                "b"
            ],
            "is_sorted": [
                "seq"
            ],
            "assert_dict_equal": [
                "a",
                "b",
                "compare_keys"
            ],
            "assert_series_equal": [
                "left",
                "right",
                "check_dtype",
                "check_index_type",
                "check_index_freq",
                "check_series_type"
            ],
            "assert_frame_equal": [
                "left",
                "right",
                "check_index_type",
                "check_column_type",
                "check_frame_type"
            ],
            "assert_panel_equal": [
                "left",
                "right",
                "check_panel_type"
            ],
            "assert_contains_all": [
                "iterable",
                "dic"
            ],
            "getCols": [
                "k"
            ],
            "makeStringIndex": [
                "k"
            ],
            "makeUnicodeIndex": [
                "k"
            ],
            "makeIntIndex": [
                "k"
            ],
            "makeFloatIndex": [
                "k"
            ],
            "makeFloatSeries": [],
            "makeStringSeries": [],
            "makeObjectSeries": [],
            "getSeriesData": [],
            "makeDataFrame": [],
            "getArangeMat": [],
            "getMixedTypeDict": [],
            "makeDateIndex": [
                "k"
            ],
            "makePeriodIndex": [
                "k"
            ],
            "makeTimeSeries": [
                "nper"
            ],
            "makePeriodSeries": [
                "nper"
            ],
            "getTimeSeriesData": [],
            "makeTimeDataFrame": [],
            "getPeriodData": [],
            "makePeriodFrame": [],
            "makePanel": [],
            "add_nans": [
                "panel"
            ],
            "package_check": [
                "pkg_name",
                "version",
                "app",
                "checker",
                "exc_failed_import",
                "exc_failed_check"
            ],
            "skip_if_no_package": [],
            "network": [
                "t"
            ],
            "stdin_encoding": [
                "encoding"
            ],
            "TestSubDict": {
                "__init__": [
                    "self"
                ]
            },
            "SimpleMock": {
                "__init__": [
                    "self",
                    "obj"
                ],
                "__getattribute__": [
                    "self",
                    "name"
                ]
            }
        },
        "pandas.util.compat": {},
        "pandas.util": {},
        "pandas.sandbox.qtpandas": {
            "testDf": [],
            "DataFrameModel": {
                "__init__": [
                    "self"
                ],
                "setDataFrame": [
                    "self",
                    "dataFrame"
                ],
                "signalUpdate": [
                    "self"
                ],
                "headerData": [
                    "self",
                    "section",
                    "orientation",
                    "role"
                ],
                "data": [
                    "self",
                    "index",
                    "role"
                ],
                "flags": [
                    "self",
                    "index"
                ],
                "setData": [
                    "self",
                    "index",
                    "value",
                    "role"
                ],
                "rowCount": [
                    "self",
                    "index"
                ],
                "columnCount": [
                    "self",
                    "index"
                ]
            },
            "DataFrameWidget": {
                "__init__": [
                    "self",
                    "dataFrame",
                    "parent"
                ],
                "resizeColumnsToContents": [
                    "self"
                ]
            },
            "Form": {
                "__init__": [
                    "self",
                    "parent"
                ]
            }
        },
        "pandas.sandbox": {},
        "pandas.sandbox.stats.rls": {
            "RLS": {
                "__init__": [
                    "self",
                    "endog",
                    "exog",
                    "constr",
                    "param",
                    "sigma"
                ],
                "rwexog": [
                    "self"
                ],
                "inv_rwexog": [
                    "self"
                ],
                "rwendog": [
                    "self"
                ],
                "rnorm_cov_params": [
                    "self"
                ],
                "wrnorm_cov_params": [
                    "self"
                ],
                "coeffs": [
                    "self"
                ],
                "fit": [
                    "self"
                ]
            }
        },
        "pandas.sandbox.stats": {},
        "pandas.rpy.mass": {
            "rlm": {}
        },
        "pandas.rpy.base": {
            "lm": {
                "__init__": [
                    "self",
                    "formula",
                    "data"
                ]
            }
        },
        "pandas.rpy.vars": {
            "VAR": {
                "__init__": [
                    "y",
                    "p",
                    "type",
                    "season",
                    "exogen",
                    "lag_max",
                    "ic"
                ]
            }
        },
        "pandas.rpy": {},
        "pandas.tests.test_factor": {
            "TestCategorical": {
                "setUp": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_constructor_unsortable": [
                    "self"
                ],
                "test_factor_agg": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_value_counts": [
                    "self"
                ],
                "test_na_flags_int_levels": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_strings": {
            "TestStringMethods": {
                "test_cat": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_startswith": [
                    "self"
                ],
                "test_endswith": [
                    "self"
                ],
                "test_lower_upper": [
                    "self"
                ],
                "test_replace": [
                    "self"
                ],
                "test_repeat": [
                    "self"
                ],
                "test_match": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_findall": [
                    "self"
                ],
                "test_pad": [
                    "self"
                ],
                "test_center": [
                    "self"
                ],
                "test_split": [
                    "self"
                ],
                "test_split_noargs": [
                    "self"
                ],
                "test_pipe_failures": [
                    "self"
                ],
                "test_slice": [
                    "self"
                ],
                "test_slice_replace": [
                    "self"
                ],
                "test_strip_lstrip_rstrip": [
                    "self"
                ],
                "test_wrap": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_more_contains": [
                    "self"
                ],
                "test_more_replace": [
                    "self"
                ],
                "test_string_slice_get_syntax": [
                    "self"
                ],
                "test_match_findall_flags": [
                    "self"
                ],
                "test_encode_decode": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_format": {
            "curpath": [],
            "_three_digit_exp": [],
            "TestDataFrameFormatting": {
                "setUp": [
                    "self"
                ],
                "test_repr_embedded_ndarray": [
                    "self"
                ],
                "test_eng_float_formatter": [
                    "self"
                ],
                "test_repr_tuples": [
                    "self"
                ],
                "test_repr_truncation": [
                    "self"
                ],
                "test_repr_should_return_str": [
                    "self"
                ],
                "test_to_string_repr_unicode": [
                    "self"
                ],
                "test_to_string_unicode_columns": [
                    "self"
                ],
                "test_to_string_unicode_two": [
                    "self"
                ],
                "test_to_string_unicode_three": [
                    "self"
                ],
                "test_to_string_with_formatters": [
                    "self"
                ],
                "test_to_string_with_formatters_unicode": [
                    "self"
                ],
                "test_to_string_buffer_all_unicode": [
                    "self"
                ],
                "test_to_html_unicode": [
                    "self"
                ],
                "test_to_html_multiindex_sparsify": [
                    "self"
                ],
                "test_nonunicode_nonascii_alignment": [
                    "self"
                ],
                "test_unicode_problem_decoding_as_ascii": [
                    "self"
                ],
                "test_string_repr_encoding": [
                    "self"
                ],
                "test_repr_corner": [
                    "self"
                ],
                "test_frame_info_encoding": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_to_string_no_header": [
                    "self"
                ],
                "test_to_string_no_index": [
                    "self"
                ],
                "test_to_string_float_formatting": [
                    "self"
                ],
                "test_to_string_small_float_values": [
                    "self"
                ],
                "test_to_string_float_index": [
                    "self"
                ],
                "test_to_string_ascii_error": [
                    "self"
                ],
                "test_to_string_int_formatting": [
                    "self"
                ],
                "test_to_string_left_justify_cols": [
                    "self"
                ],
                "test_to_string_format_na": [
                    "self"
                ],
                "test_to_html": [
                    "self"
                ],
                "test_to_html_with_no_bold": [
                    "self"
                ],
                "test_to_html_columns_arg": [
                    "self"
                ],
                "test_to_html_multiindex": [
                    "self"
                ],
                "test_to_html_justify": [
                    "self"
                ],
                "test_to_html_index": [
                    "self"
                ],
                "test_repr_html": [
                    "self"
                ],
                "test_to_html_with_classes": [
                    "self"
                ],
                "test_float_trim_zeros": [
                    "self"
                ],
                "test_dict_entries": [
                    "self"
                ],
                "test_to_latex": [
                    "self"
                ]
            },
            "TestSeriesFormatting": {
                "setUp": [
                    "self"
                ],
                "test_repr_unicode": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_to_string_mixed": [
                    "self"
                ],
                "test_to_string_float_na_spacing": [
                    "self"
                ],
                "test_unicode_name_in_footer": [
                    "self"
                ],
                "test_float_trim_zeros": [
                    "self"
                ],
                "test_timedelta64": [
                    "self"
                ]
            },
            "TestEngFormatter": {
                "test_eng_float_formatter": [
                    "self"
                ],
                "compare": [
                    "self",
                    "formatter",
                    "input",
                    "output"
                ],
                "compare_all": [
                    "self",
                    "formatter",
                    "in_out"
                ],
                "test_exponents_with_eng_prefix": [
                    "self"
                ],
                "test_exponents_without_eng_prefix": [
                    "self"
                ],
                "test_rounding": [
                    "self"
                ]
            },
            "TestFloatArrayFormatter": {
                "test_misc": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_reshape": {
            "test_melt": [],
            "test_convert_dummies": [],
            "Test_lreshape": {
                "test_pairs": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_stats": {
            "TestRank": {
                "test_rank_tie_methods": [
                    "self"
                ],
                "test_rank_descending": [
                    "self"
                ],
                "test_rank_2d_tie_methods": [
                    "self"
                ],
                "test_rank_int": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_internals": {
            "assert_block_equal": [
                "left",
                "right"
            ],
            "get_float_mat": [
                "n",
                "k"
            ],
            "get_float_ex": [
                "cols"
            ],
            "get_complex_ex": [
                "cols"
            ],
            "get_obj_ex": [
                "cols"
            ],
            "get_bool_ex": [
                "cols"
            ],
            "get_int_ex": [
                "cols"
            ],
            "get_int32_ex": [
                "cols"
            ],
            "get_dt_ex": [
                "cols"
            ],
            "TestBlock": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_ref_locs": [
                    "self"
                ],
                "test_attrs": [
                    "self"
                ],
                "test_merge": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_items": [
                    "self"
                ],
                "test_assign_ref_items": [
                    "self"
                ],
                "test_reindex_index": [
                    "self"
                ],
                "test_reindex_items_from": [
                    "self"
                ],
                "test_reindex_cast": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delete": [
                    "self"
                ],
                "test_split_block_at": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_set": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ]
            },
            "TestBlockManager": {
                "setUp": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_attrs": [
                    "self"
                ],
                "test_is_mixed_dtype": [
                    "self"
                ],
                "test_is_indexed_like": [
                    "self"
                ],
                "test_block_id_vector_item_dtypes": [
                    "self"
                ],
                "test_duplicate_item_failure": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_get_scalar": [
                    "self"
                ],
                "test_set": [
                    "self"
                ],
                "test_set_change_dtype": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_as_matrix": [
                    "self"
                ],
                "test_as_matrix_int_bool": [
                    "self"
                ],
                "test_as_matrix_datetime": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_interleave": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_consolidate_ordering_issues": [
                    "self"
                ],
                "test_reindex_index": [
                    "self"
                ],
                "test_reindex_items": [
                    "self"
                ],
                "test_get_numeric_data": [
                    "self"
                ],
                "test_missing_unicode_key": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_panel": {
            "test_monotonic": [],
            "test_panel_index": [],
            "PanelTests": {
                "test_pickle": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ]
            },
            "SafeForLongAndSparse": {
                "test_repr": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_prod": [
                    "self"
                ],
                "test_median": [
                    "self"
                ],
                "test_min": [
                    "self"
                ],
                "test_max": [
                    "self"
                ],
                "test_skew": [
                    "self"
                ],
                "test_var": [
                    "self"
                ],
                "test_std": [
                    "self"
                ],
                "_check_stat_op": [
                    "self",
                    "name",
                    "alternative",
                    "obj",
                    "has_skipna"
                ]
            },
            "SafeForSparse": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "test_get_axis": [
                    "self"
                ],
                "test_set_axis": [
                    "self"
                ],
                "test_get_axis_number": [
                    "self"
                ],
                "test_get_axis_name": [
                    "self"
                ],
                "test_get_plane_axes": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_arith": [
                    "self"
                ],
                "_test_op": [
                    "panel",
                    "op"
                ],
                "test_keys": [
                    "self"
                ],
                "test_iteritems": [
                    "self"
                ],
                "test_combineFrame": [
                    "self"
                ],
                "test_combinePanel": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_abs": [
                    "self"
                ]
            },
            "CheckIndexing": {
                "test_getitem": [
                    "self"
                ],
                "test_delitem_and_pop": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_ndarray": [
                    "self"
                ],
                "test_major_xs": [
                    "self"
                ],
                "test_major_xs_mixed": [
                    "self"
                ],
                "test_minor_xs": [
                    "self"
                ],
                "test_minor_xs_mixed": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_getitem_fancy_labels": [
                    "self"
                ],
                "test_getitem_fancy_slice": [
                    "self"
                ],
                "test_getitem_fancy_ints": [
                    "self"
                ],
                "test_getitem_fancy_xs": [
                    "self"
                ],
                "test_getitem_fancy_xs_check_view": [
                    "self"
                ],
                "test_ix_setitem_slice_dataframe": [
                    "self"
                ],
                "test_ix_align": [
                    "self"
                ],
                "test_ix_frame_align": [
                    "self"
                ],
                "_check_view": [
                    "self",
                    "indexer",
                    "comp"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ]
            },
            "TestPanel": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_cast": [
                    "self"
                ],
                "test_constructor_empty_panel": [
                    "self"
                ],
                "test_constructor_observe_dtype": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_ctor_dict": [
                    "self"
                ],
                "test_constructor_dict_mixed": [
                    "self"
                ],
                "test_constructor_resize": [
                    "self"
                ],
                "test_from_dict_mixed_orient": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_conform": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_like": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_sort_index": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_truncate_fillna_bug": [
                    "self"
                ],
                "test_swapaxes": [
                    "self"
                ],
                "test_transpose": [
                    "self"
                ],
                "test_transpose_copy": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_to_frame_mixed": [
                    "self"
                ],
                "test_to_panel_na_handling": [
                    "self"
                ],
                "test_filter": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_compound": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_multiindex_get": [
                    "self"
                ],
                "test_multiindex_blocks": [
                    "self"
                ],
                "test_repr_empty": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_get_attr": [
                    "self"
                ],
                "test_group_agg": [
                    "self"
                ],
                "test_from_frame_level1_unsorted": [
                    "self"
                ],
                "test_to_excel": [
                    "self"
                ],
                "test_dropna": [
                    "self"
                ],
                "test_update": [
                    "self"
                ],
                "test_update_from_dict": [
                    "self"
                ],
                "test_update_nooverwrite": [
                    "self"
                ],
                "test_update_filtered": [
                    "self"
                ],
                "test_update_raise": [
                    "self"
                ]
            },
            "TestLongPanel": {
                "setUp": [
                    "self"
                ],
                "test_ops_differently_indexed": [
                    "self"
                ],
                "test_ops_scalar": [
                    "self"
                ],
                "test_combineFrame": [
                    "self"
                ],
                "test_combinePanel": [
                    "self"
                ],
                "test_combine_scalar": [
                    "self"
                ],
                "test_combine_series": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_axis_dummies": [
                    "self"
                ],
                "test_get_dummies": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_pivot": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_multilevel": {
            "TestMultiLevel": {
                "setUp": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_dataframe_constructor": [
                    "self"
                ],
                "test_series_constructor": [
                    "self"
                ],
                "test_reindex_level": [
                    "self"
                ],
                "test_binops_level": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_preserve_levels": [
                    "self"
                ],
                "test_sort_index_preserve_levels": [
                    "self"
                ],
                "test_repr_to_string": [
                    "self"
                ],
                "test_repr_name_coincide": [
                    "self"
                ],
                "test_getitem_simple": [
                    "self"
                ],
                "test_series_getitem": [
                    "self"
                ],
                "test_series_getitem_corner": [
                    "self"
                ],
                "test_series_setitem": [
                    "self"
                ],
                "test_series_slice_partial": [
                    "self"
                ],
                "test_frame_getitem_setitem_slice": [
                    "self"
                ],
                "test_frame_getitem_setitem_multislice": [
                    "self"
                ],
                "test_getitem_tuple_plus_slice": [
                    "self"
                ],
                "test_getitem_setitem_tuple_plus_columns": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_xs_partial": [
                    "self"
                ],
                "test_xs_level": [
                    "self"
                ],
                "test_xs_level_multiple": [
                    "self"
                ],
                "test_xs_level0": [
                    "self"
                ],
                "test_xs_level_series": [
                    "self"
                ],
                "test_get_loc_single_level": [
                    "self"
                ],
                "test_getitem_toplevel": [
                    "self"
                ],
                "test_getitem_setitem_slice_integers": [
                    "self"
                ],
                "test_getitem_int": [
                    "self"
                ],
                "test_getitem_partial": [
                    "self"
                ],
                "test_getitem_slice_not_sorted": [
                    "self"
                ],
                "test_setitem_change_dtype": [
                    "self"
                ],
                "test_frame_setitem_ix": [
                    "self"
                ],
                "test_fancy_slice_partial": [
                    "self"
                ],
                "test_getitem_partial_column_select": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_delevel_infer_dtype": [
                    "self"
                ],
                "test_reset_index_with_drop": [
                    "self"
                ],
                "test_sortlevel_by_name": [
                    "self"
                ],
                "test_sortlevel_mixed": [
                    "self"
                ],
                "test_count_level": [
                    "self"
                ],
                "test_count_level_series": [
                    "self"
                ],
                "test_count_level_corner": [
                    "self"
                ],
                "test_unstack": [
                    "self"
                ],
                "test_unstack_multiple_no_empty_columns": [
                    "self"
                ],
                "test_stack": [
                    "self"
                ],
                "test_unstack_odd_failure": [
                    "self"
                ],
                "test_stack_mixed_dtype": [
                    "self"
                ],
                "test_unstack_bug": [
                    "self"
                ],
                "test_stack_unstack_preserve_names": [
                    "self"
                ],
                "test_unstack_level_name": [
                    "self"
                ],
                "test_stack_level_name": [
                    "self"
                ],
                "test_stack_unstack_multiple": [
                    "self"
                ],
                "test_groupby_transform": [
                    "self"
                ],
                "test_groupby_corner": [
                    "self"
                ],
                "test_groupby_level_no_obs": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_swaplevel": [
                    "self"
                ],
                "test_swaplevel_panel": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_insert_index": [
                    "self"
                ],
                "test_alignment": [
                    "self"
                ],
                "test_is_lexsorted": [
                    "self"
                ],
                "test_frame_getitem_view": [
                    "self"
                ],
                "test_frame_getitem_not_sorted": [
                    "self"
                ],
                "test_series_getitem_not_sorted": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_series_group_min_max": [
                    "self"
                ],
                "test_frame_group_ops": [
                    "self"
                ],
                "test_stat_op_corner": [
                    "self"
                ],
                "test_frame_any_all_group": [
                    "self"
                ],
                "test_std_var_pass_ddof": [
                    "self"
                ],
                "test_frame_series_agg_multiple_levels": [
                    "self"
                ],
                "test_groupby_multilevel": [
                    "self"
                ],
                "test_groupby_multilevel_with_transform": [
                    "self"
                ],
                "test_multilevel_consolidate": [
                    "self"
                ],
                "test_ix_preserve_names": [
                    "self"
                ],
                "test_partial_set": [
                    "self"
                ],
                "test_unstack_preserve_types": [
                    "self"
                ],
                "test_getitem_lowerdim_corner": [
                    "self"
                ],
                "test_partial_ix_missing": [
                    "self"
                ],
                "test_to_html": [
                    "self"
                ],
                "test_level_with_tuples": [
                    "self"
                ],
                "test_int_series_slicing": [
                    "self"
                ],
                "test_mixed_depth_get": [
                    "self"
                ],
                "test_mixed_depth_insert": [
                    "self"
                ],
                "test_mixed_depth_drop": [
                    "self"
                ],
                "test_drop_nonunique": [
                    "self"
                ],
                "test_mixed_depth_pop": [
                    "self"
                ],
                "test_reindex_level_partial_selection": [
                    "self"
                ],
                "test_setitem_multiple_partial": [
                    "self"
                ],
                "test_drop_level": [
                    "self"
                ],
                "test_drop_preserve_names": [
                    "self"
                ],
                "test_unicode_repr_issues": [
                    "self"
                ],
                "test_unicode_repr_level_names": [
                    "self"
                ],
                "test_dataframe_insert_column_all_na": [
                    "self"
                ],
                "test_join_segfault": [
                    "self"
                ],
                "test_set_column_scalar_with_ix": [
                    "self"
                ],
                "test_frame_dict_constructor_empty_series": [
                    "self"
                ],
                "test_indexing_ambiguity_bug_1678": [
                    "self"
                ],
                "test_nonunique_assignment_1750": [
                    "self"
                ],
                "test_indexing_over_hashtable_size_cutoff": [
                    "self"
                ],
                "test_xs_mixed_no_copy": [
                    "self"
                ],
                "test_multiindex_na_repr": [
                    "self"
                ],
                "test_assign_index_sequences": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_algos": {
            "test_quantile": [],
            "TestMatch": {
                "test_ints": [
                    "self"
                ],
                "test_strings": [
                    "self"
                ]
            },
            "TestUnique": {
                "test_ints": [
                    "self"
                ],
                "test_objects": [
                    "self"
                ],
                "test_object_refcount_bug": [
                    "self"
                ],
                "test_on_index_object": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_common": {
            "test_is_sequence": [],
            "test_notnull": [],
            "test_isnull": [],
            "test_isnull_lists": [],
            "test_isnull_datetime": [],
            "test_any_none": [],
            "test_all_not_none": [],
            "test_rands": [],
            "test_adjoin": [],
            "test_iterpairs": [],
            "test_indent": [],
            "test_banner": [],
            "test_map_indices_py": [],
            "test_union": [],
            "test_difference": [],
            "test_intersection": [],
            "test_groupby": [],
            "test_ensure_int32": [],
            "test_pprint_thing": [],
            "TestTake": {
                "test_1d_with_out": [
                    "self"
                ],
                "test_1d_upcast_with_out": [
                    "self"
                ],
                "test_2d_upcast_with_out": [
                    "self"
                ],
                "test_1d_other_dtypes": [
                    "self"
                ],
                "test_2d_other_dtypes": [
                    "self"
                ],
                "test_1d_bool": [
                    "self"
                ],
                "test_2d_bool": [
                    "self"
                ],
                "test_2d_float32": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_ndframe": {
            "TestNDFrame": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_ndim": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ]
            }
        },
        "pandas.tests": {},
        "pandas.tests.test_tseries": {
            "test_left_join_indexer_unique": [],
            "test_left_outer_join_bug": [],
            "test_inner_join_indexer": [],
            "test_outer_join_indexer": [],
            "test_left_join_indexer": [],
            "test_left_join_indexer2": [],
            "test_outer_join_indexer2": [],
            "test_inner_join_indexer2": [],
            "test_is_lexsorted": [],
            "test_groupsort_indexer": [],
            "test_ensure_platform_int": [],
            "test_duplicated_with_nas": [],
            "test_maybe_booleans_to_slice": [],
            "test_convert_objects": [],
            "test_convert_objects_ints": [],
            "test_convert_objects_complex_number": [],
            "test_rank": [],
            "test_get_reverse_indexer": [],
            "test_pad_backfill_object_segfault": [],
            "test_arrmap": [],
            "test_series_grouper": [],
            "test_series_bin_grouper": [],
            "test_group_ohlc": [],
            "test_try_parse_dates": [],
            "TestTseriesUtil": {
                "test_combineFunc": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_isnull": [
                    "self"
                ],
                "test_groupby": [
                    "self"
                ],
                "test_groupby_withnull": [
                    "self"
                ],
                "test_backfill": [
                    "self"
                ],
                "test_pad": [
                    "self"
                ]
            },
            "TestBinGroupers": {
                "setUp": [
                    "self"
                ],
                "test_generate_bins": [
                    "self"
                ],
                "test_group_bin_functions": [
                    "self"
                ],
                "_check_versions": [
                    "self",
                    "irr_func",
                    "bin_func",
                    "np_func"
                ]
            },
            "TestTypeInference": {
                "test_length_zero": [
                    "self"
                ],
                "test_integers": [
                    "self"
                ],
                "test_bools": [
                    "self"
                ],
                "test_floats": [
                    "self"
                ],
                "test_string": [
                    "self"
                ],
                "test_unicode": [
                    "self"
                ],
                "test_datetime": [
                    "self"
                ],
                "test_date": [
                    "self"
                ],
                "test_to_object_array_tuples": [
                    "self"
                ]
            },
            "TestMoments": {},
            "TestReducer": {
                "test_int_index": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_index": {
            "test_get_combined_index": [],
            "TestIndex": {
                "setUp": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_new_axis": [
                    "self"
                ],
                "test_deepcopy": [
                    "self"
                ],
                "test_duplicates": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_mutability": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_compat": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_asof": [
                    "self"
                ],
                "test_argsort": [
                    "self"
                ],
                "test_comparators": [
                    "self"
                ],
                "test_booleanindex": [
                    "self"
                ],
                "test_fancy": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_add": [
                    "self"
                ],
                "test_append_multiple": [
                    "self"
                ],
                "test_append_empty_preserve_name": [
                    "self"
                ],
                "test_add_string": [
                    "self"
                ],
                "test_diff": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_is_numeric": [
                    "self"
                ],
                "test_is_all_dates": [
                    "self"
                ],
                "test_summary": [
                    "self"
                ],
                "test_format": [
                    "self"
                ],
                "test_format_with_name_time_info": [
                    "self"
                ],
                "test_format_datetime_with_time": [
                    "self"
                ],
                "test_format_none": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "_check_method_works": [
                    "self",
                    "method"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_slice_locs": [
                    "self"
                ],
                "test_slice_locs_dup": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_tuple_union_bug": [
                    "self"
                ],
                "test_is_monotonic_incomparable": [
                    "self"
                ],
                "test_get_set_value": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_boolean_cmp": [
                    "self"
                ]
            },
            "TestInt64Index": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "test_coerce_list": [
                    "self"
                ],
                "test_dtype": [
                    "self"
                ],
                "test_is_monotonic": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_get_indexer_pad": [
                    "self"
                ],
                "test_get_indexer_backfill": [
                    "self"
                ],
                "test_join_outer": [
                    "self"
                ],
                "test_join_inner": [
                    "self"
                ],
                "test_join_left": [
                    "self"
                ],
                "test_join_right": [
                    "self"
                ],
                "test_join_non_int_index": [
                    "self"
                ],
                "test_join_non_unique": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_intersect_str_dates": [
                    "self"
                ],
                "test_union_noncomparable": [
                    "self"
                ],
                "test_cant_or_shouldnt_cast": [
                    "self"
                ],
                "test_view_Index": [
                    "self"
                ],
                "test_prevent_casting": [
                    "self"
                ],
                "test_take_preserve_name": [
                    "self"
                ],
                "test_int_name_format": [
                    "self"
                ],
                "test_print_unicode_columns": [
                    "self"
                ]
            },
            "TestMultiIndex": {
                "setUp": [
                    "self"
                ],
                "test_constructor_single_level": [
                    "self"
                ],
                "test_constructor_no_levels": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_shallow_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "test_duplicate_names": [
                    "self"
                ],
                "test_get_level_number_integer": [
                    "self"
                ],
                "test_from_arrays": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_get_level_values": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_nlevels": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_legacy_pickle": [
                    "self"
                ],
                "test_legacy_v2_unpickle": [
                    "self"
                ],
                "test_from_tuples_index_values": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_is_all_dates": [
                    "self"
                ],
                "test_is_numeric": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getitem_group_select": [
                    "self"
                ],
                "test_get_loc": [
                    "self"
                ],
                "test_get_loc_duplicates": [
                    "self"
                ],
                "test_get_loc_level": [
                    "self"
                ],
                "test_slice_locs": [
                    "self"
                ],
                "test_slice_locs_not_sorted": [
                    "self"
                ],
                "test_slice_locs_partial": [
                    "self"
                ],
                "test_slice_locs_not_contained": [
                    "self"
                ],
                "test_consistency": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_format": [
                    "self"
                ],
                "test_format_integer_names": [
                    "self"
                ],
                "test_format_sparse_display": [
                    "self"
                ],
                "test_format_sparse_config": [
                    "self"
                ],
                "test_bounds": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_diff": [
                    "self"
                ],
                "test_from_tuples": [
                    "self"
                ],
                "test_argsort": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_sortlevel_deterministic": [
                    "self"
                ],
                "test_dims": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_droplevel_with_names": [
                    "self"
                ],
                "test_droplevel_multiple": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_take_preserve_name": [
                    "self"
                ],
                "test_join_level": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_level": [
                    "self"
                ],
                "test_has_duplicates": [
                    "self"
                ],
                "test_tolist": [
                    "self"
                ],
                "test_repr_with_unicode_data": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_graphics": {
            "_check_plot_works": [
                "f"
            ],
            "curpath": [],
            "TestSeriesPlots": {
                "setUpClass": [
                    "cls"
                ],
                "setUp": [
                    "self"
                ],
                "test_plot": [
                    "self"
                ],
                "test_bar_colors": [
                    "self"
                ],
                "test_bar_linewidth": [
                    "self"
                ],
                "test_rotation": [
                    "self"
                ],
                "test_irregular_datetime": [
                    "self"
                ],
                "test_hist": [
                    "self"
                ],
                "test_kde": [
                    "self"
                ],
                "test_autocorrelation_plot": [
                    "self"
                ],
                "test_lag_plot": [
                    "self"
                ],
                "test_bootstrap_plot": [
                    "self"
                ]
            },
            "TestDataFramePlots": {
                "setUpClass": [
                    "cls"
                ],
                "test_plot": [
                    "self"
                ],
                "test_plot_xy": [
                    "self"
                ],
                "test_xcompat": [
                    "self"
                ],
                "_check_data": [
                    "self",
                    "xp",
                    "rs"
                ],
                "test_subplots": [
                    "self"
                ],
                "test_plot_bar": [
                    "self"
                ],
                "test_bar_stacked_center": [
                    "self"
                ],
                "test_bar_center": [
                    "self"
                ],
                "test_boxplot": [
                    "self"
                ],
                "test_kde": [
                    "self"
                ],
                "test_hist": [
                    "self"
                ],
                "test_scatter": [
                    "self"
                ],
                "test_andrews_curves": [
                    "self"
                ],
                "test_parallel_coordinates": [
                    "self"
                ],
                "test_radviz": [
                    "self"
                ],
                "test_plot_int_columns": [
                    "self"
                ],
                "test_legend_name": [
                    "self"
                ],
                "_check_plot_fails": [
                    "self",
                    "f"
                ],
                "test_style_by_column": [
                    "self"
                ],
                "test_line_colors": [
                    "self"
                ],
                "test_default_color_cycle": [
                    "self"
                ]
            },
            "TestDataFrameGroupByPlots": {
                "setUpClass": [
                    "cls"
                ],
                "test_boxplot": [
                    "self"
                ],
                "test_series_plot_color_kwargs": [
                    "self"
                ],
                "test_time_series_plot_color_kwargs": [
                    "self"
                ],
                "test_grouped_hist": [
                    "self"
                ]
            }
        },
        "pandas.core.daterange": {
            "DateRange": {
                "__new__": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "offset",
                    "time_rule",
                    "tzinfo",
                    "name"
                ],
                "__setstate__": [
                    "self",
                    "aug_state"
                ]
            }
        },
        "pandas.core.strings": {
            "_get_array_list": [
                "arr",
                "others"
            ],
            "str_cat": [
                "arr",
                "others",
                "sep",
                "na_rep"
            ],
            "_length_check": [
                "others"
            ],
            "_na_map": [
                "f",
                "arr",
                "na_result"
            ],
            "_map": [
                "f",
                "arr"
            ],
            "str_count": [
                "arr",
                "pat",
                "flags"
            ],
            "str_contains": [
                "arr",
                "pat",
                "case",
                "flags",
                "na"
            ],
            "str_startswith": [
                "arr",
                "pat",
                "na"
            ],
            "str_endswith": [
                "arr",
                "pat",
                "na"
            ],
            "str_lower": [
                "arr"
            ],
            "str_upper": [
                "arr"
            ],
            "str_replace": [
                "arr",
                "pat",
                "repl",
                "n",
                "case",
                "flags"
            ],
            "str_repeat": [
                "arr",
                "repeats"
            ],
            "str_match": [
                "arr",
                "pat",
                "flags"
            ],
            "str_join": [
                "arr",
                "sep"
            ],
            "str_len": [
                "arr"
            ],
            "str_findall": [
                "arr",
                "pat",
                "flags"
            ],
            "str_pad": [
                "arr",
                "width",
                "side"
            ],
            "str_center": [
                "arr",
                "width"
            ],
            "str_split": [
                "arr",
                "pat",
                "n"
            ],
            "str_slice": [
                "arr",
                "start",
                "stop",
                "step"
            ],
            "str_slice_replace": [
                "arr",
                "start",
                "stop",
                "repl"
            ],
            "str_strip": [
                "arr"
            ],
            "str_lstrip": [
                "arr"
            ],
            "str_rstrip": [
                "arr"
            ],
            "str_wrap": [
                "arr",
                "width"
            ],
            "str_get": [
                "arr",
                "i"
            ],
            "str_decode": [
                "arr",
                "encoding"
            ],
            "str_encode": [
                "arr",
                "encoding"
            ],
            "_noarg_wrapper": [
                "f"
            ],
            "_pat_wrapper": [
                "f",
                "flags",
                "na"
            ],
            "copy": [
                "source"
            ],
            "StringMethods": {
                "__init__": [
                    "self",
                    "series"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_wrap_result": [
                    "self",
                    "result"
                ],
                "cat": [
                    "self",
                    "others",
                    "sep",
                    "na_rep"
                ],
                "split": [
                    "self",
                    "pat",
                    "n"
                ],
                "get": [
                    "self",
                    "i"
                ],
                "join": [
                    "self",
                    "sep"
                ],
                "contains": [
                    "self",
                    "pat",
                    "case",
                    "flags",
                    "na"
                ],
                "replace": [
                    "self",
                    "pat",
                    "repl",
                    "n",
                    "case"
                ],
                "repeat": [
                    "self",
                    "repeats"
                ],
                "pad": [
                    "self",
                    "width",
                    "side"
                ],
                "center": [
                    "self",
                    "width"
                ],
                "slice": [
                    "self",
                    "start",
                    "stop",
                    "step"
                ],
                "slice_replace": [
                    "self",
                    "i",
                    "j"
                ],
                "decode": [
                    "self",
                    "encoding"
                ],
                "encode": [
                    "self",
                    "encoding"
                ]
            }
        },
        "pandas.core.algorithms": {
            "match": [
                "to_match",
                "values",
                "na_sentinel"
            ],
            "unique": [
                "values"
            ],
            "count": [
                "values",
                "uniques"
            ],
            "_hashtable_algo": [
                "f",
                "dtype"
            ],
            "_count_generic": [
                "values",
                "table_type",
                "type_caster"
            ],
            "_match_generic": [
                "values",
                "index",
                "table_type",
                "type_caster"
            ],
            "_unique_generic": [
                "values",
                "table_type",
                "type_caster"
            ],
            "factorize": [
                "values",
                "sort",
                "order",
                "na_sentinel"
            ],
            "value_counts": [
                "values",
                "sort",
                "ascending"
            ],
            "rank": [
                "values",
                "axis",
                "method",
                "na_option",
                "ascending"
            ],
            "quantile": [
                "x",
                "q",
                "interpolation_method"
            ],
            "_interpolate": [
                "a",
                "b",
                "fraction"
            ],
            "_get_data_algo": [
                "values",
                "func_map"
            ],
            "group_position": []
        },
        "pandas.core.panel": {
            "_ensure_like_indices": [
                "time",
                "panels"
            ],
            "panel_index": [
                "time",
                "panels",
                "names"
            ],
            "_arith_method": [
                "func",
                "name"
            ],
            "_panel_arith_method": [
                "op",
                "name"
            ],
            "_prep_ndarray": [
                "values",
                "copy"
            ],
            "_homogenize_dict": [
                "frames",
                "intersect",
                "dtype"
            ],
            "_extract_axis": [
                "data",
                "axis",
                "intersect"
            ],
            "_monotonic": [
                "arr"
            ],
            "install_ipython_completers": [],
            "PanelError": {},
            "Panel": {
                "__init__": [
                    "self",
                    "data",
                    "items",
                    "major_axis",
                    "minor_axis",
                    "copy",
                    "dtype"
                ],
                "_from_axes": [
                    "cls",
                    "data",
                    "axes"
                ],
                "_init_dict": [
                    "self",
                    "data",
                    "axes",
                    "dtype"
                ],
                "_init_arrays": [
                    "self",
                    "arrays",
                    "arr_names",
                    "axes"
                ],
                "shape": [
                    "self"
                ],
                "from_dict": [
                    "cls",
                    "data",
                    "intersect",
                    "orient",
                    "dtype"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_getitem_multilevel": [
                    "self",
                    "key"
                ],
                "_init_matrix": [
                    "self",
                    "data",
                    "axes",
                    "dtype",
                    "copy"
                ],
                "__array__": [
                    "self",
                    "dtype"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "__repr__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "iteritems": [
                    "self"
                ],
                "_get_plane_axes": [
                    "self",
                    "axis"
                ],
                "_constructor": [
                    "self"
                ],
                "ix": [
                    "self"
                ],
                "_wrap_array": [
                    "self",
                    "arr",
                    "axes",
                    "copy"
                ],
                "to_sparse": [
                    "self",
                    "fill_value",
                    "kind"
                ],
                "to_excel": [
                    "self",
                    "path",
                    "na_rep"
                ],
                "keys": [
                    "self"
                ],
                "_get_values": [
                    "self"
                ],
                "get_value": [
                    "self",
                    "item",
                    "major",
                    "minor"
                ],
                "set_value": [
                    "self",
                    "item",
                    "major",
                    "minor",
                    "value"
                ],
                "_box_item_values": [
                    "self",
                    "key",
                    "values"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "pop": [
                    "self",
                    "item"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "_unpickle_panel_compat": [
                    "self",
                    "state"
                ],
                "conform": [
                    "self",
                    "frame",
                    "axis"
                ],
                "reindex": [
                    "self",
                    "major",
                    "items",
                    "minor",
                    "method",
                    "major_axis",
                    "minor_axis",
                    "copy"
                ],
                "_reindex_multi": [
                    "self",
                    "items",
                    "major",
                    "minor"
                ],
                "reindex_axis": [
                    "self",
                    "labels",
                    "axis",
                    "method",
                    "level",
                    "copy"
                ],
                "reindex_like": [
                    "self",
                    "other",
                    "method"
                ],
                "dropna": [
                    "self",
                    "axis",
                    "how"
                ],
                "_combine": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "__neg__": [
                    "self"
                ],
                "_combine_frame": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_combine_panel": [
                    "self",
                    "other",
                    "func"
                ],
                "fillna": [
                    "self",
                    "value",
                    "method"
                ],
                "major_xs": [
                    "self",
                    "key",
                    "copy"
                ],
                "minor_xs": [
                    "self",
                    "key",
                    "copy"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy"
                ],
                "_ixs": [
                    "self",
                    "i",
                    "axis"
                ],
                "groupby": [
                    "self",
                    "function",
                    "axis"
                ],
                "swapaxes": [
                    "self",
                    "axis1",
                    "axis2",
                    "copy"
                ],
                "transpose": [
                    "self",
                    "items",
                    "major",
                    "minor",
                    "copy"
                ],
                "to_frame": [
                    "self",
                    "filter_observations"
                ],
                "filter": [
                    "self",
                    "items"
                ],
                "apply": [
                    "self",
                    "func",
                    "axis"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "axis",
                    "skipna"
                ],
                "_wrap_result": [
                    "self",
                    "result",
                    "axis"
                ],
                "count": [
                    "self",
                    "axis"
                ],
                "sum": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "mean": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "var": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "std": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "skew": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "prod": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "compound": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "median": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "max": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "min": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "shift": [
                    "self",
                    "lags",
                    "axis"
                ],
                "truncate": [
                    "self",
                    "before",
                    "after",
                    "axis"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "lsuffix",
                    "rsuffix"
                ],
                "update": [
                    "self",
                    "other",
                    "join",
                    "overwrite",
                    "filter_func",
                    "raise_conflict"
                ],
                "_get_join_index": [
                    "self",
                    "other",
                    "how"
                ]
            }
        },
        "pandas.core.internals": {
            "_mask_missing": [
                "array",
                "missing_values"
            ],
            "make_block": [
                "values",
                "items",
                "ref_items"
            ],
            "form_blocks": [
                "arrays",
                "names",
                "axes"
            ],
            "_simple_blockify": [
                "tuples",
                "ref_items",
                "dtype"
            ],
            "_stack_arrays": [
                "tuples",
                "ref_items",
                "dtype"
            ],
            "_blocks_to_series_dict": [
                "blocks",
                "index"
            ],
            "_interleaved_dtype": [
                "blocks"
            ],
            "_consolidate": [
                "blocks",
                "items"
            ],
            "_merge_blocks": [
                "blocks",
                "items"
            ],
            "_vstack": [
                "to_stack"
            ],
            "Block": {
                "__init__": [
                    "self",
                    "values",
                    "items",
                    "ref_items",
                    "ndim"
                ],
                "ref_locs": [
                    "self"
                ],
                "set_ref_items": [
                    "self",
                    "ref_items",
                    "maybe_rename"
                ],
                "__repr__": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "item"
                ],
                "__len__": [
                    "self"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "shape": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "merge": [
                    "self",
                    "other"
                ],
                "reindex_axis": [
                    "self",
                    "indexer",
                    "mask",
                    "needs_masking",
                    "axis",
                    "fill_value"
                ],
                "reindex_items_from": [
                    "self",
                    "new_ref_items",
                    "copy"
                ],
                "get": [
                    "self",
                    "item"
                ],
                "set": [
                    "self",
                    "item",
                    "value"
                ],
                "delete": [
                    "self",
                    "item"
                ],
                "split_block_at": [
                    "self",
                    "item"
                ],
                "fillna": [
                    "self",
                    "value",
                    "inplace"
                ],
                "_can_hold_element": [
                    "self",
                    "value"
                ],
                "_try_cast": [
                    "self",
                    "value"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace"
                ],
                "putmask": [
                    "self",
                    "mask",
                    "new",
                    "inplace"
                ],
                "interpolate": [
                    "self",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "missing"
                ],
                "take": [
                    "self",
                    "indexer",
                    "axis",
                    "fill_value"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ],
                "diff": [
                    "self",
                    "n"
                ]
            },
            "FloatBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "ComplexBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "IntBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "BoolBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "ObjectBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "DatetimeBlock": {
                "__init__": [
                    "self",
                    "values",
                    "items",
                    "ref_items",
                    "ndim"
                ],
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "set": [
                    "self",
                    "item",
                    "value"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ]
            },
            "BlockManager": {
                "__init__": [
                    "self",
                    "blocks",
                    "axes",
                    "do_integrity_check"
                ],
                "make_empty": [
                    "self"
                ],
                "__nonzero__": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "is_mixed_dtype": [
                    "self"
                ],
                "set_axis": [
                    "self",
                    "axis",
                    "value"
                ],
                "_get_items": [
                    "self"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__len__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "_verify_integrity": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "is_consolidated": [
                    "self"
                ],
                "get_numeric_data": [
                    "self",
                    "copy",
                    "type_list"
                ],
                "_get_clean_block_types": [
                    "self",
                    "type_list"
                ],
                "get_bool_data": [
                    "self",
                    "copy"
                ],
                "get_slice": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "_slice_blocks": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "get_series_dict": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "item"
                ],
                "nblocks": [
                    "self"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "as_matrix": [
                    "self",
                    "items"
                ],
                "_interleave": [
                    "self",
                    "items"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy"
                ],
                "fast_2d_xs": [
                    "self",
                    "loc",
                    "copy"
                ],
                "consolidate": [
                    "self"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "get": [
                    "self",
                    "item"
                ],
                "iget": [
                    "self",
                    "i"
                ],
                "get_scalar": [
                    "self",
                    "tup"
                ],
                "delete": [
                    "self",
                    "item"
                ],
                "set": [
                    "self",
                    "item",
                    "value"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item",
                    "value"
                ],
                "set_items_norename": [
                    "self",
                    "value"
                ],
                "_delete_from_block": [
                    "self",
                    "i",
                    "item"
                ],
                "_add_new_block": [
                    "self",
                    "item",
                    "value",
                    "loc"
                ],
                "_find_block": [
                    "self",
                    "item"
                ],
                "_check_have": [
                    "self",
                    "item"
                ],
                "reindex_axis": [
                    "self",
                    "new_axis",
                    "method",
                    "axis",
                    "copy"
                ],
                "reindex_indexer": [
                    "self",
                    "new_axis",
                    "indexer",
                    "axis",
                    "fill_value"
                ],
                "_reindex_indexer_items": [
                    "self",
                    "new_items",
                    "indexer",
                    "fill_value"
                ],
                "reindex_items": [
                    "self",
                    "new_items",
                    "copy",
                    "fill_value"
                ],
                "_make_na_block": [
                    "self",
                    "items",
                    "ref_items",
                    "fill_value"
                ],
                "take": [
                    "self",
                    "indexer",
                    "axis"
                ],
                "merge": [
                    "self",
                    "other",
                    "lsuffix",
                    "rsuffix"
                ],
                "_maybe_rename_join": [
                    "self",
                    "other",
                    "lsuffix",
                    "rsuffix",
                    "copydata"
                ],
                "_is_indexed_like": [
                    "self",
                    "other"
                ],
                "rename_axis": [
                    "self",
                    "mapper",
                    "axis"
                ],
                "rename_items": [
                    "self",
                    "mapper",
                    "copydata"
                ],
                "add_prefix": [
                    "self",
                    "prefix"
                ],
                "add_suffix": [
                    "self",
                    "suffix"
                ],
                "fillna": [
                    "self",
                    "value",
                    "inplace"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace"
                ],
                "_replace_list": [
                    "self",
                    "src_lst",
                    "dest_lst"
                ],
                "block_id_vector": [
                    "self"
                ],
                "item_dtypes": [
                    "self"
                ]
            }
        },
        "pandas.core.matrix": {},
        "pandas.core.common": {
            "isnull": [
                "obj"
            ],
            "_isnull_ndarraylike": [
                "obj"
            ],
            "notnull": [
                "obj"
            ],
            "mask_missing": [
                "arr",
                "values_to_mask"
            ],
            "_pickle_array": [
                "arr"
            ],
            "_unpickle_array": [
                "bytes"
            ],
            "_view_wrapper": [
                "f",
                "wrap_dtype",
                "na_override"
            ],
            "_get_take2d_function": [
                "dtype_str",
                "axis"
            ],
            "take_1d": [
                "arr",
                "indexer",
                "out",
                "fill_value"
            ],
            "take_2d_multi": [
                "arr",
                "row_idx",
                "col_idx",
                "fill_value",
                "out"
            ],
            "take_2d": [
                "arr",
                "indexer",
                "out",
                "mask",
                "needs_masking",
                "axis",
                "fill_value"
            ],
            "ndtake": [
                "arr",
                "indexer",
                "axis",
                "out"
            ],
            "mask_out_axis": [
                "arr",
                "mask",
                "axis",
                "fill_value"
            ],
            "diff": [
                "arr",
                "n",
                "axis"
            ],
            "take_fast": [
                "arr",
                "indexer",
                "mask",
                "needs_masking",
                "axis",
                "out",
                "fill_value"
            ],
            "_maybe_mask": [
                "result",
                "mask",
                "needs_masking",
                "axis",
                "out_passed",
                "fill_value"
            ],
            "_maybe_upcast": [
                "values"
            ],
            "_need_upcast": [
                "values"
            ],
            "_interp_wrapper": [
                "f",
                "wrap_dtype",
                "na_override"
            ],
            "pad_1d": [
                "values",
                "limit",
                "mask"
            ],
            "backfill_1d": [
                "values",
                "limit",
                "mask"
            ],
            "pad_2d": [
                "values",
                "limit",
                "mask"
            ],
            "backfill_2d": [
                "values",
                "limit",
                "mask"
            ],
            "_consensus_name_attr": [
                "objs"
            ],
            "_infer_dtype": [
                "value"
            ],
            "_possibly_cast_item": [
                "obj",
                "item",
                "dtype"
            ],
            "_is_bool_indexer": [
                "key"
            ],
            "_default_index": [
                "n"
            ],
            "ensure_float": [
                "arr"
            ],
            "_mut_exclusive": [
                "arg1",
                "arg2"
            ],
            "_any_none": [],
            "_all_not_none": [],
            "_try_sort": [
                "iterable"
            ],
            "_count_not_none": [],
            "rands": [
                "n"
            ],
            "adjoin": [
                "space"
            ],
            "_join_unicode": [
                "lines",
                "sep"
            ],
            "iterpairs": [
                "seq"
            ],
            "indent": [
                "string",
                "spaces"
            ],
            "banner": [
                "message"
            ],
            "map_indices_py": [
                "arr"
            ],
            "union": [],
            "difference": [
                "a",
                "b"
            ],
            "intersection": [],
            "_shift_indexer": [
                "N",
                "periods"
            ],
            "_asarray_tuplesafe": [
                "values",
                "dtype"
            ],
            "_index_labels_to_array": [
                "labels"
            ],
            "_maybe_make_list": [
                "obj"
            ],
            "is_integer": [
                "obj"
            ],
            "is_float": [
                "obj"
            ],
            "is_iterator": [
                "obj"
            ],
            "is_number": [
                "obj"
            ],
            "is_integer_dtype": [
                "arr_or_dtype"
            ],
            "_is_int_or_datetime_dtype": [
                "arr_or_dtype"
            ],
            "is_datetime64_dtype": [
                "arr_or_dtype"
            ],
            "is_float_dtype": [
                "arr_or_dtype"
            ],
            "is_list_like": [
                "arg"
            ],
            "_is_sequence": [
                "x"
            ],
            "_astype_nansafe": [
                "arr",
                "dtype"
            ],
            "_clean_fill_method": [
                "method"
            ],
            "_all_none": [],
            "save": [
                "obj",
                "path"
            ],
            "load": [
                "path"
            ],
            "_get_handle": [
                "path",
                "mode",
                "encoding"
            ],
            "_concat_compat": [
                "to_concat",
                "axis"
            ],
            "in_interactive_session": [],
            "_pprint_seq": [
                "seq",
                "_nest_lvl"
            ],
            "_pprint_dict": [
                "seq",
                "_nest_lvl"
            ],
            "pprint_thing": [
                "thing",
                "_nest_lvl"
            ],
            "pprint_thing_encoded": [
                "object",
                "encoding",
                "errors"
            ],
            "console_encode": [
                "object"
            ],
            "PandasError": {},
            "AmbiguousIndexError": {},
            "groupby": {
                "__init__": [
                    "self",
                    "seq",
                    "key"
                ]
            },
            "UTF8Recoder": {
                "__init__": [
                    "self",
                    "f",
                    "encoding"
                ],
                "__iter__": [
                    "self"
                ],
                "next": [
                    "self"
                ]
            }
        },
        "pandas.core.reshape": {
            "_unstack_multiple": [
                "data",
                "clocs"
            ],
            "pivot": [
                "self",
                "index",
                "columns",
                "values"
            ],
            "pivot_simple": [
                "index",
                "columns",
                "values"
            ],
            "_slow_pivot": [
                "index",
                "columns",
                "values"
            ],
            "unstack": [
                "obj",
                "level"
            ],
            "_unstack_frame": [
                "obj",
                "level"
            ],
            "stack": [
                "frame",
                "level",
                "dropna"
            ],
            "_stack_multi_columns": [
                "frame",
                "level",
                "dropna"
            ],
            "melt": [
                "frame",
                "id_vars",
                "value_vars"
            ],
            "lreshape": [
                "data",
                "groups",
                "dropna",
                "label"
            ],
            "convert_dummies": [
                "data",
                "cat_variables",
                "prefix_sep"
            ],
            "get_dummies": [
                "data",
                "prefix",
                "prefix_sep"
            ],
            "make_axis_dummies": [
                "frame",
                "axis",
                "transform"
            ],
            "block2d_to_block3d": [
                "values",
                "items",
                "shape",
                "major_labels",
                "minor_labels",
                "ref_items"
            ],
            "ReshapeError": {},
            "_Unstacker": {
                "__init__": [
                    "self",
                    "values",
                    "index",
                    "level",
                    "value_columns"
                ],
                "_make_sorted_values_labels": [
                    "self"
                ],
                "_make_selectors": [
                    "self"
                ],
                "get_result": [
                    "self"
                ],
                "get_new_values": [
                    "self"
                ],
                "get_new_columns": [
                    "self"
                ],
                "get_new_index": [
                    "self"
                ]
            }
        },
        "pandas.core.nanops": {
            "_bottleneck_switch": [
                "bn_name",
                "alt",
                "zero_value"
            ],
            "_bn_ok_dtype": [
                "dt"
            ],
            "_has_infs": [
                "result"
            ],
            "nanany": [
                "values",
                "axis",
                "skipna"
            ],
            "nanall": [
                "values",
                "axis",
                "skipna"
            ],
            "_nansum": [
                "values",
                "axis",
                "skipna"
            ],
            "_nanmean": [
                "values",
                "axis",
                "skipna"
            ],
            "_nanmedian": [
                "values",
                "axis",
                "skipna"
            ],
            "_nanvar": [
                "values",
                "axis",
                "skipna",
                "ddof"
            ],
            "_nanmin": [
                "values",
                "axis",
                "skipna"
            ],
            "_nanmax": [
                "values",
                "axis",
                "skipna"
            ],
            "nanargmax": [
                "values",
                "axis",
                "skipna"
            ],
            "nanargmin": [
                "values",
                "axis",
                "skipna"
            ],
            "nanskew": [
                "values",
                "axis",
                "skipna"
            ],
            "nankurt": [
                "values",
                "axis",
                "skipna"
            ],
            "nanprod": [
                "values",
                "axis",
                "skipna"
            ],
            "_maybe_arg_null_out": [
                "result",
                "axis",
                "mask",
                "skipna"
            ],
            "_get_counts": [
                "mask",
                "axis"
            ],
            "_maybe_null_out": [
                "result",
                "axis",
                "mask"
            ],
            "_zero_out_fperr": [
                "arg"
            ],
            "nancorr": [
                "a",
                "b",
                "method"
            ],
            "get_corr_func": [
                "method"
            ],
            "nancov": [
                "a",
                "b"
            ],
            "_ensure_numeric": [
                "x"
            ],
            "make_nancomp": [
                "op"
            ],
            "unique1d": [
                "values"
            ]
        },
        "pandas.core.generic": {
            "truncate": [
                "self",
                "before",
                "after",
                "copy"
            ],
            "PandasError": {},
            "PandasObject": {
                "save": [
                    "self",
                    "path"
                ],
                "load": [
                    "cls",
                    "path"
                ],
                "_get_axis_number": [
                    "cls",
                    "axis"
                ],
                "_get_axis_name": [
                    "cls",
                    "axis"
                ],
                "_get_axis": [
                    "self",
                    "axis"
                ],
                "abs": [
                    "self"
                ],
                "get": [
                    "self",
                    "key",
                    "default"
                ],
                "groupby": [
                    "self",
                    "by",
                    "axis",
                    "level",
                    "as_index",
                    "sort",
                    "group_keys"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "method",
                    "how"
                ],
                "at_time": [
                    "self",
                    "time",
                    "asof"
                ],
                "between_time": [
                    "self",
                    "start_time",
                    "end_time",
                    "include_start",
                    "include_end"
                ],
                "resample": [
                    "self",
                    "rule",
                    "how",
                    "axis",
                    "fill_method",
                    "closed",
                    "label",
                    "convention",
                    "kind",
                    "loffset",
                    "limit",
                    "base"
                ],
                "first": [
                    "self",
                    "offset"
                ],
                "last": [
                    "self",
                    "offset"
                ],
                "select": [
                    "self",
                    "crit",
                    "axis"
                ],
                "drop": [
                    "self",
                    "labels",
                    "axis",
                    "level"
                ],
                "sort_index": [
                    "self",
                    "axis",
                    "ascending"
                ],
                "ix": [
                    "self"
                ],
                "reindex": [
                    "self"
                ],
                "tshift": [
                    "self",
                    "periods",
                    "freq"
                ],
                "pct_change": [
                    "self",
                    "periods",
                    "fill_method",
                    "limit",
                    "freq"
                ]
            },
            "NDFrame": {
                "__init__": [
                    "self",
                    "data",
                    "axes",
                    "copy",
                    "dtype"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "_constructor": [
                    "self"
                ],
                "axes": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "_set_axis": [
                    "self",
                    "axis",
                    "labels"
                ],
                "__getitem__": [
                    "self",
                    "item"
                ],
                "_get_item_cache": [
                    "self",
                    "item"
                ],
                "_box_item_values": [
                    "self",
                    "key",
                    "values"
                ],
                "_clear_item_cache": [
                    "self"
                ],
                "_set_item": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "pop": [
                    "self",
                    "item"
                ],
                "_expand_axes": [
                    "self",
                    "key"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "consolidate": [
                    "self",
                    "inplace"
                ],
                "_is_mixed_type": [
                    "self"
                ],
                "_reindex_axis": [
                    "self",
                    "new_index",
                    "fill_method",
                    "axis",
                    "copy"
                ],
                "cumsum": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "_wrap_array": [
                    "self",
                    "array",
                    "axes",
                    "copy"
                ],
                "cumprod": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "cummax": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "cummin": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "swaplevel": [
                    "self",
                    "i",
                    "j",
                    "axis"
                ],
                "add_prefix": [
                    "self",
                    "prefix"
                ],
                "add_suffix": [
                    "self",
                    "suffix"
                ],
                "rename_axis": [
                    "self",
                    "mapper",
                    "axis",
                    "copy"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "tz_convert": [
                    "self",
                    "tz",
                    "axis",
                    "copy"
                ],
                "tz_localize": [
                    "self",
                    "tz",
                    "axis",
                    "copy"
                ]
            }
        },
        "pandas.core.api": {},
        "pandas.core.categorical": {
            "_cat_compare_op": [
                "op"
            ],
            "Categorical": {
                "__init__": [
                    "self",
                    "labels",
                    "levels",
                    "name"
                ],
                "from_array": [
                    "cls",
                    "data"
                ],
                "_set_levels": [
                    "self",
                    "levels"
                ],
                "_get_levels": [
                    "self"
                ],
                "__array__": [
                    "self",
                    "dtype"
                ],
                "__len__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "equals": [
                    "self",
                    "other"
                ]
            }
        },
        "pandas.core.datetools": {},
        "pandas.core": {},
        "pandas.core.daterange_flymake": {
            "DateRange": {
                "__new__": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "offset",
                    "time_rule",
                    "tzinfo",
                    "name"
                ],
                "__setstate__": [
                    "self",
                    "aug_state"
                ]
            }
        },
        "pandas.core.sparse": {},
        "pandas.compat": {},
        "pandas.compat.scipy": {
            "scoreatpercentile": [
                "a",
                "per",
                "limit",
                "interpolation_method"
            ],
            "_interpolate": [
                "a",
                "b",
                "fraction"
            ],
            "rankdata": [
                "a"
            ],
            "fastsort": [
                "a"
            ],
            "percentileofscore": [
                "a",
                "score",
                "kind"
            ]
        },
        "pandas.tseries.api": {},
        "pandas.tseries.offsets": {
            "_tick_comp": [
                "op"
            ],
            "_delta_to_tick": [
                "delta"
            ],
            "_delta_to_nanoseconds": [
                "delta"
            ],
            "_get_firstbday": [
                "wkday"
            ],
            "generate_range": [
                "start",
                "end",
                "periods",
                "offset",
                "time_rule"
            ],
            "CacheableOffset": {},
            "DateOffset": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "isAnchored": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "_should_cache": [
                    "self"
                ],
                "_params": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__call__": [
                    "self",
                    "other"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__radd__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "__rsub__": [
                    "self",
                    "other"
                ],
                "__mul__": [
                    "self",
                    "someInt"
                ],
                "__rmul__": [
                    "self",
                    "someInt"
                ],
                "__neg__": [
                    "self"
                ],
                "rollback": [
                    "self",
                    "dt"
                ],
                "rollforward": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ]
            },
            "BusinessDay": {
                "__init__": [
                    "self",
                    "n"
                ],
                "rule_code": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ],
                "_offset_str": [
                    "self"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "cls",
                    "dt"
                ]
            },
            "MonthEnd": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "cls",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "MonthBegin": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "cls",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BusinessMonthEnd": {
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BusinessMonthBegin": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "cls",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "Week": {
                "__init__": [
                    "self",
                    "n"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "WeekOfMonth": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "getOffsetOfMonth": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BQuarterEnd": {
                "__init__": [
                    "self",
                    "n"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BQuarterBegin": {
                "__init__": [
                    "self",
                    "n"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "QuarterEnd": {
                "__init__": [
                    "self",
                    "n"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "QuarterBegin": {
                "__init__": [
                    "self",
                    "n"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BYearEnd": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BYearBegin": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "YearEnd": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "YearBegin": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "cls",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "Tick": {
                "__add__": [
                    "self",
                    "other"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "delta": [
                    "self"
                ],
                "nanos": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "rule_code": [
                    "self"
                ],
                "isAnchored": [
                    "self"
                ]
            },
            "Day": {},
            "Hour": {},
            "Minute": {},
            "Second": {},
            "Milli": {},
            "Micro": {},
            "Nano": {}
        },
        "pandas.tseries.util": {
            "pivot_annual": [
                "series",
                "freq"
            ],
            "isleapyear": [
                "year"
            ]
        },
        "pandas.tseries.index": {
            "_utc": [],
            "_field_accessor": [
                "name",
                "field"
            ],
            "_join_i8_wrapper": [
                "joinf",
                "with_indexers"
            ],
            "_dt_index_cmp": [
                "opname"
            ],
            "_ensure_datetime64": [
                "other"
            ],
            "_generate_regular_range": [
                "start",
                "end",
                "periods",
                "offset"
            ],
            "date_range": [
                "start",
                "end",
                "periods",
                "freq",
                "tz",
                "normalize",
                "name"
            ],
            "bdate_range": [
                "start",
                "end",
                "periods",
                "freq",
                "tz",
                "normalize",
                "name"
            ],
            "_to_m8": [
                "key"
            ],
            "_str_to_dt_array": [
                "arr",
                "offset",
                "dayfirst",
                "yearfirst"
            ],
            "_naive_in_cache_range": [
                "start",
                "end"
            ],
            "_in_range": [
                "start",
                "end",
                "rng_start",
                "rng_end"
            ],
            "_time_to_micros": [
                "time"
            ],
            "TimeSeriesError": {},
            "DatetimeIndex": {
                "__new__": [
                    "cls",
                    "data",
                    "freq",
                    "start",
                    "end",
                    "periods",
                    "copy",
                    "name",
                    "tz",
                    "verify_integrity",
                    "normalize"
                ],
                "_generate": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "name",
                    "offset",
                    "tz",
                    "normalize"
                ],
                "_box_values": [
                    "self",
                    "values"
                ],
                "_local_timestamps": [
                    "self"
                ],
                "_simple_new": [
                    "cls",
                    "values",
                    "name",
                    "freq",
                    "tz"
                ],
                "tzinfo": [
                    "self"
                ],
                "_cached_range": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "offset",
                    "name"
                ],
                "_mpl_repr": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "_add_delta": [
                    "self",
                    "delta"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "isin": [
                    "self",
                    "values"
                ],
                "to_datetime": [
                    "self",
                    "dayfirst"
                ],
                "groupby": [
                    "self",
                    "f"
                ],
                "summary": [
                    "self",
                    "name"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "get_duplicates": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "asi8": [
                    "self"
                ],
                "_get_time_micros": [
                    "self"
                ],
                "asobject": [
                    "self"
                ],
                "tolist": [
                    "self"
                ],
                "_get_object_index": [
                    "self"
                ],
                "to_pydatetime": [
                    "self"
                ],
                "to_period": [
                    "self",
                    "freq"
                ],
                "order": [
                    "self",
                    "return_indexer",
                    "ascending"
                ],
                "snap": [
                    "self",
                    "freq"
                ],
                "shift": [
                    "self",
                    "n",
                    "freq"
                ],
                "repeat": [
                    "self",
                    "repeats",
                    "axis"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "union": [
                    "self",
                    "other"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_maybe_utc_convert": [
                    "self",
                    "other"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ],
                "_can_fast_union": [
                    "self",
                    "other"
                ],
                "_fast_union": [
                    "self",
                    "other"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "intersection": [
                    "self",
                    "other"
                ],
                "_partial_date_slice": [
                    "self",
                    "reso",
                    "parsed"
                ],
                "_possibly_promote": [
                    "self",
                    "other"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "_get_string_slice": [
                    "self",
                    "key"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "map": [
                    "self",
                    "f"
                ],
                "freq": [
                    "self"
                ],
                "inferred_freq": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ],
                "normalize": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "searchsorted": [
                    "self",
                    "key",
                    "side"
                ],
                "is_type_compatible": [
                    "self",
                    "typ"
                ],
                "argmin": [
                    "self"
                ],
                "inferred_type": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "is_all_dates": [
                    "self"
                ],
                "is_normalized": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item"
                ],
                "_view_like": [
                    "self",
                    "ndarray"
                ],
                "tz_convert": [
                    "self",
                    "tz"
                ],
                "tz_localize": [
                    "self",
                    "tz"
                ],
                "indexer_at_time": [
                    "self",
                    "time",
                    "asof"
                ],
                "indexer_between_time": [
                    "self",
                    "start_time",
                    "end_time",
                    "include_start",
                    "include_end"
                ],
                "min": [
                    "self",
                    "axis"
                ],
                "max": [
                    "self",
                    "axis"
                ]
            }
        },
        "pandas.tseries": {},
        "pandas.tseries.interval": {
            "Interval": {
                "__init__": [
                    "self",
                    "start",
                    "end"
                ]
            },
            "PeriodInterval": {
                "__init__": [
                    "self",
                    "start",
                    "end"
                ]
            },
            "IntervalIndex": {
                "__new__": [
                    "self",
                    "starts",
                    "ends"
                ],
                "dtype": [
                    "self"
                ]
            }
        },
        "pandas.tseries.plotting": {
            "tsplot": [
                "series",
                "plotf"
            ],
            "_maybe_resample": [
                "series",
                "ax",
                "freq",
                "plotf",
                "kwargs"
            ],
            "_get_ax_freq": [
                "ax"
            ],
            "_is_sub": [
                "f1",
                "f2"
            ],
            "_is_sup": [
                "f1",
                "f2"
            ],
            "_upsample_others": [
                "ax",
                "freq",
                "plotf",
                "kwargs"
            ],
            "_replot_ax": [
                "ax",
                "freq",
                "plotf",
                "kwargs"
            ],
            "_decorate_axes": [
                "ax",
                "freq",
                "kwargs"
            ],
            "_maybe_mask": [
                "series"
            ],
            "_get_freq": [
                "ax",
                "series"
            ],
            "_get_xlim": [
                "lines"
            ],
            "format_dateaxis": [
                "subplot",
                "freq"
            ]
        },
        "pandas.tseries.period": {
            "_period_field_accessor": [
                "name",
                "alias"
            ],
            "_field_accessor": [
                "name",
                "alias"
            ],
            "_get_date_and_freq": [
                "value",
                "freq"
            ],
            "_get_ordinals": [
                "data",
                "freq"
            ],
            "dt64arr_to_periodarr": [
                "data",
                "freq"
            ],
            "_period_index_cmp": [
                "opname"
            ],
            "_get_ordinal_range": [
                "start",
                "end",
                "periods",
                "freq"
            ],
            "_range_from_fields": [
                "year",
                "month",
                "quarter",
                "day",
                "hour",
                "minute",
                "second",
                "freq"
            ],
            "_make_field_arrays": [],
            "_ordinal_from_fields": [
                "year",
                "month",
                "quarter",
                "day",
                "hour",
                "minute",
                "second",
                "freq"
            ],
            "_quarter_to_myear": [
                "year",
                "quarter",
                "freq"
            ],
            "_validate_end_alias": [
                "how"
            ],
            "pnow": [
                "freq"
            ],
            "period_range": [
                "start",
                "end",
                "periods",
                "freq",
                "name"
            ],
            "Period": {
                "__init__": [
                    "self",
                    "value",
                    "freq",
                    "ordinal",
                    "year",
                    "month",
                    "quarter",
                    "day",
                    "hour",
                    "minute",
                    "second"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "how"
                ],
                "start_time": [
                    "self"
                ],
                "end_time": [
                    "self"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how"
                ],
                "now": [
                    "cls",
                    "freq"
                ],
                "__repr__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "strftime": [
                    "self",
                    "fmt"
                ]
            },
            "PeriodIndex": {
                "__new__": [
                    "cls",
                    "data",
                    "ordinal",
                    "freq",
                    "start",
                    "end",
                    "periods",
                    "copy",
                    "name",
                    "year",
                    "month",
                    "quarter",
                    "day",
                    "hour",
                    "minute",
                    "second"
                ],
                "_generate_range": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "freq",
                    "fields"
                ],
                "_from_arraylike": [
                    "cls",
                    "data",
                    "freq"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "_box_values": [
                    "self",
                    "values"
                ],
                "asof_locs": [
                    "self",
                    "where",
                    "mask"
                ],
                "asobject": [
                    "self"
                ],
                "_array_values": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "__iter__": [
                    "self"
                ],
                "is_all_dates": [
                    "self"
                ],
                "is_full": [
                    "self"
                ],
                "factorize": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "how"
                ],
                "to_datetime": [
                    "self",
                    "dayfirst"
                ],
                "map": [
                    "self",
                    "f"
                ],
                "_get_object_array": [
                    "self"
                ],
                "_mpl_repr": [
                    "self"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how"
                ],
                "shift": [
                    "self",
                    "n"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "inferred_type": [
                    "self"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end"
                ],
                "_get_string_slice": [
                    "self",
                    "key"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_assert_can_do_setop": [
                    "self",
                    "other"
                ],
                "_wrap_union_result": [
                    "self",
                    "other",
                    "result"
                ],
                "_apply_meta": [
                    "self",
                    "rawarr"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "format": [
                    "self",
                    "name"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "__repr__": [
                    "self"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "append": [
                    "self",
                    "other"
                ]
            }
        },
        "pandas.tseries.tests.test_daterange": {
            "eq_gen_range": [
                "kwargs",
                "expected"
            ],
            "TestGenRangeGeneration": {
                "test_generate": [
                    "self"
                ],
                "test_1": [
                    "self"
                ],
                "test_2": [
                    "self"
                ],
                "test_3": [
                    "self"
                ]
            },
            "TestDateRange": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_cached_range": [
                    "self"
                ],
                "test_cached_range_bug": [
                    "self"
                ],
                "test_comparison": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getitem_matplotlib_hackaround": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_pickle_unpickle": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_outer_join": [
                    "self"
                ],
                "test_union_not_cacheable": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_intersection_bug": [
                    "self"
                ],
                "test_summary": [
                    "self"
                ],
                "test_misc": [
                    "self"
                ],
                "test_date_parse_failure": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_daterange_bug_456": [
                    "self"
                ],
                "test_error_with_zero_monthends": [
                    "self"
                ],
                "test_range_bug": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_cursor": {},
        "pandas.tseries.tests.test_converter": {
            "test_timtetonum_accepts_unicode": [],
            "TestDateTimeConverter": {
                "setUp": [
                    "self"
                ],
                "test_convert_accepts_unicode": [
                    "self"
                ],
                "test_conversion": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_period": {
            "noWrap": [
                "item"
            ],
            "_permute": [
                "obj"
            ],
            "TestPeriodProperties": {
                "__init__": [
                    "self"
                ],
                "test_quarterly_negative_ordinals": [
                    "self"
                ],
                "test_period_cons_quarterly": [
                    "self"
                ],
                "test_period_cons_annual": [
                    "self"
                ],
                "test_period_cons_weekly": [
                    "self"
                ],
                "test_period_constructor": [
                    "self"
                ],
                "test_freq_str": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_strftime": [
                    "self"
                ],
                "test_sub_delta": [
                    "self"
                ],
                "test_to_timestamp": [
                    "self"
                ],
                "test_start_time": [
                    "self"
                ],
                "test_end_time": [
                    "self"
                ],
                "test_properties_annually": [
                    "self"
                ],
                "test_properties_quarterly": [
                    "self"
                ],
                "test_properties_monthly": [
                    "self"
                ],
                "test_properties_weekly": [
                    "self"
                ],
                "test_properties_daily": [
                    "self"
                ],
                "test_properties_hourly": [
                    "self"
                ],
                "test_properties_minutely": [
                    "self"
                ],
                "test_properties_secondly": [
                    "self"
                ],
                "test_pnow": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_infer_freq": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ]
            },
            "TestFreqConversion": {
                "__init__": [
                    "self"
                ],
                "test_asfreq_corner": [
                    "self"
                ],
                "test_conv_annual": [
                    "self"
                ],
                "test_conv_quarterly": [
                    "self"
                ],
                "test_conv_monthly": [
                    "self"
                ],
                "test_conv_weekly": [
                    "self"
                ],
                "test_conv_business": [
                    "self"
                ],
                "test_conv_daily": [
                    "self"
                ],
                "test_conv_hourly": [
                    "self"
                ],
                "test_conv_minutely": [
                    "self"
                ],
                "test_conv_secondly": [
                    "self"
                ]
            },
            "TestPeriodIndex": {
                "__init__": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "test_make_time_series": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_constructor_use_start_freq": [
                    "self"
                ],
                "test_constructor_field_arrays": [
                    "self"
                ],
                "test_constructor_U": [
                    "self"
                ],
                "test_constructor_arrays_negative_year": [
                    "self"
                ],
                "test_constructor_invalid_quarters": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_fromarraylike": [
                    "self"
                ],
                "test_constructor_datetime64arr": [
                    "self"
                ],
                "test_comp_period": [
                    "self"
                ],
                "test_getitem_ndim2": [
                    "self"
                ],
                "test_getitem_partial": [
                    "self"
                ],
                "test_getitem_datetime": [
                    "self"
                ],
                "test_sub": [
                    "self"
                ],
                "test_periods_number_check": [
                    "self"
                ],
                "test_to_timestamp": [
                    "self"
                ],
                "test_to_timestamp_quarterly_bug": [
                    "self"
                ],
                "test_to_timestamp_preserve_name": [
                    "self"
                ],
                "test_as_frame_columns": [
                    "self"
                ],
                "test_nested_dict_frame_constructor": [
                    "self"
                ],
                "test_frame_to_time_stamp": [
                    "self"
                ],
                "test_index_duplicate_periods": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_asfreq": [
                    "self"
                ],
                "test_ts_repr": [
                    "self"
                ],
                "test_asfreq_ts": [
                    "self"
                ],
                "test_badinput": [
                    "self"
                ],
                "test_negative_ordinals": [
                    "self"
                ],
                "test_dti_to_period": [
                    "self"
                ],
                "test_pindex_slice_index": [
                    "self"
                ],
                "test_pindex_qaccess": [
                    "self"
                ],
                "test_period_dt64_round_trip": [
                    "self"
                ],
                "test_to_period_quarterly": [
                    "self"
                ],
                "test_to_period_quarterlyish": [
                    "self"
                ],
                "test_to_period_annualish": [
                    "self"
                ],
                "test_to_period_monthish": [
                    "self"
                ],
                "test_no_multiples": [
                    "self"
                ],
                "test_iteration": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_joins": [
                    "self"
                ],
                "test_align_series": [
                    "self"
                ],
                "test_align_frame": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_fields": [
                    "self"
                ],
                "_check_all_fields": [
                    "self",
                    "periodindex"
                ],
                "test_is_full": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_convert_array_of_periods": [
                    "self"
                ],
                "test_with_multi_index": [
                    "self"
                ],
                "test_to_datetime_1703": [
                    "self"
                ],
                "test_append_concat": [
                    "self"
                ]
            },
            "TestMethods": {
                "__init__": [
                    "self"
                ],
                "test_add": [
                    "self"
                ]
            },
            "TestPeriodRepresentation": {
                "test_annual": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_daily": [
                    "self"
                ],
                "test_business_daily": [
                    "self"
                ],
                "test_hourly": [
                    "self"
                ],
                "test_minutely": [
                    "self"
                ],
                "test_secondly": [
                    "self"
                ],
                "_check_freq": [
                    "self",
                    "freq",
                    "base_date"
                ],
                "test_negone_ordinals": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_timezones": {
            "_skip_if_no_pytz": [],
            "FixedOffset": {
                "__init__": [
                    "self",
                    "offset",
                    "name"
                ],
                "utcoffset": [
                    "self",
                    "dt"
                ],
                "tzname": [
                    "self",
                    "dt"
                ],
                "dst": [
                    "self",
                    "dt"
                ]
            },
            "TestTimeZoneSupport": {
                "setUp": [
                    "self"
                ],
                "test_utc_to_local_no_modify": [
                    "self"
                ],
                "test_localize_utc_conversion": [
                    "self"
                ],
                "test_timestamp_tz_localize": [
                    "self"
                ],
                "test_timedelta_push_over_dst_boundary": [
                    "self"
                ],
                "test_tz_localize_dti": [
                    "self"
                ],
                "test_tz_localize_empty_series": [
                    "self"
                ],
                "test_astimezone": [
                    "self"
                ],
                "test_create_with_tz": [
                    "self"
                ],
                "test_create_with_fixed_tz": [
                    "self"
                ],
                "test_date_range_localize": [
                    "self"
                ],
                "test_utc_box_timestamp_and_localize": [
                    "self"
                ],
                "test_timestamp_tz_convert": [
                    "self"
                ],
                "test_pass_dates_localize_to_utc": [
                    "self"
                ],
                "test_field_access_localize": [
                    "self"
                ],
                "test_with_tz": [
                    "self"
                ],
                "test_tz_localize": [
                    "self"
                ],
                "test_with_tz_ambiguous_times": [
                    "self"
                ],
                "test_infer_tz": [
                    "self"
                ],
                "test_tz_string": [
                    "self"
                ],
                "test_take_dont_lose_meta": [
                    "self"
                ],
                "test_index_with_timezone_repr": [
                    "self"
                ],
                "test_index_astype_asobject_tzinfos": [
                    "self"
                ],
                "test_localized_at_time_between_time": [
                    "self"
                ],
                "test_string_index_alias_tz_aware": [
                    "self"
                ],
                "test_fixed_offset": [
                    "self"
                ],
                "test_convert_tz_aware_datetime_datetime": [
                    "self"
                ],
                "test_to_datetime_utc": [
                    "self"
                ],
                "test_to_datetime_tzlocal": [
                    "self"
                ],
                "test_frame_no_datetime64_dtype": [
                    "self"
                ],
                "test_hongkong_tz_convert": [
                    "self"
                ],
                "test_tz_convert_unsorted": [
                    "self"
                ],
                "test_shift_localized": [
                    "self"
                ],
                "test_tz_aware_asfreq": [
                    "self"
                ],
                "test_static_tzinfo": [
                    "self"
                ],
                "test_tzaware_datetime_to_index": [
                    "self"
                ],
                "test_date_range_span_dst_transition": [
                    "self"
                ],
                "test_convert_datetime_list": [
                    "self"
                ],
                "test_frame_from_records_utc": [
                    "self"
                ],
                "test_dateutil_tzoffset_support": [
                    "self"
                ]
            },
            "TestTimeZones": {
                "setUp": [
                    "self"
                ],
                "test_index_equals_with_tz": [
                    "self"
                ],
                "test_tz_localize_naive": [
                    "self"
                ],
                "test_series_frame_tz_localize": [
                    "self"
                ],
                "test_series_frame_tz_convert": [
                    "self"
                ],
                "test_join_utc_convert": [
                    "self"
                ],
                "test_join_naive_with_aware": [
                    "self"
                ],
                "test_align_aware": [
                    "self"
                ],
                "test_equal_join_ensure_utc": [
                    "self"
                ],
                "test_arith_utc_convert": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_timestamp_equality_different_timezones": [
                    "self"
                ],
                "test_datetimeindex_tz": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_util": {
            "test_normalize_date": [],
            "TestPivotAnnual": {
                "test_daily": [
                    "self"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_period_monthly": [
                    "self"
                ],
                "test_period_daily": [
                    "self"
                ],
                "test_period_weekly": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_resample": {
            "_skip_if_no_pytz": [],
            "_simple_ts": [
                "start",
                "end",
                "freq"
            ],
            "_simple_pts": [
                "start",
                "end",
                "freq"
            ],
            "TestResample": {
                "setUp": [
                    "self"
                ],
                "test_custom_grouper": [
                    "self"
                ],
                "test_resample_basic": [
                    "self"
                ],
                "test_resample_frame_basic": [
                    "self"
                ],
                "test_resample_loffset": [
                    "self"
                ],
                "test_resample_upsample": [
                    "self"
                ],
                "test_upsample_with_limit": [
                    "self"
                ],
                "test_resample_ohlc": [
                    "self"
                ],
                "test_resample_reresample": [
                    "self"
                ],
                "test_resample_timestamp_to_period": [
                    "self"
                ],
                "test_ohlc_5min": [
                    "self"
                ],
                "test_downsample_non_unique": [
                    "self"
                ],
                "test_asfreq_non_unique": [
                    "self"
                ],
                "test_resample_axis1": [
                    "self"
                ],
                "test_resample_panel": [
                    "self"
                ],
                "test_resample_panel_numpy": [
                    "self"
                ],
                "test_resample_anchored_ticks": [
                    "self"
                ],
                "test_resample_base": [
                    "self"
                ],
                "test_resample_daily_anchored": [
                    "self"
                ],
                "test_resample_to_period_monthly_buglet": [
                    "self"
                ],
                "test_resample_empty": [
                    "self"
                ],
                "test_weekly_resample_buglet": [
                    "self"
                ],
                "test_monthly_resample_error": [
                    "self"
                ],
                "test_resample_anchored_intraday": [
                    "self"
                ],
                "test_resample_anchored_monthstart": [
                    "self"
                ],
                "test_corner_cases": [
                    "self"
                ],
                "test_anchored_lowercase_buglet": [
                    "self"
                ],
                "test_upsample_apply_functions": [
                    "self"
                ],
                "test_resample_not_monotonic": [
                    "self"
                ],
                "test_resample_median_bug_1688": [
                    "self"
                ],
                "test_how_lambda_functions": [
                    "self"
                ],
                "test_resample_unequal_times": [
                    "self"
                ]
            },
            "TestResamplePeriodIndex": {
                "test_basic_downsample": [
                    "self"
                ],
                "test_not_subperiod": [
                    "self"
                ],
                "test_basic_upsample": [
                    "self"
                ],
                "test_upsample_with_limit": [
                    "self"
                ],
                "test_annual_upsample": [
                    "self"
                ],
                "test_quarterly_upsample": [
                    "self"
                ],
                "test_monthly_upsample": [
                    "self"
                ],
                "test_weekly_upsample": [
                    "self"
                ],
                "test_resample_to_timestamps": [
                    "self"
                ],
                "test_resample_to_quarterly": [
                    "self"
                ],
                "test_resample_fill_missing": [
                    "self"
                ],
                "test_cant_fill_missing_dups": [
                    "self"
                ],
                "test_resample_5minute": [
                    "self"
                ],
                "test_upsample_daily_business_daily": [
                    "self"
                ],
                "test_resample_empty": [
                    "self"
                ],
                "test_resample_irregular_sparse": [
                    "self"
                ],
                "test_resample_weekly_all_na": [
                    "self"
                ],
                "test_resample_tz_localized": [
                    "self"
                ],
                "test_closed_left_corner": [
                    "self"
                ],
                "test_quarterly_resampling": [
                    "self"
                ],
                "test_resample_weekly_bug_1726": [
                    "self"
                ]
            },
            "TestTimeGrouper": {
                "setUp": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_numpy_reduction": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests": {},
        "pandas.tseries.tests.test_plotting": {
            "_check_plot_works": [
                "f",
                "freq",
                "series"
            ],
            "TestTSPlot": {
                "setUpClass": [
                    "cls"
                ],
                "setUp": [
                    "self"
                ],
                "test_frame_inferred": [
                    "self"
                ],
                "test_tsplot": [
                    "self"
                ],
                "test_high_freq": [
                    "self"
                ],
                "test_get_datevalue": [
                    "self"
                ],
                "test_line_plot_period_series": [
                    "self"
                ],
                "test_line_plot_datetime_series": [
                    "self"
                ],
                "test_line_plot_period_frame": [
                    "self"
                ],
                "test_line_plot_datetime_frame": [
                    "self"
                ],
                "test_line_plot_inferred_freq": [
                    "self"
                ],
                "test_fake_inferred_business": [
                    "self"
                ],
                "test_plot_offset_freq": [
                    "self"
                ],
                "test_plot_multiple_inferred_freq": [
                    "self"
                ],
                "test_uhf": [
                    "self"
                ],
                "test_irreg_hf": [
                    "self"
                ],
                "test_irregular_datetime64_repr_bug": [
                    "self"
                ],
                "test_business_freq": [
                    "self"
                ],
                "test_business_freq_convert": [
                    "self"
                ],
                "test_dataframe": [
                    "self"
                ],
                "test_axis_limits": [
                    "self"
                ],
                "test_get_finder": [
                    "self"
                ],
                "test_finder_daily": [
                    "self"
                ],
                "test_finder_quarterly": [
                    "self"
                ],
                "test_finder_monthly": [
                    "self"
                ],
                "test_finder_monthly_long": [
                    "self"
                ],
                "test_finder_annual": [
                    "self"
                ],
                "test_finder_minutely": [
                    "self"
                ],
                "test_finder_hourly": [
                    "self"
                ],
                "test_gaps": [
                    "self"
                ],
                "test_gap_upsample": [
                    "self"
                ],
                "test_secondary_y": [
                    "self"
                ],
                "test_secondary_y_ts": [
                    "self"
                ],
                "test_secondary_kde": [
                    "self"
                ],
                "test_secondary_bar": [
                    "self"
                ],
                "test_secondary_frame": [
                    "self"
                ],
                "test_mixed_freq_regular_first": [
                    "self"
                ],
                "test_mixed_freq_irregular_first": [
                    "self"
                ],
                "test_mixed_freq_hf_first": [
                    "self"
                ],
                "test_mixed_freq_lf_first": [
                    "self"
                ],
                "test_mixed_freq_irreg_period": [
                    "self"
                ],
                "test_to_weekly_resampling": [
                    "self"
                ],
                "test_from_weekly_resampling": [
                    "self"
                ],
                "test_irreg_dtypes": [
                    "self"
                ],
                "test_time": [
                    "self"
                ],
                "test_time_musec": [
                    "self"
                ],
                "test_secondary_upsample": [
                    "self"
                ],
                "test_secondary_legend": [
                    "self"
                ],
                "test_format_date_axis": [
                    "self"
                ],
                "test_ax_plot": [
                    "self"
                ],
                "test_mpl_nopandas": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_frequencies": {
            "test_to_offset_multiple": [],
            "test_to_offset_negative": [],
            "test_anchored_shortcuts": [],
            "test_is_superperiod_subperiod": [],
            "TestFrequencyInference": {
                "test_raise_if_too_few": [
                    "self"
                ],
                "test_business_daily": [
                    "self"
                ],
                "test_day": [
                    "self"
                ],
                "test_day_corner": [
                    "self"
                ],
                "test_non_datetimeindex": [
                    "self"
                ],
                "test_hour": [
                    "self"
                ],
                "test_minute": [
                    "self"
                ],
                "test_second": [
                    "self"
                ],
                "test_millisecond": [
                    "self"
                ],
                "test_microsecond": [
                    "self"
                ],
                "test_nanosecond": [
                    "self"
                ],
                "_check_tick": [
                    "self",
                    "base_delta",
                    "code"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_week_of_month": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_monthly_ambiguous": [
                    "self"
                ],
                "test_business_monthly": [
                    "self"
                ],
                "test_business_start_monthly": [
                    "self"
                ],
                "test_quarterly": [
                    "self"
                ],
                "test_annual": [
                    "self"
                ],
                "test_business_annual": [
                    "self"
                ],
                "test_annual_ambiguous": [
                    "self"
                ],
                "_check_generated_range": [
                    "self",
                    "start",
                    "freq"
                ],
                "test_infer_freq": [
                    "self"
                ],
                "test_not_monotonic": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_offsets": {
            "test_monthrange": [],
            "test_format": [],
            "test_ole2datetime": [],
            "test_to_datetime1": [],
            "test_normalize_date": [],
            "test_to_m8": [],
            "assertOnOffset": [
                "offset",
                "date",
                "expected"
            ],
            "assertEq": [
                "offset",
                "base",
                "expected"
            ],
            "test_Hour": [],
            "test_Minute": [],
            "test_Second": [],
            "test_tick_offset": [],
            "test_compare_ticks": [],
            "test_hasOffsetName": [],
            "test_get_offset_name": [],
            "test_get_offset": [],
            "test_parse_time_string": [],
            "test_get_standard_freq": [],
            "test_quarterly_dont_normalize": [],
            "test_apply_ticks": [],
            "test_delta_to_tick": [],
            "test_dateoffset_misc": [],
            "test_freq_offsets": [],
            "TestDateOffset": {
                "setUp": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_eq": [
                    "self"
                ]
            },
            "TestBusinessDay": {
                "setUp": [
                    "self"
                ],
                "test_different_normalize_equals": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_with_offset": [
                    "self"
                ],
                "testEQ": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_hash": [
                    "self"
                ],
                "testCall": [
                    "self"
                ],
                "testRAdd": [
                    "self"
                ],
                "testSub": [
                    "self"
                ],
                "testRSub": [
                    "self"
                ],
                "testMult1": [
                    "self"
                ],
                "testMult2": [
                    "self"
                ],
                "testRollback1": [
                    "self"
                ],
                "testRollback2": [
                    "self"
                ],
                "testRollforward1": [
                    "self"
                ],
                "testRollforward2": [
                    "self"
                ],
                "test_roll_date_object": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_large_n": [
                    "self"
                ],
                "test_apply_corner": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestWeek": {
                "test_corner": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestWeekOfMonth": {
                "test_constructor": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBMonthBegin": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestBMonthEnd": {
                "test_offset": [
                    "self"
                ],
                "test_normalize": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestMonthBegin": {
                "test_offset": [
                    "self"
                ]
            },
            "TestMonthEnd": {
                "test_offset": [
                    "self"
                ],
                "test_normalize": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBQuarterBegin": {
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestBQuarterEnd": {
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestQuarterBegin": {
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestQuarterEnd": {
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearBegin": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestYearBegin": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearEndLagged": {
                "test_bad_month_fail": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_roll": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearEnd": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestYearEnd": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestYearEndDiffMonth": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestOffsetAliases": {
                "setUp": [
                    "self"
                ],
                "test_alias_equality": [
                    "self"
                ],
                "test_rule_code": [
                    "self"
                ]
            }
        },
        "pandas.sparse.array": {
            "_sparse_op_wrap": [
                "op",
                "name"
            ],
            "_sparse_array_op": [
                "left",
                "right",
                "op",
                "name"
            ],
            "_sparse_nanop": [
                "this",
                "other",
                "name"
            ],
            "_sparse_fillop": [
                "this",
                "other",
                "name"
            ],
            "make_sparse": [
                "arr",
                "kind",
                "fill_value"
            ],
            "SparseArray": {
                "__new__": [
                    "cls",
                    "data",
                    "sparse_index",
                    "kind",
                    "fill_value",
                    "copy"
                ],
                "_constructor": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__len__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "disable": [
                    "self",
                    "other"
                ],
                "values": [
                    "self"
                ],
                "sp_values": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__getslice__": [
                    "self",
                    "i",
                    "j"
                ],
                "_get_val_at": [
                    "self",
                    "loc"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__setslice__": [
                    "self",
                    "i",
                    "j",
                    "value"
                ],
                "to_dense": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "count": [
                    "self"
                ],
                "_null_fill_value": [
                    "self"
                ],
                "_valid_sp_values": [
                    "self"
                ],
                "sum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "cumsum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "mean": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ]
            }
        },
        "pandas.sparse.series": {
            "_sparse_op_wrap": [
                "op",
                "name"
            ],
            "_sparse_series_op": [
                "left",
                "right",
                "op",
                "name"
            ],
            "SparseSeries": {
                "__new__": [
                    "cls",
                    "data",
                    "index",
                    "sparse_index",
                    "kind",
                    "fill_value",
                    "name",
                    "copy"
                ],
                "from_array": [
                    "cls",
                    "arr",
                    "index",
                    "name",
                    "copy",
                    "fill_value"
                ],
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "sparse_index",
                    "kind",
                    "fill_value",
                    "name",
                    "copy"
                ],
                "_constructor": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__len__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "abs": [
                    "self"
                ],
                "get": [
                    "self",
                    "label",
                    "default"
                ],
                "get_value": [
                    "self",
                    "label"
                ],
                "set_value": [
                    "self",
                    "label",
                    "value"
                ],
                "to_dense": [
                    "self",
                    "sparse_only"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "reindex": [
                    "self",
                    "index",
                    "method",
                    "copy",
                    "limit"
                ],
                "sparse_reindex": [
                    "self",
                    "new_index"
                ],
                "fillna": [
                    "self",
                    "value",
                    "method",
                    "inplace",
                    "limit"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "cumsum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "_attach_meta": [
                    "self",
                    "sparse_arr"
                ],
                "dropna": [
                    "self"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq"
                ],
                "combine_first": [
                    "self",
                    "other"
                ]
            },
            "SparseTimeSeries": {}
        },
        "pandas.sparse.panel": {
            "_convert_frames": [
                "frames",
                "index",
                "columns",
                "fill_value",
                "kind"
            ],
            "_stack_sparse_info": [
                "frame"
            ],
            "SparsePanelAxis": {
                "__init__": [
                    "self",
                    "cache_field",
                    "frame_attr"
                ],
                "__get__": [
                    "self",
                    "obj",
                    "type"
                ],
                "__set__": [
                    "self",
                    "obj",
                    "value"
                ]
            },
            "SparsePanel": {
                "__init__": [
                    "self",
                    "frames",
                    "items",
                    "major_axis",
                    "minor_axis",
                    "default_fill_value",
                    "default_kind"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "from_dict": [
                    "cls",
                    "data"
                ],
                "to_dense": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "_get_items": [
                    "self"
                ],
                "_set_items": [
                    "self",
                    "new_items"
                ],
                "_get_item_cache": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "set_value": [
                    "self",
                    "item",
                    "major",
                    "minor",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "copy": [
                    "self"
                ],
                "to_frame": [
                    "self",
                    "filter_observations"
                ],
                "reindex": [
                    "self",
                    "major",
                    "items",
                    "minor",
                    "major_axis",
                    "minor_axis",
                    "copy"
                ],
                "_combine": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_combineFrame": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_new_like": [
                    "self",
                    "new_frames"
                ],
                "_combinePanel": [
                    "self",
                    "other",
                    "func"
                ],
                "major_xs": [
                    "self",
                    "key"
                ],
                "minor_xs": [
                    "self",
                    "key"
                ]
            }
        },
        "pandas.sparse.frame": {
            "stack_sparse_frame": [
                "frame"
            ],
            "homogenize": [
                "series_dict"
            ],
            "_SparseMockBlockManager": {
                "__init__": [
                    "self",
                    "sp_frame"
                ],
                "get": [
                    "self",
                    "item"
                ],
                "iget": [
                    "self",
                    "i"
                ],
                "shape": [
                    "self"
                ],
                "axes": [
                    "self"
                ]
            },
            "SparseDataFrame": {
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "default_kind",
                    "default_fill_value"
                ],
                "_from_axes": [
                    "self",
                    "data",
                    "axes"
                ],
                "_data": [
                    "self"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "convert_objects": [
                    "self"
                ],
                "_constructor": [
                    "self"
                ],
                "_init_dict": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype"
                ],
                "_init_matrix": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "to_dense": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "density": [
                    "self"
                ],
                "_set_item": [
                    "self",
                    "key",
                    "value"
                ],
                "_insert_column": [
                    "self",
                    "key"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "_delete_column_index": [
                    "self",
                    "loc"
                ],
                "_set_index": [
                    "self",
                    "index"
                ],
                "_get_index": [
                    "self"
                ],
                "_get_columns": [
                    "self"
                ],
                "_set_columns": [
                    "self",
                    "cols"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "icol": [
                    "self",
                    "i"
                ],
                "get_value": [
                    "self",
                    "index",
                    "col"
                ],
                "set_value": [
                    "self",
                    "index",
                    "col",
                    "value"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "as_matrix": [
                    "self",
                    "columns"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy"
                ],
                "_combine_frame": [
                    "self",
                    "other",
                    "func",
                    "fill_value",
                    "level"
                ],
                "_combine_match_index": [
                    "self",
                    "other",
                    "func",
                    "fill_value"
                ],
                "_combine_match_columns": [
                    "self",
                    "other",
                    "func",
                    "fill_value"
                ],
                "_combine_const": [
                    "self",
                    "other",
                    "func"
                ],
                "_reindex_index": [
                    "self",
                    "index",
                    "method",
                    "copy",
                    "level",
                    "fill_value",
                    "limit"
                ],
                "_reindex_columns": [
                    "self",
                    "columns",
                    "copy",
                    "level",
                    "fill_value",
                    "limit"
                ],
                "_reindex_with_indexers": [
                    "self",
                    "index",
                    "row_indexer",
                    "columns",
                    "col_indexer",
                    "copy",
                    "fill_value"
                ],
                "_rename_index_inplace": [
                    "self",
                    "mapper"
                ],
                "_rename_columns_inplace": [
                    "self",
                    "mapper"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "add_prefix": [
                    "self",
                    "prefix"
                ],
                "add_suffix": [
                    "self",
                    "suffix"
                ],
                "_join_compat": [
                    "self",
                    "other",
                    "on",
                    "how",
                    "lsuffix",
                    "rsuffix",
                    "sort"
                ],
                "_join_index": [
                    "self",
                    "other",
                    "how",
                    "lsuffix",
                    "rsuffix"
                ],
                "_maybe_rename_join": [
                    "self",
                    "other",
                    "lsuffix",
                    "rsuffix"
                ],
                "transpose": [
                    "self"
                ],
                "count": [
                    "self",
                    "axis"
                ],
                "cumsum": [
                    "self",
                    "axis"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq"
                ],
                "apply": [
                    "self",
                    "func",
                    "axis",
                    "broadcast"
                ],
                "applymap": [
                    "self",
                    "func"
                ],
                "fillna": [
                    "self",
                    "value",
                    "method",
                    "inplace",
                    "limit"
                ]
            }
        },
        "pandas.sparse.list": {
            "_concat_sparse_indexes": [
                "indexes"
            ],
            "SparseList": {
                "__init__": [
                    "self",
                    "data",
                    "fill_value"
                ],
                "__repr__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "i"
                ],
                "__setitem__": [
                    "self",
                    "i",
                    "value"
                ],
                "nchunks": [
                    "self"
                ],
                "is_consolidated": [
                    "self"
                ],
                "consolidate": [
                    "self",
                    "inplace"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "to_array": [
                    "self"
                ],
                "append": [
                    "self",
                    "value"
                ]
            }
        },
        "pandas.sparse.api": {},
        "pandas.sparse": {},
        "pandas.sparse.tests.test_array": {
            "assert_sp_array_equal": [
                "left",
                "right"
            ],
            "TestSparseArray": {
                "setUp": [
                    "self"
                ],
                "test_constructor_from_sparse": [
                    "self"
                ],
                "test_constructor_copy": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_copy_shallow": [
                    "self"
                ],
                "test_values_asarray": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getslice": [
                    "self"
                ],
                "test_binary_operators": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests.test_list": {
            "assert_sp_list_equal": [
                "left",
                "right"
            ],
            "TestSparseList": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_append_na": [
                    "self"
                ],
                "test_append_zero": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests.test_sparse": {
            "_test_data1": [],
            "_test_data2": [],
            "_test_data1_zero": [],
            "_test_data2_zero": [],
            "assert_sp_series_equal": [
                "a",
                "b"
            ],
            "assert_sp_frame_equal": [
                "left",
                "right",
                "exact_indices"
            ],
            "assert_sp_panel_equal": [
                "left",
                "right",
                "exact_indices"
            ],
            "_dense_series_compare": [
                "s",
                "f"
            ],
            "_dense_frame_compare": [
                "frame",
                "f"
            ],
            "panel_data1": [],
            "panel_data2": [],
            "panel_data3": [],
            "TestSparseSeries": {
                "setUp": [
                    "self"
                ],
                "test_construct_DataFrame_with_sp_series": [
                    "self"
                ],
                "test_sparse_to_dense": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_to_dense_preserve_name": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_ndarray": [
                    "self"
                ],
                "test_constructor_nonnan": [
                    "self"
                ],
                "test_copy_astype": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_kind": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "_check_all": [
                    "self",
                    "check_func"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_get_get_value": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_getitem_slice": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setslice": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_operators_corner2": [
                    "self"
                ],
                "test_binary_operators": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_sparse_reindex": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_groupby": [
                    "self"
                ],
                "test_reductions": [
                    "self"
                ],
                "test_dropna": [
                    "self"
                ],
                "test_homogenize": [
                    "self"
                ],
                "test_fill_value_corner": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "test_combine_first": [
                    "self"
                ]
            },
            "TestSparseTimeSeries": {},
            "TestSparseDataFrame": {
                "setUp": [
                    "self"
                ],
                "test_as_matrix": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_ndarray": [
                    "self"
                ],
                "test_constructor_empty": [
                    "self"
                ],
                "test_constructor_dataframe": [
                    "self"
                ],
                "test_array_interface": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_sparse_to_dense": [
                    "self"
                ],
                "test_sparse_series_ops": [
                    "self"
                ],
                "_check_frame_ops": [
                    "self",
                    "frame"
                ],
                "test_op_corners": [
                    "self"
                ],
                "test_scalar_ops": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_icol": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_fancy_index_misc": [
                    "self"
                ],
                "test_getitem_overload": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_corner": [
                    "self"
                ],
                "test_setitem_array": [
                    "self"
                ],
                "test_delitem": [
                    "self"
                ],
                "test_set_columns": [
                    "self"
                ],
                "test_set_index": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_nonuq": [
                    "self"
                ],
                "test_applymap": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_corr": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_fill_value": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_density": [
                    "self"
                ],
                "test_to_dense": [
                    "self"
                ],
                "test_stack_sparse_frame": [
                    "self"
                ],
                "test_transpose": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "_check_all": [
                    "self",
                    "check_func"
                ],
                "test_combine_first": [
                    "self"
                ],
                "test_combine_add": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_sparse_pow_issue": [
                    "self"
                ]
            },
            "TestSparsePanel": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "setUp": [
                    "self"
                ],
                "_test_op": [
                    "panel",
                    "op"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_from_dict": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_to_dense": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_long_to_wide_sparse": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_delitem_pop": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_major_xs": [
                    "self"
                ],
                "test_minor_xs": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests": {},
        "pandas.sparse.tests.test_libsparse": {
            "check_cases": [
                "_check_case"
            ],
            "test_index_make_union": [],
            "test_lookup": [],
            "test_intersect": [],
            "make_nanoptestf": [
                "op"
            ],
            "make_optestf": [
                "op"
            ],
            "TestBlockIndex": {
                "test_equals": [
                    "self"
                ],
                "test_check_integrity": [
                    "self"
                ],
                "test_to_int_index": [
                    "self"
                ],
                "test_to_block_index": [
                    "self"
                ]
            },
            "TestIntIndex": {
                "test_equals": [
                    "self"
                ],
                "test_to_block_index": [
                    "self"
                ],
                "test_to_int_index": [
                    "self"
                ]
            },
            "TestSparseOperators": {
                "_nan_op_tests": [
                    "self",
                    "sparse_op",
                    "python_op"
                ],
                "_op_tests": [
                    "self",
                    "sparse_op",
                    "python_op"
                ]
            }
        }
    }
}