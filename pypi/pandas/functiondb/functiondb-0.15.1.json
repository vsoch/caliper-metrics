{
    "0.15.1": {
        "doc.sphinxext.ipython_sphinxext.ipython_directive": {
            "block_parser": [
                "part",
                "rgxin",
                "rgxout",
                "fmtin",
                "fmtout"
            ],
            "setup": [
                "app"
            ],
            "test": [],
            "DecodingStringIO": {
                "__init__": [
                    "self",
                    "buf",
                    "encodings"
                ],
                "set_encodings": [
                    "self",
                    "encodings"
                ],
                "write": [
                    "self",
                    "data"
                ]
            },
            "EmbeddedSphinxShell": {
                "__init__": [
                    "self",
                    "exec_lines",
                    "state"
                ],
                "clear_cout": [
                    "self"
                ],
                "process_input_line": [
                    "self",
                    "line",
                    "store_history"
                ],
                "process_image": [
                    "self",
                    "decorator"
                ],
                "process_input": [
                    "self",
                    "data",
                    "input_prompt",
                    "lineno"
                ],
                "process_output": [
                    "self",
                    "data",
                    "output_prompt",
                    "input_lines",
                    "output",
                    "is_doctest",
                    "decorator",
                    "image_file"
                ],
                "process_comment": [
                    "self",
                    "data"
                ],
                "save_image": [
                    "self",
                    "image_file"
                ],
                "process_block": [
                    "self",
                    "block"
                ],
                "ensure_pyplot": [
                    "self"
                ],
                "process_pure_python": [
                    "self",
                    "content"
                ],
                "custom_doctest": [
                    "self",
                    "decorator",
                    "input_lines",
                    "found",
                    "submitted"
                ]
            },
            "IPythonDirective": {
                "get_config_options": [
                    "self"
                ],
                "setup": [
                    "self"
                ],
                "teardown": [
                    "self"
                ],
                "run": [
                    "self"
                ]
            }
        },
        "doc.sphinxext.ipython_sphinxext.ipython_console_highlighting": {
            "setup": [
                "app"
            ],
            "IPythonConsoleLexer": {
                "get_tokens_unprocessed": [
                    "self",
                    "text"
                ]
            }
        },
        "doc.sphinxext.ipython_sphinxext": {},
        "doc.sphinxext.numpydoc.traitsdoc": {
            "looks_like_issubclass": [
                "obj",
                "classname"
            ],
            "get_doc_object": [
                "obj",
                "what",
                "config"
            ],
            "setup": [
                "app"
            ],
            "SphinxTraitsDoc": {
                "__init__": [
                    "self",
                    "cls",
                    "modulename",
                    "func_doc"
                ],
                "_str_summary": [
                    "self"
                ],
                "_str_extended_summary": [
                    "self"
                ],
                "__str__": [
                    "self",
                    "indent",
                    "func_role"
                ]
            }
        },
        "doc.sphinxext.numpydoc.numpydoc": {
            "mangle_docstrings": [
                "app",
                "what",
                "name",
                "obj",
                "options",
                "lines",
                "reference_offset"
            ],
            "mangle_signature": [
                "app",
                "what",
                "name",
                "obj",
                "options",
                "sig",
                "retann"
            ],
            "setup": [
                "app",
                "get_doc_object_"
            ],
            "wrap_mangling_directive": [
                "base_directive",
                "objtype"
            ],
            "ManglingDomainBase": {
                "__init__": [
                    "self"
                ],
                "wrap_mangling_directives": [
                    "self"
                ]
            },
            "NumpyPythonDomain": {},
            "NumpyCDomain": {}
        },
        "doc.sphinxext.numpydoc.docscrape_sphinx": {
            "get_doc_object": [
                "obj",
                "what",
                "doc",
                "config"
            ],
            "SphinxDocString": {
                "__init__": [
                    "self",
                    "docstring",
                    "config"
                ],
                "load_config": [
                    "self",
                    "config"
                ],
                "_str_header": [
                    "self",
                    "name",
                    "symbol"
                ],
                "_str_field_list": [
                    "self",
                    "name"
                ],
                "_str_indent": [
                    "self",
                    "doc",
                    "indent"
                ],
                "_str_signature": [
                    "self"
                ],
                "_str_summary": [
                    "self"
                ],
                "_str_extended_summary": [
                    "self"
                ],
                "_str_returns": [
                    "self"
                ],
                "_str_param_list": [
                    "self",
                    "name"
                ],
                "_obj": [
                    "self"
                ],
                "_str_member_list": [
                    "self",
                    "name"
                ],
                "_str_section": [
                    "self",
                    "name"
                ],
                "_str_see_also": [
                    "self",
                    "func_role"
                ],
                "_str_warnings": [
                    "self"
                ],
                "_str_index": [
                    "self"
                ],
                "_str_references": [
                    "self"
                ],
                "_str_examples": [
                    "self"
                ],
                "__str__": [
                    "self",
                    "indent",
                    "func_role"
                ]
            },
            "SphinxFunctionDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "config"
                ]
            },
            "SphinxClassDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "func_doc",
                    "config"
                ]
            },
            "SphinxObjDoc": {
                "__init__": [
                    "self",
                    "obj",
                    "doc",
                    "config"
                ]
            }
        },
        "doc.sphinxext.numpydoc.comment_eater": {
            "strip_comment_marker": [
                "text"
            ],
            "get_class_traits": [
                "klass"
            ],
            "Comment": {
                "__init__": [
                    "self",
                    "start_lineno",
                    "end_lineno",
                    "text"
                ],
                "add": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "NonComment": {
                "__init__": [
                    "self",
                    "start_lineno",
                    "end_lineno"
                ],
                "add": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "CommentBlocker": {
                "__init__": [
                    "self"
                ],
                "process_file": [
                    "self",
                    "file"
                ],
                "process_token": [
                    "self",
                    "kind",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "new_noncomment": [
                    "self",
                    "start_lineno",
                    "end_lineno"
                ],
                "new_comment": [
                    "self",
                    "string",
                    "start",
                    "end",
                    "line"
                ],
                "make_index": [
                    "self"
                ],
                "search_for_comment": [
                    "self",
                    "lineno",
                    "default"
                ]
            }
        },
        "doc.sphinxext.numpydoc.compiler_unparse": {
            "unparse": [
                "ast",
                "single_line_functions"
            ],
            "UnparseCompilerAst": {
                "__init__": [
                    "self",
                    "tree",
                    "file",
                    "single_line_functions"
                ],
                "_fill": [
                    "self",
                    "text"
                ],
                "_write": [
                    "self",
                    "text"
                ],
                "_enter": [
                    "self"
                ],
                "_leave": [
                    "self"
                ],
                "_dispatch": [
                    "self",
                    "tree"
                ],
                "_Add": [
                    "self",
                    "t"
                ],
                "_And": [
                    "self",
                    "t"
                ],
                "_AssAttr": [
                    "self",
                    "t"
                ],
                "_Assign": [
                    "self",
                    "t"
                ],
                "_AssName": [
                    "self",
                    "t"
                ],
                "_AssTuple": [
                    "self",
                    "t"
                ],
                "_AugAssign": [
                    "self",
                    "t"
                ],
                "_Bitand": [
                    "self",
                    "t"
                ],
                "_Bitor": [
                    "self",
                    "t"
                ],
                "_CallFunc": [
                    "self",
                    "t"
                ],
                "_Compare": [
                    "self",
                    "t"
                ],
                "_Const": [
                    "self",
                    "t"
                ],
                "_Decorators": [
                    "self",
                    "t"
                ],
                "_Dict": [
                    "self",
                    "t"
                ],
                "_Discard": [
                    "self",
                    "t"
                ],
                "_Div": [
                    "self",
                    "t"
                ],
                "_Ellipsis": [
                    "self",
                    "t"
                ],
                "_From": [
                    "self",
                    "t"
                ],
                "_Function": [
                    "self",
                    "t"
                ],
                "_Getattr": [
                    "self",
                    "t"
                ],
                "_If": [
                    "self",
                    "t"
                ],
                "_IfExp": [
                    "self",
                    "t"
                ],
                "_Import": [
                    "self",
                    "t"
                ],
                "_Keyword": [
                    "self",
                    "t"
                ],
                "_List": [
                    "self",
                    "t"
                ],
                "_Module": [
                    "self",
                    "t"
                ],
                "_Mul": [
                    "self",
                    "t"
                ],
                "_Name": [
                    "self",
                    "t"
                ],
                "_NoneType": [
                    "self",
                    "t"
                ],
                "_Not": [
                    "self",
                    "t"
                ],
                "_Or": [
                    "self",
                    "t"
                ],
                "_Pass": [
                    "self",
                    "t"
                ],
                "_Printnl": [
                    "self",
                    "t"
                ],
                "_Power": [
                    "self",
                    "t"
                ],
                "_Return": [
                    "self",
                    "t"
                ],
                "_Slice": [
                    "self",
                    "t"
                ],
                "_Sliceobj": [
                    "self",
                    "t"
                ],
                "_Stmt": [
                    "self",
                    "tree"
                ],
                "_Sub": [
                    "self",
                    "t"
                ],
                "_Subscript": [
                    "self",
                    "t"
                ],
                "_TryExcept": [
                    "self",
                    "t"
                ],
                "_Tuple": [
                    "self",
                    "t"
                ],
                "_UnaryAdd": [
                    "self",
                    "t"
                ],
                "_UnarySub": [
                    "self",
                    "t"
                ],
                "_With": [
                    "self",
                    "t"
                ],
                "_int": [
                    "self",
                    "t"
                ],
                "__binary_op": [
                    "self",
                    "t",
                    "symbol"
                ],
                "_float": [
                    "self",
                    "t"
                ],
                "_str": [
                    "self",
                    "t"
                ],
                "_tuple": [
                    "self",
                    "t"
                ]
            }
        },
        "doc.sphinxext.numpydoc.plot_directive": {
            "setup": [
                "app"
            ],
            "plot_directive": [
                "name",
                "arguments",
                "options",
                "content",
                "lineno",
                "content_offset",
                "block_text",
                "state",
                "state_machine"
            ],
            "_option_boolean": [
                "arg"
            ],
            "_option_format": [
                "arg"
            ],
            "_option_align": [
                "arg"
            ],
            "run": [
                "arguments",
                "content",
                "options",
                "state_machine",
                "state",
                "lineno"
            ],
            "contains_doctest": [
                "text"
            ],
            "unescape_doctest": [
                "text"
            ],
            "split_code_at_show": [
                "text"
            ],
            "run_code": [
                "code",
                "code_path",
                "ns"
            ],
            "out_of_date": [
                "original",
                "derived"
            ],
            "makefig": [
                "code",
                "code_path",
                "output_dir",
                "output_base",
                "config"
            ],
            "ImageFile": {
                "__init__": [
                    "self",
                    "basename",
                    "dirname"
                ],
                "filename": [
                    "self",
                    "format"
                ],
                "filenames": [
                    "self"
                ]
            },
            "PlotError": {}
        },
        "doc.sphinxext.numpydoc.docscrape": {
            "indent": [
                "str",
                "indent"
            ],
            "dedent_lines": [
                "lines"
            ],
            "header": [
                "text",
                "style"
            ],
            "Reader": {
                "__init__": [
                    "self",
                    "data"
                ],
                "__getitem__": [
                    "self",
                    "n"
                ],
                "reset": [
                    "self"
                ],
                "read": [
                    "self"
                ],
                "seek_next_non_empty_line": [
                    "self"
                ],
                "eof": [
                    "self"
                ],
                "read_to_condition": [
                    "self",
                    "condition_func"
                ],
                "read_to_next_empty_line": [
                    "self"
                ],
                "read_to_next_unindented_line": [
                    "self"
                ],
                "peek": [
                    "self",
                    "n"
                ],
                "is_empty": [
                    "self"
                ]
            },
            "NumpyDocString": {
                "__init__": [
                    "self",
                    "docstring",
                    "config"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "val"
                ],
                "_is_at_section": [
                    "self"
                ],
                "_strip": [
                    "self",
                    "doc"
                ],
                "_read_to_next_section": [
                    "self"
                ],
                "_read_sections": [
                    "self"
                ],
                "_parse_param_list": [
                    "self",
                    "content"
                ],
                "_parse_see_also": [
                    "self",
                    "content"
                ],
                "_parse_index": [
                    "self",
                    "section",
                    "content"
                ],
                "_parse_summary": [
                    "self"
                ],
                "_parse": [
                    "self"
                ],
                "_str_header": [
                    "self",
                    "name",
                    "symbol"
                ],
                "_str_indent": [
                    "self",
                    "doc",
                    "indent"
                ],
                "_str_signature": [
                    "self"
                ],
                "_str_summary": [
                    "self"
                ],
                "_str_extended_summary": [
                    "self"
                ],
                "_str_param_list": [
                    "self",
                    "name"
                ],
                "_str_section": [
                    "self",
                    "name"
                ],
                "_str_see_also": [
                    "self",
                    "func_role"
                ],
                "_str_index": [
                    "self"
                ],
                "__str__": [
                    "self",
                    "func_role"
                ]
            },
            "FunctionDoc": {
                "__init__": [
                    "self",
                    "func",
                    "role",
                    "doc",
                    "config"
                ],
                "get_func": [
                    "self"
                ],
                "__str__": [
                    "self"
                ]
            },
            "ClassDoc": {
                "__init__": [
                    "self",
                    "cls",
                    "doc",
                    "modulename",
                    "func_doc",
                    "config"
                ],
                "methods": [
                    "self"
                ],
                "properties": [
                    "self"
                ]
            }
        },
        "doc.sphinxext.numpydoc": {},
        "doc.sphinxext.numpydoc.linkcode": {
            "doctree_read": [
                "app",
                "doctree"
            ],
            "setup": [
                "app"
            ],
            "LinkcodeError": {}
        },
        "doc.sphinxext.numpydoc.phantom_import": {
            "setup": [
                "app"
            ],
            "initialize": [
                "app"
            ],
            "import_phantom_module": [
                "xml_file"
            ]
        },
        "pandas.version": {},
        "pandas.info": {},
        "pandas": {},
        "pandas.rpy.vars": {
            "VAR": {
                "__init__": [
                    "y",
                    "p",
                    "type",
                    "season",
                    "exogen",
                    "lag_max",
                    "ic"
                ]
            }
        },
        "pandas.rpy.common": {
            "load_data": [
                "name",
                "package",
                "convert"
            ],
            "_rclass": [
                "obj"
            ],
            "_is_null": [
                "obj"
            ],
            "_convert_list": [
                "obj"
            ],
            "_convert_array": [
                "obj"
            ],
            "_convert_vector": [
                "obj"
            ],
            "_convert_int_vector": [
                "obj"
            ],
            "_convert_str_vector": [
                "obj"
            ],
            "_convert_DataFrame": [
                "rdf"
            ],
            "_convert_Matrix": [
                "mat"
            ],
            "_check_int": [
                "vec"
            ],
            "convert_robj": [
                "obj",
                "use_pandas"
            ],
            "convert_to_r_posixct": [
                "obj"
            ],
            "convert_to_r_dataframe": [
                "df",
                "strings_as_factors"
            ],
            "convert_to_r_matrix": [
                "df",
                "strings_as_factors"
            ]
        },
        "pandas.rpy.base": {
            "lm": {
                "__init__": [
                    "self",
                    "formula",
                    "data"
                ]
            }
        },
        "pandas.rpy.mass": {
            "rlm": {}
        },
        "pandas.rpy": {},
        "pandas.rpy.tests.test_common": {
            "TestCommon": {
                "test_convert_list": [
                    "self"
                ],
                "test_convert_nested_list": [
                    "self"
                ],
                "test_convert_frame": [
                    "self"
                ],
                "_test_matrix": [
                    "self"
                ],
                "test_convert_matrix": [
                    "self"
                ],
                "test_convert_r_dataframe": [
                    "self"
                ],
                "test_convert_r_matrix": [
                    "self"
                ],
                "test_dist": [
                    "self"
                ],
                "test_timeseries": [
                    "self"
                ],
                "test_numeric": [
                    "self"
                ],
                "test_table": [
                    "self"
                ],
                "test_factor": [
                    "self"
                ]
            }
        },
        "pandas.rpy.tests": {},
        "pandas.core.algorithms": {
            "match": [
                "to_match",
                "values",
                "na_sentinel"
            ],
            "unique": [
                "values"
            ],
            "_hashtable_algo": [
                "f",
                "dtype"
            ],
            "_match_generic": [
                "values",
                "index",
                "table_type",
                "type_caster"
            ],
            "_unique_generic": [
                "values",
                "table_type",
                "type_caster"
            ],
            "factorize": [
                "values",
                "sort",
                "order",
                "na_sentinel"
            ],
            "value_counts": [
                "values",
                "sort",
                "ascending",
                "normalize",
                "bins",
                "dropna"
            ],
            "mode": [
                "values"
            ],
            "rank": [
                "values",
                "axis",
                "method",
                "na_option",
                "ascending",
                "pct"
            ],
            "quantile": [
                "x",
                "q",
                "interpolation_method"
            ],
            "_interpolate": [
                "a",
                "b",
                "fraction"
            ],
            "_get_data_algo": [
                "values",
                "func_map"
            ],
            "group_position": [],
            "_finalize_nsmallest": [
                "arr",
                "kth_val",
                "n",
                "take_last",
                "narr"
            ],
            "nsmallest": [
                "arr",
                "n",
                "take_last"
            ],
            "nlargest": [
                "arr",
                "n",
                "take_last"
            ],
            "select_n_slow": [
                "dropped",
                "n",
                "take_last",
                "method"
            ],
            "select_n": [
                "series",
                "n",
                "take_last",
                "method"
            ]
        },
        "pandas.core.categorical": {
            "_cat_compare_op": [
                "op"
            ],
            "_is_categorical": [
                "array"
            ],
            "_maybe_to_categorical": [
                "array"
            ],
            "_get_codes_for_values": [
                "values",
                "categories"
            ],
            "_convert_to_list_like": [
                "list_like"
            ],
            "Categorical": {
                "__init__": [
                    "self",
                    "values",
                    "categories",
                    "ordered",
                    "name",
                    "fastpath",
                    "levels"
                ],
                "copy": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "from_array": [
                    "cls",
                    "data"
                ],
                "from_codes": [
                    "cls",
                    "codes",
                    "categories",
                    "ordered",
                    "name"
                ],
                "_get_codes": [
                    "self"
                ],
                "_set_codes": [
                    "self",
                    "codes"
                ],
                "_get_labels": [
                    "self"
                ],
                "_validate_categories": [
                    "cls",
                    "categories"
                ],
                "_set_categories": [
                    "self",
                    "categories"
                ],
                "_get_categories": [
                    "self"
                ],
                "_set_levels": [
                    "self",
                    "levels"
                ],
                "_get_levels": [
                    "self"
                ],
                "set_categories": [
                    "self",
                    "new_categories",
                    "ordered",
                    "rename",
                    "inplace"
                ],
                "rename_categories": [
                    "self",
                    "new_categories",
                    "inplace"
                ],
                "reorder_categories": [
                    "self",
                    "new_categories",
                    "ordered",
                    "inplace"
                ],
                "add_categories": [
                    "self",
                    "new_categories",
                    "inplace"
                ],
                "remove_categories": [
                    "self",
                    "removals",
                    "inplace"
                ],
                "remove_unused_categories": [
                    "self",
                    "inplace"
                ],
                "shape": [
                    "self"
                ],
                "__array__": [
                    "self",
                    "dtype"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "T": [
                    "self"
                ],
                "nbytes": [
                    "self"
                ],
                "searchsorted": [
                    "self",
                    "v",
                    "side",
                    "sorter"
                ],
                "isnull": [
                    "self"
                ],
                "notnull": [
                    "self"
                ],
                "get_values": [
                    "self"
                ],
                "argsort": [
                    "self",
                    "ascending"
                ],
                "order": [
                    "self",
                    "inplace",
                    "ascending",
                    "na_position"
                ],
                "sort": [
                    "self",
                    "inplace",
                    "ascending",
                    "na_position"
                ],
                "ravel": [
                    "self",
                    "order"
                ],
                "view": [
                    "self"
                ],
                "to_dense": [
                    "self"
                ],
                "fillna": [
                    "self",
                    "fill_value",
                    "method",
                    "limit"
                ],
                "take_nd": [
                    "self",
                    "indexer",
                    "allow_fill",
                    "fill_value"
                ],
                "_slice": [
                    "self",
                    "slicer"
                ],
                "__len__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "_tidy_repr": [
                    "self",
                    "max_vals"
                ],
                "_repr_categories_info": [
                    "self"
                ],
                "_repr_footer": [
                    "self"
                ],
                "_get_repr": [
                    "self",
                    "name",
                    "length",
                    "na_rep",
                    "footer"
                ],
                "__unicode__": [
                    "self"
                ],
                "_maybe_coerce_indexer": [
                    "self",
                    "indexer"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "name",
                    "axis",
                    "skipna",
                    "numeric_only",
                    "filter_type"
                ],
                "min": [
                    "self",
                    "numeric_only"
                ],
                "max": [
                    "self",
                    "numeric_only"
                ],
                "mode": [
                    "self"
                ],
                "unique": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "describe": [
                    "self"
                ]
            },
            "CategoricalAccessor": {
                "__init__": [
                    "self",
                    "values",
                    "index"
                ],
                "_delegate_property_get": [
                    "self",
                    "name"
                ],
                "_delegate_property_set": [
                    "self",
                    "name",
                    "new_values"
                ],
                "codes": [
                    "self"
                ],
                "_delegate_method": [
                    "self",
                    "name"
                ]
            }
        },
        "pandas.core.config_init": {
            "mpl_style_cb": [
                "key"
            ],
            "use_inf_as_null_cb": [
                "key"
            ]
        },
        "pandas.core.matrix": {},
        "pandas.core.panelnd": {
            "create_nd_panel_factory": [
                "klass_name",
                "orders",
                "slices",
                "slicer",
                "aliases",
                "stat_axis",
                "info_axis",
                "ns"
            ]
        },
        "pandas.core.sparse": {},
        "pandas.core.format": {
            "_strlen_func": [],
            "_get_level_lengths": [
                "levels",
                "sentinel"
            ],
            "format_array": [
                "values",
                "formatter",
                "float_format",
                "na_rep",
                "digits",
                "space",
                "justify"
            ],
            "_format_datetime64": [
                "x",
                "tz",
                "nat_rep"
            ],
            "_format_datetime64_dateonly": [
                "x",
                "nat_rep",
                "date_format"
            ],
            "_is_dates_only": [
                "values"
            ],
            "_get_format_datetime64": [
                "is_dates_only",
                "nat_rep",
                "date_format"
            ],
            "_get_format_datetime64_from_values": [
                "values",
                "nat_rep",
                "date_format"
            ],
            "_get_format_timedelta64": [
                "values",
                "nat_rep",
                "box"
            ],
            "_make_fixed_width": [
                "strings",
                "justify",
                "minimum"
            ],
            "_trim_zeros": [
                "str_floats",
                "na_rep"
            ],
            "single_column_table": [
                "column",
                "align",
                "style"
            ],
            "single_row_table": [
                "row"
            ],
            "_has_names": [
                "index"
            ],
            "detect_console_encoding": [],
            "get_console_size": [],
            "set_eng_float_format": [
                "accuracy",
                "use_eng_prefix"
            ],
            "_put_lines": [
                "buf",
                "lines"
            ],
            "_binify": [
                "cols",
                "line_width"
            ],
            "CategoricalFormatter": {
                "__init__": [
                    "self",
                    "categorical",
                    "buf",
                    "length",
                    "na_rep",
                    "name",
                    "footer"
                ],
                "_get_footer": [
                    "self"
                ],
                "_get_formatted_values": [
                    "self"
                ],
                "to_string": [
                    "self"
                ]
            },
            "SeriesFormatter": {
                "__init__": [
                    "self",
                    "series",
                    "buf",
                    "header",
                    "length",
                    "na_rep",
                    "name",
                    "float_format",
                    "dtype"
                ],
                "_get_footer": [
                    "self"
                ],
                "_get_formatted_index": [
                    "self"
                ],
                "_get_formatted_values": [
                    "self"
                ],
                "to_string": [
                    "self"
                ]
            },
            "TableFormatter": {
                "should_show_dimensions": [
                    "self"
                ],
                "_get_formatter": [
                    "self",
                    "i"
                ]
            },
            "DataFrameFormatter": {
                "__init__": [
                    "self",
                    "frame",
                    "buf",
                    "columns",
                    "col_space",
                    "header",
                    "index",
                    "na_rep",
                    "formatters",
                    "justify",
                    "float_format",
                    "sparsify",
                    "index_names",
                    "line_width",
                    "max_rows",
                    "max_cols",
                    "show_dimensions"
                ],
                "_chk_truncate": [
                    "self"
                ],
                "_to_str_columns": [
                    "self"
                ],
                "to_string": [
                    "self"
                ],
                "_join_multiline": [
                    "self"
                ],
                "to_latex": [
                    "self",
                    "column_format",
                    "longtable"
                ],
                "_format_col": [
                    "self",
                    "i"
                ],
                "to_html": [
                    "self",
                    "classes"
                ],
                "_get_formatted_column_labels": [
                    "self",
                    "frame"
                ],
                "has_index_names": [
                    "self"
                ],
                "has_column_names": [
                    "self"
                ],
                "_get_formatted_index": [
                    "self",
                    "frame"
                ],
                "_get_column_name_list": [
                    "self"
                ]
            },
            "HTMLFormatter": {
                "__init__": [
                    "self",
                    "formatter",
                    "classes",
                    "max_rows",
                    "max_cols"
                ],
                "write": [
                    "self",
                    "s",
                    "indent"
                ],
                "write_th": [
                    "self",
                    "s",
                    "indent",
                    "tags"
                ],
                "write_td": [
                    "self",
                    "s",
                    "indent",
                    "tags"
                ],
                "_write_cell": [
                    "self",
                    "s",
                    "kind",
                    "indent",
                    "tags"
                ],
                "write_tr": [
                    "self",
                    "line",
                    "indent",
                    "indent_delta",
                    "header",
                    "align",
                    "tags",
                    "nindex_levels"
                ],
                "write_result": [
                    "self",
                    "buf"
                ],
                "_write_header": [
                    "self",
                    "indent"
                ],
                "_write_body": [
                    "self",
                    "indent"
                ],
                "_write_regular_rows": [
                    "self",
                    "fmt_values",
                    "indent"
                ],
                "_write_hierarchical_rows": [
                    "self",
                    "fmt_values",
                    "indent"
                ]
            },
            "CSVFormatter": {
                "__init__": [
                    "self",
                    "obj",
                    "path_or_buf",
                    "sep",
                    "na_rep",
                    "float_format",
                    "cols",
                    "header",
                    "index",
                    "index_label",
                    "mode",
                    "nanRep",
                    "encoding",
                    "quoting",
                    "line_terminator",
                    "chunksize",
                    "engine",
                    "tupleize_cols",
                    "quotechar",
                    "date_format",
                    "doublequote",
                    "escapechar"
                ],
                "_helper_csv": [
                    "self",
                    "writer",
                    "na_rep",
                    "cols",
                    "header",
                    "index",
                    "index_label",
                    "float_format",
                    "date_format"
                ],
                "save": [
                    "self"
                ],
                "_save_header": [
                    "self"
                ],
                "_save": [
                    "self"
                ],
                "_save_chunk": [
                    "self",
                    "start_i",
                    "end_i"
                ]
            },
            "ExcelCell": {
                "__init__": [
                    "self",
                    "row",
                    "col",
                    "val",
                    "style",
                    "mergestart",
                    "mergeend"
                ]
            },
            "ExcelFormatter": {
                "__init__": [
                    "self",
                    "df",
                    "na_rep",
                    "float_format",
                    "cols",
                    "header",
                    "index",
                    "index_label",
                    "merge_cells",
                    "inf_rep"
                ],
                "_format_value": [
                    "self",
                    "val"
                ],
                "_format_header_mi": [
                    "self"
                ],
                "_format_header_regular": [
                    "self"
                ],
                "_format_header": [
                    "self"
                ],
                "_format_body": [
                    "self"
                ],
                "_format_regular_rows": [
                    "self"
                ],
                "_format_hierarchical_rows": [
                    "self"
                ],
                "get_formatted_cells": [
                    "self"
                ]
            },
            "GenericArrayFormatter": {
                "__init__": [
                    "self",
                    "values",
                    "digits",
                    "formatter",
                    "na_rep",
                    "space",
                    "float_format",
                    "justify"
                ],
                "get_result": [
                    "self"
                ],
                "_format_strings": [
                    "self"
                ]
            },
            "FloatArrayFormatter": {
                "__init__": [
                    "self"
                ],
                "_format_with": [
                    "self",
                    "fmt_str"
                ],
                "_format_strings": [
                    "self"
                ]
            },
            "IntArrayFormatter": {
                "_format_strings": [
                    "self"
                ]
            },
            "Datetime64Formatter": {
                "__init__": [
                    "self",
                    "values",
                    "nat_rep",
                    "date_format"
                ],
                "_format_strings": [
                    "self"
                ]
            },
            "Timedelta64Formatter": {
                "__init__": [
                    "self",
                    "values",
                    "nat_rep",
                    "box"
                ],
                "_format_strings": [
                    "self"
                ]
            },
            "EngFormatter": {
                "__init__": [
                    "self",
                    "accuracy",
                    "use_eng_prefix"
                ],
                "__call__": [
                    "self",
                    "num"
                ]
            }
        },
        "pandas.core.generic": {
            "is_dictlike": [
                "x"
            ],
            "_single_replace": [
                "self",
                "to_replace",
                "method",
                "inplace",
                "limit"
            ],
            "NDFrame": {
                "__init__": [
                    "self",
                    "data",
                    "axes",
                    "copy",
                    "dtype",
                    "fastpath"
                ],
                "_validate_dtype": [
                    "self",
                    "dtype"
                ],
                "_init_mgr": [
                    "self",
                    "mgr",
                    "axes",
                    "dtype",
                    "copy"
                ],
                "_constructor": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_local_dir": [
                    "self"
                ],
                "_constructor_sliced": [
                    "self"
                ],
                "_setup_axes": [
                    "cls",
                    "axes",
                    "info_axis",
                    "stat_axis",
                    "aliases",
                    "slicers",
                    "axes_are_reversed",
                    "build_axes",
                    "ns"
                ],
                "_construct_axes_dict": [
                    "self",
                    "axes"
                ],
                "_construct_axes_dict_from": [
                    "self",
                    "axes"
                ],
                "_construct_axes_dict_for_slice": [
                    "self",
                    "axes"
                ],
                "_construct_axes_from_arguments": [
                    "self",
                    "args",
                    "kwargs",
                    "require_all"
                ],
                "_from_axes": [
                    "cls",
                    "data",
                    "axes"
                ],
                "_get_axis_number": [
                    "self",
                    "axis"
                ],
                "_get_axis_name": [
                    "self",
                    "axis"
                ],
                "_get_axis": [
                    "self",
                    "axis"
                ],
                "_get_block_manager_axis": [
                    "self",
                    "axis"
                ],
                "_get_axis_resolvers": [
                    "self",
                    "axis"
                ],
                "_get_index_resolvers": [
                    "self"
                ],
                "_info_axis": [
                    "self"
                ],
                "_stat_axis": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "axes": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "_expand_axes": [
                    "self",
                    "key"
                ],
                "set_axis": [
                    "self",
                    "axis",
                    "labels"
                ],
                "_set_axis": [
                    "self",
                    "axis",
                    "labels"
                ],
                "transpose": [
                    "self"
                ],
                "swapaxes": [
                    "self",
                    "axis1",
                    "axis2",
                    "copy"
                ],
                "pop": [
                    "self",
                    "item"
                ],
                "squeeze": [
                    "self"
                ],
                "swaplevel": [
                    "self",
                    "i",
                    "j",
                    "axis"
                ],
                "rename": [
                    "self"
                ],
                "rename_axis": [
                    "self",
                    "mapper",
                    "axis",
                    "copy",
                    "inplace"
                ],
                "_indexed_same": [
                    "self",
                    "other"
                ],
                "__neg__": [
                    "self"
                ],
                "__invert__": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "keys": [
                    "self"
                ],
                "iteritems": [
                    "self"
                ],
                "iterkv": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "empty": [
                    "self"
                ],
                "__nonzero__": [
                    "self"
                ],
                "bool": [
                    "self"
                ],
                "__abs__": [
                    "self"
                ],
                "__array__": [
                    "self",
                    "dtype"
                ],
                "__array_wrap__": [
                    "self",
                    "result",
                    "context"
                ],
                "to_dense": [
                    "self"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "to_json": [
                    "self",
                    "path_or_buf",
                    "orient",
                    "date_format",
                    "double_precision",
                    "force_ascii",
                    "date_unit",
                    "default_handler"
                ],
                "to_hdf": [
                    "self",
                    "path_or_buf",
                    "key"
                ],
                "to_msgpack": [
                    "self",
                    "path_or_buf"
                ],
                "to_sql": [
                    "self",
                    "name",
                    "con",
                    "flavor",
                    "schema",
                    "if_exists",
                    "index",
                    "index_label",
                    "chunksize"
                ],
                "to_pickle": [
                    "self",
                    "path"
                ],
                "save": [
                    "self",
                    "path"
                ],
                "load": [
                    "self",
                    "path"
                ],
                "to_clipboard": [
                    "self",
                    "excel",
                    "sep"
                ],
                "_create_indexer": [
                    "cls",
                    "name",
                    "indexer"
                ],
                "get": [
                    "self",
                    "key",
                    "default"
                ],
                "__getitem__": [
                    "self",
                    "item"
                ],
                "_get_item_cache": [
                    "self",
                    "item"
                ],
                "_set_as_cached": [
                    "self",
                    "item",
                    "cacher"
                ],
                "_iget_item_cache": [
                    "self",
                    "item"
                ],
                "_box_item_values": [
                    "self",
                    "key",
                    "values"
                ],
                "_maybe_cache_changed": [
                    "self",
                    "item",
                    "value"
                ],
                "_is_cached": [
                    "self"
                ],
                "_get_cacher": [
                    "self"
                ],
                "_is_view": [
                    "self"
                ],
                "_maybe_update_cacher": [
                    "self",
                    "clear",
                    "verify_is_copy"
                ],
                "_clear_item_cache": [
                    "self",
                    "i"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis",
                    "typ"
                ],
                "_set_item": [
                    "self",
                    "key",
                    "value"
                ],
                "_set_is_copy": [
                    "self",
                    "ref",
                    "copy"
                ],
                "_check_is_chained_assignment_possible": [
                    "self"
                ],
                "_check_setitem_copy": [
                    "self",
                    "stacklevel",
                    "t",
                    "force"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis",
                    "convert",
                    "is_copy"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "level",
                    "copy",
                    "drop_level"
                ],
                "select": [
                    "self",
                    "crit",
                    "axis"
                ],
                "reindex_like": [
                    "self",
                    "other",
                    "method",
                    "copy",
                    "limit"
                ],
                "drop": [
                    "self",
                    "labels",
                    "axis",
                    "level",
                    "inplace"
                ],
                "_update_inplace": [
                    "self",
                    "result",
                    "verify_is_copy"
                ],
                "add_prefix": [
                    "self",
                    "prefix"
                ],
                "add_suffix": [
                    "self",
                    "suffix"
                ],
                "sort_index": [
                    "self",
                    "axis",
                    "ascending"
                ],
                "reindex": [
                    "self"
                ],
                "_reindex_axes": [
                    "self",
                    "axes",
                    "level",
                    "limit",
                    "method",
                    "fill_value",
                    "copy"
                ],
                "_needs_reindex_multi": [
                    "self",
                    "axes",
                    "method",
                    "level"
                ],
                "_reindex_multi": [
                    "self",
                    "axes",
                    "copy",
                    "fill_value"
                ],
                "reindex_axis": [
                    "self",
                    "labels",
                    "axis",
                    "method",
                    "level",
                    "copy",
                    "limit",
                    "fill_value"
                ],
                "_reindex_with_indexers": [
                    "self",
                    "reindexers",
                    "method",
                    "fill_value",
                    "limit",
                    "copy",
                    "allow_dups"
                ],
                "_reindex_axis": [
                    "self",
                    "new_index",
                    "fill_method",
                    "axis",
                    "copy"
                ],
                "filter": [
                    "self",
                    "items",
                    "like",
                    "regex",
                    "axis"
                ],
                "head": [
                    "self",
                    "n"
                ],
                "tail": [
                    "self",
                    "n"
                ],
                "__finalize__": [
                    "self",
                    "other",
                    "method"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "__setattr__": [
                    "self",
                    "name",
                    "value"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "consolidate": [
                    "self",
                    "inplace"
                ],
                "_is_mixed_type": [
                    "self"
                ],
                "_is_numeric_mixed_type": [
                    "self"
                ],
                "_is_datelike_mixed_type": [
                    "self"
                ],
                "_check_inplace_setting": [
                    "self",
                    "value"
                ],
                "_protect_consolidate": [
                    "self",
                    "f"
                ],
                "_get_numeric_data": [
                    "self"
                ],
                "_get_bool_data": [
                    "self"
                ],
                "as_matrix": [
                    "self",
                    "columns"
                ],
                "values": [
                    "self"
                ],
                "_get_values": [
                    "self"
                ],
                "get_values": [
                    "self"
                ],
                "get_dtype_counts": [
                    "self"
                ],
                "get_ftype_counts": [
                    "self"
                ],
                "dtypes": [
                    "self"
                ],
                "ftypes": [
                    "self"
                ],
                "as_blocks": [
                    "self"
                ],
                "blocks": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype",
                    "copy",
                    "raise_on_error"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "convert_objects": [
                    "self",
                    "convert_dates",
                    "convert_numeric",
                    "convert_timedeltas",
                    "copy"
                ],
                "fillna": [
                    "self",
                    "value",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "downcast"
                ],
                "ffill": [
                    "self",
                    "axis",
                    "inplace",
                    "limit",
                    "downcast"
                ],
                "bfill": [
                    "self",
                    "axis",
                    "inplace",
                    "limit",
                    "downcast"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace",
                    "limit",
                    "regex",
                    "method",
                    "axis"
                ],
                "interpolate": [
                    "self",
                    "method",
                    "axis",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "isnull": [
                    "self"
                ],
                "notnull": [
                    "self"
                ],
                "clip": [
                    "self",
                    "lower",
                    "upper",
                    "out"
                ],
                "clip_upper": [
                    "self",
                    "threshold"
                ],
                "clip_lower": [
                    "self",
                    "threshold"
                ],
                "groupby": [
                    "self",
                    "by",
                    "axis",
                    "level",
                    "as_index",
                    "sort",
                    "group_keys",
                    "squeeze"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "method",
                    "how",
                    "normalize"
                ],
                "at_time": [
                    "self",
                    "time",
                    "asof"
                ],
                "between_time": [
                    "self",
                    "start_time",
                    "end_time",
                    "include_start",
                    "include_end"
                ],
                "resample": [
                    "self",
                    "rule",
                    "how",
                    "axis",
                    "fill_method",
                    "closed",
                    "label",
                    "convention",
                    "kind",
                    "loffset",
                    "limit",
                    "base"
                ],
                "first": [
                    "self",
                    "offset"
                ],
                "last": [
                    "self",
                    "offset"
                ],
                "align": [
                    "self",
                    "other",
                    "join",
                    "axis",
                    "level",
                    "copy",
                    "fill_value",
                    "method",
                    "limit",
                    "fill_axis"
                ],
                "_align_frame": [
                    "self",
                    "other",
                    "join",
                    "axis",
                    "level",
                    "copy",
                    "fill_value",
                    "method",
                    "limit",
                    "fill_axis"
                ],
                "_align_series": [
                    "self",
                    "other",
                    "join",
                    "axis",
                    "level",
                    "copy",
                    "fill_value",
                    "method",
                    "limit",
                    "fill_axis"
                ],
                "where": [
                    "self",
                    "cond",
                    "other",
                    "inplace",
                    "axis",
                    "level",
                    "try_cast",
                    "raise_on_error"
                ],
                "mask": [
                    "self",
                    "cond"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq",
                    "axis"
                ],
                "slice_shift": [
                    "self",
                    "periods",
                    "axis"
                ],
                "tshift": [
                    "self",
                    "periods",
                    "freq",
                    "axis"
                ],
                "truncate": [
                    "self",
                    "before",
                    "after",
                    "axis",
                    "copy"
                ],
                "tz_convert": [
                    "self",
                    "tz",
                    "axis",
                    "level",
                    "copy"
                ],
                "tz_localize": [
                    "self",
                    "tz",
                    "axis",
                    "level",
                    "copy",
                    "ambiguous"
                ],
                "abs": [
                    "self"
                ],
                "describe": [
                    "self",
                    "percentile_width",
                    "percentiles",
                    "include",
                    "exclude"
                ],
                "pct_change": [
                    "self",
                    "periods",
                    "fill_method",
                    "limit",
                    "freq"
                ],
                "_agg_by_level": [
                    "self",
                    "name",
                    "axis",
                    "level",
                    "skipna"
                ],
                "_add_numeric_operations": [
                    "cls"
                ]
            }
        },
        "pandas.core.common": {
            "create_pandas_abc_type": [
                "name",
                "attr",
                "comp"
            ],
            "bind_method": [
                "cls",
                "name",
                "func"
            ],
            "isnull": [
                "obj"
            ],
            "_isnull_new": [
                "obj"
            ],
            "_isnull_old": [
                "obj"
            ],
            "_use_inf_as_null": [
                "key"
            ],
            "_isnull_ndarraylike": [
                "obj"
            ],
            "_isnull_ndarraylike_old": [
                "obj"
            ],
            "notnull": [
                "obj"
            ],
            "_is_null_datelike_scalar": [
                "other"
            ],
            "array_equivalent": [
                "left",
                "right",
                "strict_nan"
            ],
            "_iterable_not_string": [
                "x"
            ],
            "flatten": [
                "l"
            ],
            "mask_missing": [
                "arr",
                "values_to_mask"
            ],
            "_pickle_array": [
                "arr"
            ],
            "_unpickle_array": [
                "bytes"
            ],
            "_view_wrapper": [
                "f",
                "arr_dtype",
                "out_dtype",
                "fill_wrap"
            ],
            "_convert_wrapper": [
                "f",
                "conv_dtype"
            ],
            "_take_2d_multi_generic": [
                "arr",
                "indexer",
                "out",
                "fill_value",
                "mask_info"
            ],
            "_take_nd_generic": [
                "arr",
                "indexer",
                "out",
                "axis",
                "fill_value",
                "mask_info"
            ],
            "_get_take_nd_function": [
                "ndim",
                "arr_dtype",
                "out_dtype",
                "axis",
                "mask_info"
            ],
            "take_nd": [
                "arr",
                "indexer",
                "axis",
                "out",
                "fill_value",
                "mask_info",
                "allow_fill"
            ],
            "take_2d_multi": [
                "arr",
                "indexer",
                "out",
                "fill_value",
                "mask_info",
                "allow_fill"
            ],
            "diff": [
                "arr",
                "n",
                "axis"
            ],
            "_coerce_indexer_dtype": [
                "indexer",
                "categories"
            ],
            "_coerce_to_dtypes": [
                "result",
                "dtypes"
            ],
            "_infer_dtype_from_scalar": [
                "val"
            ],
            "_maybe_cast_scalar": [
                "dtype",
                "value"
            ],
            "_maybe_promote": [
                "dtype",
                "fill_value"
            ],
            "_maybe_upcast_putmask": [
                "result",
                "mask",
                "other",
                "dtype",
                "change"
            ],
            "_maybe_upcast": [
                "values",
                "fill_value",
                "dtype",
                "copy"
            ],
            "_possibly_cast_item": [
                "obj",
                "item",
                "dtype"
            ],
            "_possibly_downcast_to_dtype": [
                "result",
                "dtype"
            ],
            "_lcd_dtypes": [
                "a_dtype",
                "b_dtype"
            ],
            "_fill_zeros": [
                "result",
                "x",
                "y",
                "name",
                "fill"
            ],
            "_interp_wrapper": [
                "f",
                "wrap_dtype",
                "na_override"
            ],
            "pad_1d": [
                "values",
                "limit",
                "mask",
                "dtype"
            ],
            "backfill_1d": [
                "values",
                "limit",
                "mask",
                "dtype"
            ],
            "pad_2d": [
                "values",
                "limit",
                "mask",
                "dtype"
            ],
            "backfill_2d": [
                "values",
                "limit",
                "mask",
                "dtype"
            ],
            "_clean_interp_method": [
                "method",
                "order"
            ],
            "interpolate_1d": [
                "xvalues",
                "yvalues",
                "method",
                "limit",
                "fill_value",
                "bounds_error"
            ],
            "_interpolate_scipy_wrapper": [
                "x",
                "y",
                "new_x",
                "method",
                "fill_value",
                "bounds_error",
                "order"
            ],
            "interpolate_2d": [
                "values",
                "method",
                "axis",
                "limit",
                "fill_value",
                "dtype"
            ],
            "_consensus_name_attr": [
                "objs"
            ],
            "_get_fill_func": [
                "method"
            ],
            "_validate_date_like_dtype": [
                "dtype"
            ],
            "_invalidate_string_dtypes": [
                "dtype_set"
            ],
            "_get_dtype_from_object": [
                "dtype"
            ],
            "_get_info_slice": [
                "obj",
                "indexer"
            ],
            "_maybe_box": [
                "indexer",
                "values",
                "obj",
                "key"
            ],
            "_maybe_box_datetimelike": [
                "value"
            ],
            "_possibly_convert_objects": [
                "values",
                "convert_dates",
                "convert_numeric",
                "convert_timedeltas"
            ],
            "_possibly_castable": [
                "arr"
            ],
            "_possibly_convert_platform": [
                "values"
            ],
            "_possibly_cast_to_datetime": [
                "value",
                "dtype",
                "coerce"
            ],
            "_possibly_infer_to_datetimelike": [
                "value",
                "convert_dates"
            ],
            "_is_bool_indexer": [
                "key"
            ],
            "_default_index": [
                "n"
            ],
            "ensure_float": [
                "arr"
            ],
            "_mut_exclusive": [],
            "_any_none": [],
            "_all_not_none": [],
            "_try_sort": [
                "iterable"
            ],
            "_count_not_none": [],
            "adjoin": [
                "space"
            ],
            "_join_unicode": [
                "lines",
                "sep"
            ],
            "iterpairs": [
                "seq"
            ],
            "split_ranges": [
                "mask"
            ],
            "indent": [
                "string",
                "spaces"
            ],
            "banner": [
                "message"
            ],
            "_long_prod": [
                "vals"
            ],
            "map_indices_py": [
                "arr"
            ],
            "union": [],
            "difference": [
                "a",
                "b"
            ],
            "intersection": [],
            "_asarray_tuplesafe": [
                "values",
                "dtype"
            ],
            "_index_labels_to_array": [
                "labels"
            ],
            "_maybe_make_list": [
                "obj"
            ],
            "is_iterator": [
                "obj"
            ],
            "is_number": [
                "obj"
            ],
            "is_period_arraylike": [
                "arr"
            ],
            "is_datetime_arraylike": [
                "arr"
            ],
            "_coerce_to_dtype": [
                "dtype"
            ],
            "_get_dtype": [
                "arr_or_dtype"
            ],
            "_get_dtype_type": [
                "arr_or_dtype"
            ],
            "_is_any_int_dtype": [
                "arr_or_dtype"
            ],
            "is_integer_dtype": [
                "arr_or_dtype"
            ],
            "_is_int_or_datetime_dtype": [
                "arr_or_dtype"
            ],
            "is_datetime64_dtype": [
                "arr_or_dtype"
            ],
            "is_datetime64_ns_dtype": [
                "arr_or_dtype"
            ],
            "is_timedelta64_dtype": [
                "arr_or_dtype"
            ],
            "is_timedelta64_ns_dtype": [
                "arr_or_dtype"
            ],
            "_is_datetime_or_timedelta_dtype": [
                "arr_or_dtype"
            ],
            "i8_boxer": [
                "arr_or_dtype"
            ],
            "is_numeric_dtype": [
                "arr_or_dtype"
            ],
            "is_float_dtype": [
                "arr_or_dtype"
            ],
            "_is_floating_dtype": [
                "arr_or_dtype"
            ],
            "is_bool_dtype": [
                "arr_or_dtype"
            ],
            "is_categorical_dtype": [
                "arr_or_dtype"
            ],
            "is_complex_dtype": [
                "arr_or_dtype"
            ],
            "is_object_dtype": [
                "arr_or_dtype"
            ],
            "is_re": [
                "obj"
            ],
            "is_re_compilable": [
                "obj"
            ],
            "is_list_like": [
                "arg"
            ],
            "_is_sequence": [
                "x"
            ],
            "_get_callable_name": [
                "obj"
            ],
            "_astype_nansafe": [
                "arr",
                "dtype",
                "copy"
            ],
            "_clean_fill_method": [
                "method"
            ],
            "_all_none": [],
            "_get_handle": [
                "path",
                "mode",
                "encoding",
                "compression"
            ],
            "_concat_compat": [
                "to_concat",
                "axis"
            ],
            "_to_pydatetime": [
                "x"
            ],
            "_where_compat": [
                "mask",
                "arr1",
                "arr2"
            ],
            "sentinel_factory": [],
            "in_interactive_session": [],
            "in_qtconsole": [],
            "in_ipnb": [],
            "in_ipython_frontend": [],
            "_pprint_seq": [
                "seq",
                "_nest_lvl"
            ],
            "_pprint_dict": [
                "seq",
                "_nest_lvl"
            ],
            "pprint_thing": [
                "thing",
                "_nest_lvl",
                "escape_chars",
                "default_escapes",
                "quote_strings"
            ],
            "pprint_thing_encoded": [
                "object",
                "encoding",
                "errors"
            ],
            "console_encode": [
                "object"
            ],
            "load": [
                "path"
            ],
            "save": [
                "obj",
                "path"
            ],
            "_maybe_match_name": [
                "a",
                "b"
            ],
            "PandasError": {},
            "SettingWithCopyError": {},
            "SettingWithCopyWarning": {},
            "AmbiguousIndexError": {},
            "_ABCGeneric": {
                "__instancecheck__": [
                    "cls",
                    "inst"
                ]
            },
            "CategoricalDtypeType": {
                "__init__": [
                    "cls",
                    "name",
                    "bases",
                    "attrs"
                ]
            },
            "CategoricalDtype": {
                "__unicode__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "__bytes__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__hash__": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ]
            },
            "groupby": {
                "__init__": [
                    "self",
                    "seq",
                    "key"
                ]
            },
            "UTF8Recoder": {
                "__init__": [
                    "self",
                    "f",
                    "encoding"
                ],
                "__iter__": [
                    "self"
                ],
                "read": [
                    "self",
                    "bytes"
                ],
                "readline": [
                    "self"
                ],
                "next": [
                    "self"
                ]
            }
        },
        "pandas.core.indexing": {
            "get_indexers_list": [],
            "_length_of_indexer": [
                "indexer",
                "target"
            ],
            "_convert_to_index_sliceable": [
                "obj",
                "key"
            ],
            "_is_index_slice": [
                "obj"
            ],
            "_check_bool_indexer": [
                "ax",
                "key"
            ],
            "_convert_missing_indexer": [
                "indexer"
            ],
            "_convert_from_missing_indexer_tuple": [
                "indexer",
                "axes"
            ],
            "_safe_append_to_index": [
                "index",
                "key"
            ],
            "_maybe_convert_indices": [
                "indices",
                "n"
            ],
            "_maybe_convert_ix": [],
            "_is_nested_tuple": [
                "tup",
                "labels"
            ],
            "_is_null_slice": [
                "obj"
            ],
            "_is_label_like": [
                "key"
            ],
            "_is_list_like": [
                "obj"
            ],
            "_need_slice": [
                "obj"
            ],
            "_maybe_droplevels": [
                "index",
                "key"
            ],
            "_IndexSlice": {
                "__getitem__": [
                    "self",
                    "arg"
                ]
            },
            "IndexingError": {},
            "_NDFrameIndexer": {
                "__init__": [
                    "self",
                    "obj",
                    "name"
                ],
                "__call__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_get_label": [
                    "self",
                    "label",
                    "axis"
                ],
                "_get_loc": [
                    "self",
                    "key",
                    "axis"
                ],
                "_slice": [
                    "self",
                    "obj",
                    "axis",
                    "typ"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "_has_valid_type": [
                    "self",
                    "k",
                    "axis"
                ],
                "_has_valid_tuple": [
                    "self",
                    "key"
                ],
                "_should_validate_iterable": [
                    "self",
                    "axis"
                ],
                "_is_nested_tuple_indexer": [
                    "self",
                    "tup"
                ],
                "_convert_tuple": [
                    "self",
                    "key",
                    "is_setter"
                ],
                "_convert_scalar_indexer": [
                    "self",
                    "key",
                    "axis"
                ],
                "_convert_slice_indexer": [
                    "self",
                    "key",
                    "axis"
                ],
                "_has_valid_setitem_indexer": [
                    "self",
                    "indexer"
                ],
                "_has_valid_positional_setitem_indexer": [
                    "self",
                    "indexer"
                ],
                "_setitem_with_indexer": [
                    "self",
                    "indexer",
                    "value"
                ],
                "_align_series": [
                    "self",
                    "indexer",
                    "ser"
                ],
                "_align_frame": [
                    "self",
                    "indexer",
                    "df"
                ],
                "_align_panel": [
                    "self",
                    "indexer",
                    "df"
                ],
                "_getitem_tuple": [
                    "self",
                    "tup"
                ],
                "_multi_take_opportunity": [
                    "self",
                    "tup"
                ],
                "_multi_take": [
                    "self",
                    "tup"
                ],
                "_convert_for_reindex": [
                    "self",
                    "key",
                    "axis"
                ],
                "_handle_lowerdim_multi_index_axis0": [
                    "self",
                    "tup"
                ],
                "_getitem_lowerdim": [
                    "self",
                    "tup"
                ],
                "_getitem_nested_tuple": [
                    "self",
                    "tup"
                ],
                "_getitem_axis": [
                    "self",
                    "key",
                    "axis"
                ],
                "_getitem_iterable": [
                    "self",
                    "key",
                    "axis"
                ],
                "_convert_to_indexer": [
                    "self",
                    "obj",
                    "axis",
                    "is_setter"
                ],
                "_tuplify": [
                    "self",
                    "loc"
                ],
                "_get_slice_axis": [
                    "self",
                    "slice_obj",
                    "axis"
                ]
            },
            "_IXIndexer": {
                "_has_valid_type": [
                    "self",
                    "key",
                    "axis"
                ]
            },
            "_LocationIndexer": {
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_getitem_axis": [
                    "self",
                    "key",
                    "axis"
                ],
                "_getbool_axis": [
                    "self",
                    "key",
                    "axis"
                ],
                "_get_slice_axis": [
                    "self",
                    "slice_obj",
                    "axis"
                ]
            },
            "_LocIndexer": {
                "_has_valid_type": [
                    "self",
                    "key",
                    "axis"
                ],
                "_getitem_axis": [
                    "self",
                    "key",
                    "axis"
                ]
            },
            "_iLocIndexer": {
                "_has_valid_type": [
                    "self",
                    "key",
                    "axis"
                ],
                "_has_valid_setitem_indexer": [
                    "self",
                    "indexer"
                ],
                "_is_valid_integer": [
                    "self",
                    "key",
                    "axis"
                ],
                "_is_valid_list_like": [
                    "self",
                    "key",
                    "axis"
                ],
                "_getitem_tuple": [
                    "self",
                    "tup"
                ],
                "_get_slice_axis": [
                    "self",
                    "slice_obj",
                    "axis"
                ],
                "_getitem_axis": [
                    "self",
                    "key",
                    "axis"
                ],
                "_convert_to_indexer": [
                    "self",
                    "obj",
                    "axis",
                    "is_setter"
                ]
            },
            "_ScalarAccessIndexer": {
                "_convert_key": [
                    "self",
                    "key",
                    "is_setter"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ]
            },
            "_AtIndexer": {
                "_convert_key": [
                    "self",
                    "key",
                    "is_setter"
                ]
            },
            "_iAtIndexer": {
                "_has_valid_setitem_indexer": [
                    "self",
                    "indexer"
                ],
                "_convert_key": [
                    "self",
                    "key",
                    "is_setter"
                ]
            }
        },
        "pandas.core.panel4d": {
            "panel4d_init": [
                "self",
                "data",
                "labels",
                "items",
                "major_axis",
                "minor_axis",
                "copy",
                "dtype"
            ]
        },
        "pandas.core.datetools": {
            "_resolve_offset": [
                "freq",
                "kwds"
            ]
        },
        "pandas.core.ops": {
            "_create_methods": [
                "arith_method",
                "radd_func",
                "comp_method",
                "bool_method",
                "use_numexpr",
                "special",
                "default_axis"
            ],
            "add_methods": [
                "cls",
                "new_methods",
                "force",
                "select",
                "exclude"
            ],
            "add_special_arithmetic_methods": [
                "cls",
                "arith_method",
                "radd_func",
                "comp_method",
                "bool_method",
                "use_numexpr",
                "force",
                "select",
                "exclude"
            ],
            "add_flex_arithmetic_methods": [
                "cls",
                "flex_arith_method",
                "radd_func",
                "flex_comp_method",
                "flex_bool_method",
                "use_numexpr",
                "force",
                "select",
                "exclude"
            ],
            "_arith_method_SERIES": [
                "op",
                "name",
                "str_rep",
                "fill_zeros",
                "default_axis"
            ],
            "_comp_method_SERIES": [
                "op",
                "name",
                "str_rep",
                "masker"
            ],
            "_bool_method_SERIES": [
                "op",
                "name",
                "str_rep"
            ],
            "_radd_compat": [
                "left",
                "right"
            ],
            "_flex_method_SERIES": [
                "op",
                "name",
                "str_rep",
                "default_axis",
                "fill_zeros"
            ],
            "_arith_method_FRAME": [
                "op",
                "name",
                "str_rep",
                "default_axis",
                "fill_zeros"
            ],
            "_flex_comp_method_FRAME": [
                "op",
                "name",
                "str_rep",
                "default_axis",
                "masker"
            ],
            "_comp_method_FRAME": [
                "func",
                "name",
                "str_rep",
                "masker"
            ],
            "_arith_method_PANEL": [
                "op",
                "name",
                "str_rep",
                "fill_zeros",
                "default_axis"
            ],
            "_comp_method_PANEL": [
                "op",
                "name",
                "str_rep",
                "masker"
            ],
            "_TimeOp": {
                "__init__": [
                    "self",
                    "left",
                    "right",
                    "name"
                ],
                "_validate": [
                    "self"
                ],
                "_convert_to_array": [
                    "self",
                    "values",
                    "name",
                    "other"
                ],
                "_convert_for_datetime": [
                    "self",
                    "lvalues",
                    "rvalues"
                ],
                "maybe_convert_for_time_op": [
                    "cls",
                    "left",
                    "right",
                    "name"
                ]
            }
        },
        "pandas.core.strings": {
            "_get_array_list": [
                "arr",
                "others"
            ],
            "str_cat": [
                "arr",
                "others",
                "sep",
                "na_rep"
            ],
            "_length_check": [
                "others"
            ],
            "_na_map": [
                "f",
                "arr",
                "na_result",
                "dtype"
            ],
            "_map": [
                "f",
                "arr",
                "na_mask",
                "na_value",
                "dtype"
            ],
            "str_title": [
                "arr"
            ],
            "str_count": [
                "arr",
                "pat",
                "flags"
            ],
            "str_contains": [
                "arr",
                "pat",
                "case",
                "flags",
                "na",
                "regex"
            ],
            "str_startswith": [
                "arr",
                "pat",
                "na"
            ],
            "str_endswith": [
                "arr",
                "pat",
                "na"
            ],
            "str_lower": [
                "arr"
            ],
            "str_upper": [
                "arr"
            ],
            "str_replace": [
                "arr",
                "pat",
                "repl",
                "n",
                "case",
                "flags"
            ],
            "str_repeat": [
                "arr",
                "repeats"
            ],
            "str_match": [
                "arr",
                "pat",
                "case",
                "flags",
                "na",
                "as_indexer"
            ],
            "_get_single_group_name": [
                "rx"
            ],
            "str_extract": [
                "arr",
                "pat",
                "flags"
            ],
            "str_get_dummies": [
                "arr",
                "sep"
            ],
            "str_join": [
                "arr",
                "sep"
            ],
            "str_len": [
                "arr"
            ],
            "str_findall": [
                "arr",
                "pat",
                "flags"
            ],
            "str_pad": [
                "arr",
                "width",
                "side"
            ],
            "str_center": [
                "arr",
                "width"
            ],
            "str_split": [
                "arr",
                "pat",
                "n",
                "return_type"
            ],
            "str_slice": [
                "arr",
                "start",
                "stop",
                "step"
            ],
            "str_slice_replace": [
                "arr",
                "start",
                "stop",
                "repl"
            ],
            "str_strip": [
                "arr",
                "to_strip"
            ],
            "str_lstrip": [
                "arr",
                "to_strip"
            ],
            "str_rstrip": [
                "arr",
                "to_strip"
            ],
            "str_wrap": [
                "arr",
                "width"
            ],
            "str_get": [
                "arr",
                "i"
            ],
            "str_decode": [
                "arr",
                "encoding",
                "errors"
            ],
            "str_encode": [
                "arr",
                "encoding",
                "errors"
            ],
            "_noarg_wrapper": [
                "f"
            ],
            "_pat_wrapper": [
                "f",
                "flags",
                "na"
            ],
            "copy": [
                "source"
            ],
            "StringMethods": {
                "__init__": [
                    "self",
                    "series"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__iter__": [
                    "self"
                ],
                "_wrap_result": [
                    "self",
                    "result"
                ],
                "cat": [
                    "self",
                    "others",
                    "sep",
                    "na_rep"
                ],
                "split": [
                    "self",
                    "pat",
                    "n",
                    "return_type"
                ],
                "get": [
                    "self",
                    "i"
                ],
                "join": [
                    "self",
                    "sep"
                ],
                "contains": [
                    "self",
                    "pat",
                    "case",
                    "flags",
                    "na",
                    "regex"
                ],
                "match": [
                    "self",
                    "pat",
                    "case",
                    "flags",
                    "na",
                    "as_indexer"
                ],
                "replace": [
                    "self",
                    "pat",
                    "repl",
                    "n",
                    "case",
                    "flags"
                ],
                "repeat": [
                    "self",
                    "repeats"
                ],
                "pad": [
                    "self",
                    "width",
                    "side"
                ],
                "center": [
                    "self",
                    "width"
                ],
                "slice": [
                    "self",
                    "start",
                    "stop",
                    "step"
                ],
                "slice_replace": [
                    "self",
                    "i",
                    "j"
                ],
                "decode": [
                    "self",
                    "encoding",
                    "errors"
                ],
                "encode": [
                    "self",
                    "encoding",
                    "errors"
                ],
                "strip": [
                    "self",
                    "to_strip"
                ],
                "lstrip": [
                    "self",
                    "to_strip"
                ],
                "rstrip": [
                    "self",
                    "to_strip"
                ],
                "wrap": [
                    "self",
                    "width"
                ],
                "get_dummies": [
                    "self",
                    "sep"
                ]
            }
        },
        "pandas.core.frame": {
            "_arrays_to_mgr": [
                "arrays",
                "arr_names",
                "index",
                "columns",
                "dtype"
            ],
            "extract_index": [
                "data"
            ],
            "_prep_ndarray": [
                "values",
                "copy"
            ],
            "_to_arrays": [
                "data",
                "columns",
                "coerce_float",
                "dtype"
            ],
            "_masked_rec_array_to_mgr": [
                "data",
                "index",
                "columns",
                "dtype",
                "copy"
            ],
            "_reorder_arrays": [
                "arrays",
                "arr_columns",
                "columns"
            ],
            "_list_to_arrays": [
                "data",
                "columns",
                "coerce_float",
                "dtype"
            ],
            "_list_of_series_to_arrays": [
                "data",
                "columns",
                "coerce_float",
                "dtype"
            ],
            "_list_of_dict_to_arrays": [
                "data",
                "columns",
                "coerce_float",
                "dtype"
            ],
            "_convert_object_array": [
                "content",
                "columns",
                "coerce_float",
                "dtype"
            ],
            "_get_names_from_index": [
                "data"
            ],
            "_homogenize": [
                "data",
                "index",
                "dtype"
            ],
            "_from_nested_dict": [
                "data"
            ],
            "_put_str": [
                "s",
                "space"
            ],
            "boxplot": [
                "self",
                "column",
                "by",
                "ax",
                "fontsize",
                "rot",
                "grid",
                "figsize",
                "layout",
                "return_type"
            ],
            "DataFrame": {
                "_constructor": [
                    "self"
                ],
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype",
                    "copy"
                ],
                "_init_dict": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype"
                ],
                "_init_ndarray": [
                    "self",
                    "values",
                    "index",
                    "columns",
                    "dtype",
                    "copy"
                ],
                "axes": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "_repr_fits_vertical_": [
                    "self"
                ],
                "_repr_fits_horizontal_": [
                    "self",
                    "ignore_width"
                ],
                "_info_repr": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_repr_html_": [
                    "self"
                ],
                "iteritems": [
                    "self"
                ],
                "iterrows": [
                    "self"
                ],
                "itertuples": [
                    "self",
                    "index"
                ],
                "__len__": [
                    "self"
                ],
                "dot": [
                    "self",
                    "other"
                ],
                "from_dict": [
                    "cls",
                    "data",
                    "orient",
                    "dtype"
                ],
                "to_dict": [
                    "self",
                    "orient"
                ],
                "to_gbq": [
                    "self",
                    "destination_table",
                    "project_id",
                    "chunksize",
                    "verbose",
                    "reauth"
                ],
                "from_records": [
                    "cls",
                    "data",
                    "index",
                    "exclude",
                    "columns",
                    "coerce_float",
                    "nrows"
                ],
                "to_records": [
                    "self",
                    "index",
                    "convert_datetime64"
                ],
                "from_items": [
                    "cls",
                    "items",
                    "columns",
                    "orient"
                ],
                "_from_arrays": [
                    "cls",
                    "arrays",
                    "columns",
                    "index",
                    "dtype"
                ],
                "from_csv": [
                    "cls",
                    "path",
                    "header",
                    "sep",
                    "index_col",
                    "parse_dates",
                    "encoding",
                    "tupleize_cols",
                    "infer_datetime_format"
                ],
                "to_sparse": [
                    "self",
                    "fill_value",
                    "kind"
                ],
                "to_panel": [
                    "self"
                ],
                "to_csv": [
                    "self",
                    "path_or_buf",
                    "sep",
                    "na_rep",
                    "float_format",
                    "columns",
                    "header",
                    "index",
                    "index_label",
                    "mode",
                    "encoding",
                    "quoting",
                    "quotechar",
                    "line_terminator",
                    "chunksize",
                    "tupleize_cols",
                    "date_format",
                    "doublequote",
                    "escapechar"
                ],
                "to_excel": [
                    "self",
                    "excel_writer",
                    "sheet_name",
                    "na_rep",
                    "float_format",
                    "columns",
                    "header",
                    "index",
                    "index_label",
                    "startrow",
                    "startcol",
                    "engine",
                    "merge_cells",
                    "encoding",
                    "inf_rep"
                ],
                "to_stata": [
                    "self",
                    "fname",
                    "convert_dates",
                    "write_index",
                    "encoding",
                    "byteorder",
                    "time_stamp",
                    "data_label"
                ],
                "to_string": [
                    "self",
                    "buf",
                    "columns",
                    "col_space",
                    "colSpace",
                    "header",
                    "index",
                    "na_rep",
                    "formatters",
                    "float_format",
                    "sparsify",
                    "index_names",
                    "justify",
                    "line_width",
                    "max_rows",
                    "max_cols",
                    "show_dimensions"
                ],
                "to_html": [
                    "self",
                    "buf",
                    "columns",
                    "col_space",
                    "colSpace",
                    "header",
                    "index",
                    "na_rep",
                    "formatters",
                    "float_format",
                    "sparsify",
                    "index_names",
                    "justify",
                    "bold_rows",
                    "classes",
                    "escape",
                    "max_rows",
                    "max_cols",
                    "show_dimensions"
                ],
                "to_latex": [
                    "self",
                    "buf",
                    "columns",
                    "col_space",
                    "colSpace",
                    "header",
                    "index",
                    "na_rep",
                    "formatters",
                    "float_format",
                    "sparsify",
                    "index_names",
                    "bold_rows",
                    "longtable",
                    "escape"
                ],
                "info": [
                    "self",
                    "verbose",
                    "buf",
                    "max_cols",
                    "memory_usage",
                    "null_counts"
                ],
                "memory_usage": [
                    "self",
                    "index"
                ],
                "transpose": [
                    "self"
                ],
                "_unpickle_frame_compat": [
                    "self",
                    "state"
                ],
                "_unpickle_matrix_compat": [
                    "self",
                    "state"
                ],
                "get_value": [
                    "self",
                    "index",
                    "col",
                    "takeable"
                ],
                "set_value": [
                    "self",
                    "index",
                    "col",
                    "value",
                    "takeable"
                ],
                "irow": [
                    "self",
                    "i",
                    "copy"
                ],
                "icol": [
                    "self",
                    "i"
                ],
                "_ixs": [
                    "self",
                    "i",
                    "axis"
                ],
                "iget_value": [
                    "self",
                    "i",
                    "j"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_getitem_column": [
                    "self",
                    "key"
                ],
                "_getitem_slice": [
                    "self",
                    "key"
                ],
                "_getitem_array": [
                    "self",
                    "key"
                ],
                "_getitem_multilevel": [
                    "self",
                    "key"
                ],
                "_getitem_frame": [
                    "self",
                    "key"
                ],
                "query": [
                    "self",
                    "expr"
                ],
                "eval": [
                    "self",
                    "expr"
                ],
                "select_dtypes": [
                    "self",
                    "include",
                    "exclude"
                ],
                "_box_item_values": [
                    "self",
                    "key",
                    "values"
                ],
                "_box_col_values": [
                    "self",
                    "values",
                    "items"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "_setitem_slice": [
                    "self",
                    "key",
                    "value"
                ],
                "_setitem_array": [
                    "self",
                    "key",
                    "value"
                ],
                "_setitem_frame": [
                    "self",
                    "key",
                    "value"
                ],
                "_ensure_valid_index": [
                    "self",
                    "value"
                ],
                "_set_item": [
                    "self",
                    "key",
                    "value"
                ],
                "insert": [
                    "self",
                    "loc",
                    "column",
                    "value",
                    "allow_duplicates"
                ],
                "_sanitize_column": [
                    "self",
                    "key",
                    "value"
                ],
                "_series": [
                    "self"
                ],
                "lookup": [
                    "self",
                    "row_labels",
                    "col_labels"
                ],
                "_reindex_axes": [
                    "self",
                    "axes",
                    "level",
                    "limit",
                    "method",
                    "fill_value",
                    "copy"
                ],
                "_reindex_index": [
                    "self",
                    "new_index",
                    "method",
                    "copy",
                    "level",
                    "fill_value",
                    "limit"
                ],
                "_reindex_columns": [
                    "self",
                    "new_columns",
                    "copy",
                    "level",
                    "fill_value",
                    "limit"
                ],
                "_reindex_multi": [
                    "self",
                    "axes",
                    "copy",
                    "fill_value"
                ],
                "reindex": [
                    "self",
                    "index",
                    "columns"
                ],
                "reindex_axis": [
                    "self",
                    "labels",
                    "axis",
                    "method",
                    "level",
                    "copy",
                    "limit",
                    "fill_value"
                ],
                "rename": [
                    "self",
                    "index",
                    "columns"
                ],
                "set_index": [
                    "self",
                    "keys",
                    "drop",
                    "append",
                    "inplace",
                    "verify_integrity"
                ],
                "reset_index": [
                    "self",
                    "level",
                    "drop",
                    "inplace",
                    "col_level",
                    "col_fill"
                ],
                "dropna": [
                    "self",
                    "axis",
                    "how",
                    "thresh",
                    "subset",
                    "inplace"
                ],
                "drop_duplicates": [
                    "self",
                    "subset",
                    "take_last",
                    "inplace"
                ],
                "duplicated": [
                    "self",
                    "subset",
                    "take_last"
                ],
                "sort": [
                    "self",
                    "columns",
                    "axis",
                    "ascending",
                    "inplace",
                    "kind",
                    "na_position"
                ],
                "sort_index": [
                    "self",
                    "axis",
                    "by",
                    "ascending",
                    "inplace",
                    "kind",
                    "na_position"
                ],
                "sortlevel": [
                    "self",
                    "level",
                    "axis",
                    "ascending",
                    "inplace",
                    "sort_remaining"
                ],
                "swaplevel": [
                    "self",
                    "i",
                    "j",
                    "axis"
                ],
                "reorder_levels": [
                    "self",
                    "order",
                    "axis"
                ],
                "_combine_frame": [
                    "self",
                    "other",
                    "func",
                    "fill_value",
                    "level"
                ],
                "_combine_series": [
                    "self",
                    "other",
                    "func",
                    "fill_value",
                    "axis",
                    "level"
                ],
                "_combine_series_infer": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "_combine_match_index": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "_combine_match_columns": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "_combine_const": [
                    "self",
                    "other",
                    "func",
                    "raise_on_error"
                ],
                "_compare_frame_evaluate": [
                    "self",
                    "other",
                    "func",
                    "str_rep"
                ],
                "_compare_frame": [
                    "self",
                    "other",
                    "func",
                    "str_rep"
                ],
                "_flex_compare_frame": [
                    "self",
                    "other",
                    "func",
                    "str_rep",
                    "level"
                ],
                "combine": [
                    "self",
                    "other",
                    "func",
                    "fill_value",
                    "overwrite"
                ],
                "combine_first": [
                    "self",
                    "other"
                ],
                "update": [
                    "self",
                    "other",
                    "join",
                    "overwrite",
                    "filter_func",
                    "raise_conflict"
                ],
                "first_valid_index": [
                    "self"
                ],
                "last_valid_index": [
                    "self"
                ],
                "pivot": [
                    "self",
                    "index",
                    "columns",
                    "values"
                ],
                "stack": [
                    "self",
                    "level",
                    "dropna"
                ],
                "unstack": [
                    "self",
                    "level"
                ],
                "diff": [
                    "self",
                    "periods"
                ],
                "apply": [
                    "self",
                    "func",
                    "axis",
                    "broadcast",
                    "raw",
                    "reduce",
                    "args"
                ],
                "_apply_empty_result": [
                    "self",
                    "func",
                    "axis",
                    "reduce"
                ],
                "_apply_raw": [
                    "self",
                    "func",
                    "axis"
                ],
                "_apply_standard": [
                    "self",
                    "func",
                    "axis",
                    "ignore_failures",
                    "reduce"
                ],
                "_apply_broadcast": [
                    "self",
                    "func",
                    "axis"
                ],
                "applymap": [
                    "self",
                    "func"
                ],
                "append": [
                    "self",
                    "other",
                    "ignore_index",
                    "verify_integrity"
                ],
                "join": [
                    "self",
                    "other",
                    "on",
                    "how",
                    "lsuffix",
                    "rsuffix",
                    "sort"
                ],
                "_join_compat": [
                    "self",
                    "other",
                    "on",
                    "how",
                    "lsuffix",
                    "rsuffix",
                    "sort"
                ],
                "merge": [
                    "self",
                    "right",
                    "how",
                    "on",
                    "left_on",
                    "right_on",
                    "left_index",
                    "right_index",
                    "sort",
                    "suffixes",
                    "copy"
                ],
                "corr": [
                    "self",
                    "method",
                    "min_periods"
                ],
                "cov": [
                    "self",
                    "min_periods"
                ],
                "corrwith": [
                    "self",
                    "other",
                    "axis",
                    "drop"
                ],
                "count": [
                    "self",
                    "axis",
                    "level",
                    "numeric_only"
                ],
                "_count_level": [
                    "self",
                    "level",
                    "axis",
                    "numeric_only"
                ],
                "any": [
                    "self",
                    "axis",
                    "bool_only",
                    "skipna",
                    "level"
                ],
                "all": [
                    "self",
                    "axis",
                    "bool_only",
                    "skipna",
                    "level"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "name",
                    "axis",
                    "skipna",
                    "numeric_only",
                    "filter_type"
                ],
                "idxmin": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "idxmax": [
                    "self",
                    "axis",
                    "skipna"
                ],
                "_get_agg_axis": [
                    "self",
                    "axis_num"
                ],
                "mode": [
                    "self",
                    "axis",
                    "numeric_only"
                ],
                "quantile": [
                    "self",
                    "q",
                    "axis",
                    "numeric_only"
                ],
                "rank": [
                    "self",
                    "axis",
                    "numeric_only",
                    "method",
                    "na_option",
                    "ascending",
                    "pct"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how",
                    "axis",
                    "copy"
                ],
                "to_period": [
                    "self",
                    "freq",
                    "axis",
                    "copy"
                ],
                "isin": [
                    "self",
                    "values"
                ],
                "combineAdd": [
                    "self",
                    "other"
                ],
                "combineMult": [
                    "self",
                    "other"
                ]
            }
        },
        "pandas.core.config": {
            "_get_single_key": [
                "pat",
                "silent"
            ],
            "_get_option": [
                "pat",
                "silent"
            ],
            "_set_option": [],
            "_describe_option": [
                "pat",
                "_print_desc"
            ],
            "_reset_option": [
                "pat",
                "silent"
            ],
            "get_default_val": [
                "pat"
            ],
            "register_option": [
                "key",
                "defval",
                "doc",
                "validator",
                "cb"
            ],
            "deprecate_option": [
                "key",
                "msg",
                "rkey",
                "removal_ver"
            ],
            "_select_options": [
                "pat"
            ],
            "_get_root": [
                "key"
            ],
            "_is_deprecated": [
                "key"
            ],
            "_get_deprecated_option": [
                "key"
            ],
            "_get_registered_option": [
                "key"
            ],
            "_translate_key": [
                "key"
            ],
            "_warn_if_deprecated": [
                "key"
            ],
            "_build_option_description": [
                "k"
            ],
            "pp_options_list": [
                "keys",
                "width",
                "_print"
            ],
            "config_prefix": [
                "prefix"
            ],
            "is_type_factory": [
                "_type"
            ],
            "is_instance_factory": [
                "_type"
            ],
            "is_one_of_factory": [
                "legal_values"
            ],
            "OptionError": {},
            "DictWrapper": {
                "__init__": [
                    "self",
                    "d",
                    "prefix"
                ],
                "__setattr__": [
                    "self",
                    "key",
                    "val"
                ],
                "__getattr__": [
                    "self",
                    "key"
                ],
                "__dir__": [
                    "self"
                ]
            },
            "CallableDynamicDoc": {
                "__init__": [
                    "self",
                    "func",
                    "doc_tmpl"
                ],
                "__call__": [
                    "self"
                ],
                "__doc__": [
                    "self"
                ]
            },
            "option_context": {
                "__init__": [
                    "self"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self"
                ]
            }
        },
        "pandas.core.groupby": {
            "_groupby_function": [
                "name",
                "alias",
                "npfunc",
                "numeric_only",
                "_convert"
            ],
            "_first_compat": [
                "x",
                "axis"
            ],
            "_last_compat": [
                "x",
                "axis"
            ],
            "_count_compat": [
                "x",
                "axis"
            ],
            "groupby": [
                "obj",
                "by"
            ],
            "_get_axes": [
                "group"
            ],
            "_is_indexed_like": [
                "obj",
                "axes"
            ],
            "generate_bins_generic": [
                "values",
                "binner",
                "closed"
            ],
            "_get_grouper": [
                "obj",
                "key",
                "axis",
                "level",
                "sort"
            ],
            "_is_label_like": [
                "val"
            ],
            "_convert_grouper": [
                "axis",
                "grouper"
            ],
            "_whitelist_method_generator": [
                "klass",
                "whitelist"
            ],
            "get_splitter": [
                "data"
            ],
            "get_group_index": [
                "label_list",
                "shape"
            ],
            "_int64_overflow_possible": [
                "shape"
            ],
            "decons_group_index": [
                "comp_labels",
                "shape"
            ],
            "_indexer_from_factorized": [
                "labels",
                "shape",
                "compress"
            ],
            "_lexsort_indexer": [
                "keys",
                "orders",
                "na_position"
            ],
            "_nargsort": [
                "items",
                "kind",
                "ascending",
                "na_position"
            ],
            "_get_indices_dict": [
                "label_list",
                "keys"
            ],
            "_get_group_index_sorter": [
                "group_index",
                "ngroups"
            ],
            "_compress_group_index": [
                "group_index",
                "sort"
            ],
            "_reorder_by_uniques": [
                "uniques",
                "labels"
            ],
            "_intercept_function": [
                "func"
            ],
            "_intercept_cython": [
                "func"
            ],
            "_groupby_indices": [
                "values"
            ],
            "numpy_groupby": [
                "data",
                "labels",
                "axis"
            ],
            "GroupByError": {},
            "DataError": {},
            "SpecificationError": {},
            "Grouper": {
                "__new__": [
                    "cls"
                ],
                "__init__": [
                    "self",
                    "key",
                    "level",
                    "freq",
                    "axis",
                    "sort"
                ],
                "ax": [
                    "self"
                ],
                "_get_grouper": [
                    "self",
                    "obj"
                ],
                "_set_grouper": [
                    "self",
                    "obj",
                    "sort"
                ],
                "_get_binner_for_grouping": [
                    "self",
                    "obj"
                ],
                "groups": [
                    "self"
                ]
            },
            "GroupBy": {
                "__init__": [
                    "self",
                    "obj",
                    "keys",
                    "axis",
                    "level",
                    "grouper",
                    "exclusions",
                    "selection",
                    "as_index",
                    "sort",
                    "group_keys",
                    "squeeze"
                ],
                "__len__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "groups": [
                    "self"
                ],
                "ngroups": [
                    "self"
                ],
                "indices": [
                    "self"
                ],
                "_get_index": [
                    "self",
                    "name"
                ],
                "name": [
                    "self"
                ],
                "_selection_list": [
                    "self"
                ],
                "_selected_obj": [
                    "self"
                ],
                "_set_selection_from_grouper": [
                    "self"
                ],
                "_set_result_index_ordered": [
                    "self",
                    "result"
                ],
                "_local_dir": [
                    "self"
                ],
                "__getattr__": [
                    "self",
                    "attr"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_make_wrapper": [
                    "self",
                    "name"
                ],
                "get_group": [
                    "self",
                    "name",
                    "obj"
                ],
                "__iter__": [
                    "self"
                ],
                "apply": [
                    "self",
                    "func"
                ],
                "_python_apply_general": [
                    "self",
                    "f"
                ],
                "aggregate": [
                    "self",
                    "func"
                ],
                "agg": [
                    "self",
                    "func"
                ],
                "_iterate_slices": [
                    "self"
                ],
                "transform": [
                    "self",
                    "func"
                ],
                "mean": [
                    "self"
                ],
                "median": [
                    "self"
                ],
                "std": [
                    "self",
                    "ddof"
                ],
                "var": [
                    "self",
                    "ddof"
                ],
                "sem": [
                    "self",
                    "ddof"
                ],
                "size": [
                    "self"
                ],
                "count": [
                    "self",
                    "axis"
                ],
                "ohlc": [
                    "self"
                ],
                "nth": [
                    "self",
                    "n",
                    "dropna"
                ],
                "cumcount": [
                    "self"
                ],
                "head": [
                    "self",
                    "n"
                ],
                "tail": [
                    "self",
                    "n"
                ],
                "_cumcount_array": [
                    "self",
                    "arr"
                ],
                "_index_with_as_index": [
                    "self",
                    "b"
                ],
                "_try_cast": [
                    "self",
                    "result",
                    "obj"
                ],
                "_cython_agg_general": [
                    "self",
                    "how",
                    "numeric_only"
                ],
                "_python_agg_general": [
                    "self",
                    "func"
                ],
                "_wrap_applied_output": [
                    "self"
                ],
                "_concat_objects": [
                    "self",
                    "keys",
                    "values",
                    "not_indexed_same"
                ],
                "_apply_filter": [
                    "self",
                    "indices",
                    "dropna"
                ]
            },
            "BaseGrouper": {
                "__init__": [
                    "self",
                    "axis",
                    "groupings",
                    "sort",
                    "group_keys"
                ],
                "shape": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "nkeys": [
                    "self"
                ],
                "get_iterator": [
                    "self",
                    "data",
                    "axis"
                ],
                "_get_splitter": [
                    "self",
                    "data",
                    "axis"
                ],
                "_get_group_keys": [
                    "self"
                ],
                "apply": [
                    "self",
                    "f",
                    "data",
                    "axis"
                ],
                "indices": [
                    "self"
                ],
                "labels": [
                    "self"
                ],
                "levels": [
                    "self"
                ],
                "names": [
                    "self"
                ],
                "size": [
                    "self"
                ],
                "_max_groupsize": [
                    "self"
                ],
                "groups": [
                    "self"
                ],
                "is_monotonic": [
                    "self"
                ],
                "group_info": [
                    "self"
                ],
                "_get_compressed_labels": [
                    "self"
                ],
                "_overflow_possible": [
                    "self"
                ],
                "ngroups": [
                    "self"
                ],
                "result_index": [
                    "self"
                ],
                "get_group_levels": [
                    "self"
                ],
                "_get_aggregate_function": [
                    "self",
                    "how",
                    "values"
                ],
                "aggregate": [
                    "self",
                    "values",
                    "how",
                    "axis"
                ],
                "_aggregate": [
                    "self",
                    "result",
                    "counts",
                    "values",
                    "how",
                    "is_numeric"
                ],
                "agg_series": [
                    "self",
                    "obj",
                    "func"
                ],
                "_aggregate_series_fast": [
                    "self",
                    "obj",
                    "func"
                ],
                "_aggregate_series_pure_python": [
                    "self",
                    "obj",
                    "func"
                ]
            },
            "BinGrouper": {
                "__init__": [
                    "self",
                    "bins",
                    "binlabels",
                    "filter_empty"
                ],
                "groups": [
                    "self"
                ],
                "nkeys": [
                    "self"
                ],
                "get_iterator": [
                    "self",
                    "data",
                    "axis"
                ],
                "apply": [
                    "self",
                    "f",
                    "data",
                    "axis"
                ],
                "indices": [
                    "self"
                ],
                "group_info": [
                    "self"
                ],
                "ngroups": [
                    "self"
                ],
                "result_index": [
                    "self"
                ],
                "levels": [
                    "self"
                ],
                "names": [
                    "self"
                ],
                "groupings": [
                    "self"
                ],
                "size": [
                    "self"
                ],
                "_aggregate": [
                    "self",
                    "result",
                    "counts",
                    "values",
                    "how",
                    "is_numeric"
                ],
                "agg_series": [
                    "self",
                    "obj",
                    "func"
                ]
            },
            "Grouping": {
                "__init__": [
                    "self",
                    "index",
                    "grouper",
                    "obj",
                    "name",
                    "level",
                    "sort",
                    "in_axis"
                ],
                "__repr__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "ngroups": [
                    "self"
                ],
                "indices": [
                    "self"
                ],
                "labels": [
                    "self"
                ],
                "group_index": [
                    "self"
                ],
                "_make_labels": [
                    "self"
                ],
                "groups": [
                    "self"
                ]
            },
            "SeriesGroupBy": {
                "aggregate": [
                    "self",
                    "func_or_funcs"
                ],
                "_aggregate_multiple_funcs": [
                    "self",
                    "arg"
                ],
                "_wrap_aggregated_output": [
                    "self",
                    "output",
                    "names"
                ],
                "_wrap_applied_output": [
                    "self",
                    "keys",
                    "values",
                    "not_indexed_same"
                ],
                "_aggregate_named": [
                    "self",
                    "func"
                ],
                "transform": [
                    "self",
                    "func"
                ],
                "_transform_fast": [
                    "self",
                    "func"
                ],
                "filter": [
                    "self",
                    "func",
                    "dropna"
                ],
                "_apply_to_column_groupbys": [
                    "self",
                    "func"
                ]
            },
            "NDFrameGroupBy": {
                "_iterate_slices": [
                    "self"
                ],
                "_cython_agg_general": [
                    "self",
                    "how",
                    "numeric_only"
                ],
                "_wrap_agged_blocks": [
                    "self",
                    "items",
                    "blocks"
                ],
                "_cython_agg_blocks": [
                    "self",
                    "how",
                    "numeric_only"
                ],
                "_get_data_to_aggregate": [
                    "self"
                ],
                "_post_process_cython_aggregate": [
                    "self",
                    "obj"
                ],
                "_obj_with_exclusions": [
                    "self"
                ],
                "aggregate": [
                    "self",
                    "arg"
                ],
                "_aggregate_multiple_funcs": [
                    "self",
                    "arg"
                ],
                "_aggregate_generic": [
                    "self",
                    "func"
                ],
                "_wrap_aggregated_output": [
                    "self",
                    "output",
                    "names"
                ],
                "_aggregate_item_by_item": [
                    "self",
                    "func"
                ],
                "_decide_output_index": [
                    "self",
                    "output",
                    "labels"
                ],
                "_wrap_applied_output": [
                    "self",
                    "keys",
                    "values",
                    "not_indexed_same"
                ],
                "_transform_general": [
                    "self",
                    "func"
                ],
                "transform": [
                    "self",
                    "func"
                ],
                "_define_paths": [
                    "self",
                    "func"
                ],
                "_choose_path": [
                    "self",
                    "fast_path",
                    "slow_path",
                    "group"
                ],
                "_transform_item_by_item": [
                    "self",
                    "obj",
                    "wrapper"
                ],
                "filter": [
                    "self",
                    "func",
                    "dropna"
                ]
            },
            "DataFrameGroupBy": {
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_wrap_generic_output": [
                    "self",
                    "result",
                    "obj"
                ],
                "_get_data_to_aggregate": [
                    "self"
                ],
                "_insert_inaxis_grouper_inplace": [
                    "self",
                    "result"
                ],
                "_wrap_aggregated_output": [
                    "self",
                    "output",
                    "names"
                ],
                "_wrap_agged_blocks": [
                    "self",
                    "items",
                    "blocks"
                ],
                "_reindex_output": [
                    "self",
                    "result"
                ],
                "_iterate_column_groupbys": [
                    "self"
                ],
                "_apply_to_column_groupbys": [
                    "self",
                    "func"
                ]
            },
            "PanelGroupBy": {
                "_iterate_slices": [
                    "self"
                ],
                "aggregate": [
                    "self",
                    "arg"
                ],
                "_wrap_generic_output": [
                    "self",
                    "result",
                    "obj"
                ],
                "_aggregate_item_by_item": [
                    "self",
                    "func"
                ],
                "_wrap_aggregated_output": [
                    "self",
                    "output",
                    "names"
                ]
            },
            "NDArrayGroupBy": {},
            "DataSplitter": {
                "__init__": [
                    "self",
                    "data",
                    "labels",
                    "ngroups",
                    "axis"
                ],
                "slabels": [
                    "self"
                ],
                "sort_idx": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "_get_sorted_data": [
                    "self"
                ],
                "_chop": [
                    "self",
                    "sdata",
                    "slice_obj"
                ],
                "apply": [
                    "self",
                    "f"
                ]
            },
            "ArraySplitter": {},
            "SeriesSplitter": {
                "_chop": [
                    "self",
                    "sdata",
                    "slice_obj"
                ]
            },
            "FrameSplitter": {
                "__init__": [
                    "self",
                    "data",
                    "labels",
                    "ngroups",
                    "axis"
                ],
                "fast_apply": [
                    "self",
                    "f",
                    "names"
                ],
                "_chop": [
                    "self",
                    "sdata",
                    "slice_obj"
                ]
            },
            "NDFrameSplitter": {
                "__init__": [
                    "self",
                    "data",
                    "labels",
                    "ngroups",
                    "axis"
                ],
                "_get_sorted_data": [
                    "self"
                ],
                "_chop": [
                    "self",
                    "sdata",
                    "slice_obj"
                ]
            },
            "_KeyMapper": {
                "__init__": [
                    "self",
                    "comp_ids",
                    "ngroups",
                    "labels",
                    "levels"
                ],
                "_populate_tables": [
                    "self"
                ],
                "get_key": [
                    "self",
                    "comp_id"
                ]
            }
        },
        "pandas.core.panel": {
            "_ensure_like_indices": [
                "time",
                "panels"
            ],
            "panel_index": [
                "time",
                "panels",
                "names"
            ],
            "Panel": {
                "_constructor": [
                    "self"
                ],
                "__init__": [
                    "self",
                    "data",
                    "items",
                    "major_axis",
                    "minor_axis",
                    "copy",
                    "dtype"
                ],
                "_init_data": [
                    "self",
                    "data",
                    "copy",
                    "dtype"
                ],
                "_init_dict": [
                    "self",
                    "data",
                    "axes",
                    "dtype"
                ],
                "_init_arrays": [
                    "self",
                    "arrays",
                    "arr_names",
                    "axes"
                ],
                "from_dict": [
                    "cls",
                    "data",
                    "intersect",
                    "orient",
                    "dtype"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_getitem_multilevel": [
                    "self",
                    "key"
                ],
                "_init_matrix": [
                    "self",
                    "data",
                    "axes",
                    "dtype",
                    "copy"
                ],
                "_compare_constructor": [
                    "self",
                    "other",
                    "func"
                ],
                "__unicode__": [
                    "self"
                ],
                "_get_plane_axes_index": [
                    "self",
                    "axis"
                ],
                "_get_plane_axes": [
                    "self",
                    "axis"
                ],
                "to_sparse": [
                    "self",
                    "fill_value",
                    "kind"
                ],
                "to_excel": [
                    "self",
                    "path",
                    "na_rep",
                    "engine"
                ],
                "as_matrix": [
                    "self"
                ],
                "get_value": [
                    "self"
                ],
                "set_value": [
                    "self"
                ],
                "_box_item_values": [
                    "self",
                    "key",
                    "values"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "_unpickle_panel_compat": [
                    "self",
                    "state"
                ],
                "conform": [
                    "self",
                    "frame",
                    "axis"
                ],
                "head": [
                    "self",
                    "n"
                ],
                "tail": [
                    "self",
                    "n"
                ],
                "_needs_reindex_multi": [
                    "self",
                    "axes",
                    "method",
                    "level"
                ],
                "dropna": [
                    "self",
                    "axis",
                    "how",
                    "inplace"
                ],
                "_combine": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_combine_const": [
                    "self",
                    "other",
                    "func"
                ],
                "_combine_frame": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_combine_panel": [
                    "self",
                    "other",
                    "func"
                ],
                "major_xs": [
                    "self",
                    "key",
                    "copy"
                ],
                "minor_xs": [
                    "self",
                    "key",
                    "copy"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy"
                ],
                "_ixs": [
                    "self",
                    "i",
                    "axis"
                ],
                "groupby": [
                    "self",
                    "function",
                    "axis"
                ],
                "to_frame": [
                    "self",
                    "filter_observations"
                ],
                "apply": [
                    "self",
                    "func",
                    "axis"
                ],
                "_apply_1d": [
                    "self",
                    "func",
                    "axis"
                ],
                "_apply_2d": [
                    "self",
                    "func",
                    "axis"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "name",
                    "axis",
                    "skipna",
                    "numeric_only",
                    "filter_type"
                ],
                "_construct_return_type": [
                    "self",
                    "result",
                    "axes"
                ],
                "_wrap_result": [
                    "self",
                    "result",
                    "axis"
                ],
                "reindex": [
                    "self",
                    "items",
                    "major_axis",
                    "minor_axis"
                ],
                "rename": [
                    "self",
                    "items",
                    "major_axis",
                    "minor_axis"
                ],
                "reindex_axis": [
                    "self",
                    "labels",
                    "axis",
                    "method",
                    "level",
                    "copy",
                    "limit",
                    "fill_value"
                ],
                "transpose": [
                    "self"
                ],
                "count": [
                    "self",
                    "axis"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq",
                    "axis"
                ],
                "tshift": [
                    "self",
                    "periods",
                    "freq",
                    "axis"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "lsuffix",
                    "rsuffix"
                ],
                "update": [
                    "self",
                    "other",
                    "join",
                    "overwrite",
                    "filter_func",
                    "raise_conflict"
                ],
                "_get_join_index": [
                    "self",
                    "other",
                    "how"
                ],
                "_extract_axes": [
                    "self",
                    "data",
                    "axes"
                ],
                "_extract_axes_for_slice": [
                    "self",
                    "axes"
                ],
                "_prep_ndarray": [
                    "self",
                    "values",
                    "copy"
                ],
                "_homogenize_dict": [
                    "self",
                    "frames",
                    "intersect",
                    "dtype"
                ],
                "_extract_axis": [
                    "self",
                    "data",
                    "axis",
                    "intersect"
                ],
                "_add_aggregate_operations": [
                    "cls",
                    "use_numexpr"
                ]
            }
        },
        "pandas.core.internals": {
            "make_block": [
                "values",
                "placement",
                "klass",
                "ndim",
                "dtype",
                "fastpath"
            ],
            "construction_error": [
                "tot_items",
                "block_shape",
                "axes",
                "e"
            ],
            "create_block_manager_from_blocks": [
                "blocks",
                "axes"
            ],
            "create_block_manager_from_arrays": [
                "arrays",
                "names",
                "axes"
            ],
            "form_blocks": [
                "arrays",
                "names",
                "axes"
            ],
            "_simple_blockify": [
                "tuples",
                "dtype"
            ],
            "_multi_blockify": [
                "tuples",
                "dtype"
            ],
            "_sparse_blockify": [
                "tuples",
                "dtype"
            ],
            "_stack_arrays": [
                "tuples",
                "dtype"
            ],
            "_interleaved_dtype": [
                "blocks"
            ],
            "_consolidate": [
                "blocks"
            ],
            "_merge_blocks": [
                "blocks",
                "dtype",
                "_can_consolidate"
            ],
            "_block_shape": [
                "values",
                "ndim",
                "shape"
            ],
            "_vstack": [
                "to_stack",
                "dtype"
            ],
            "_possibly_compare": [
                "a",
                "b",
                "op"
            ],
            "_concat_indexes": [
                "indexes"
            ],
            "_block2d_to_blocknd": [
                "values",
                "placement",
                "shape",
                "labels",
                "ref_items"
            ],
            "_factor_indexer": [
                "shape",
                "labels"
            ],
            "_get_blkno_placements": [
                "blknos",
                "blk_count",
                "group"
            ],
            "items_overlap_with_suffix": [
                "left",
                "lsuffix",
                "right",
                "rsuffix"
            ],
            "_transform_index": [
                "index",
                "func"
            ],
            "_putmask_smart": [
                "v",
                "m",
                "n"
            ],
            "concatenate_block_managers": [
                "mgrs_indexers",
                "axes",
                "concat_axis",
                "copy"
            ],
            "get_empty_dtype_and_na": [
                "join_units"
            ],
            "concatenate_join_units": [
                "join_units",
                "concat_axis",
                "copy"
            ],
            "get_mgr_concatenation_plan": [
                "mgr",
                "indexers"
            ],
            "combine_concat_plans": [
                "plans",
                "concat_axis"
            ],
            "trim_join_unit": [
                "join_unit",
                "length"
            ],
            "_fast_count_smallints": [
                "arr"
            ],
            "_preprocess_slice_or_indexer": [
                "slice_or_indexer",
                "length",
                "allow_fill"
            ],
            "Block": {
                "__init__": [
                    "self",
                    "values",
                    "placement",
                    "ndim",
                    "fastpath"
                ],
                "_consolidate_key": [
                    "self"
                ],
                "_is_single_block": [
                    "self"
                ],
                "is_view": [
                    "self"
                ],
                "is_datelike": [
                    "self"
                ],
                "is_categorical_astype": [
                    "self",
                    "dtype"
                ],
                "to_dense": [
                    "self"
                ],
                "fill_value": [
                    "self"
                ],
                "mgr_locs": [
                    "self",
                    "new_mgr_locs"
                ],
                "array_dtype": [
                    "self"
                ],
                "make_block_same_class": [
                    "self",
                    "values",
                    "placement",
                    "copy",
                    "fastpath"
                ],
                "__unicode__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "_slice": [
                    "self",
                    "slicer"
                ],
                "reshape_nd": [
                    "self",
                    "labels",
                    "shape",
                    "ref_items"
                ],
                "getitem_block": [
                    "self",
                    "slicer",
                    "new_mgr_locs"
                ],
                "shape": [
                    "self"
                ],
                "itemsize": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "ftype": [
                    "self"
                ],
                "merge": [
                    "self",
                    "other"
                ],
                "reindex_axis": [
                    "self",
                    "indexer",
                    "method",
                    "axis",
                    "fill_value",
                    "limit",
                    "mask_info"
                ],
                "get": [
                    "self",
                    "item"
                ],
                "iget": [
                    "self",
                    "i"
                ],
                "set": [
                    "self",
                    "locs",
                    "values",
                    "check"
                ],
                "delete": [
                    "self",
                    "loc"
                ],
                "apply": [
                    "self",
                    "func"
                ],
                "fillna": [
                    "self",
                    "value",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "_maybe_downcast": [
                    "self",
                    "blocks",
                    "downcast"
                ],
                "downcast": [
                    "self",
                    "dtypes"
                ],
                "astype": [
                    "self",
                    "dtype",
                    "copy",
                    "raise_on_error",
                    "values"
                ],
                "_astype": [
                    "self",
                    "dtype",
                    "copy",
                    "raise_on_error",
                    "values",
                    "klass"
                ],
                "convert": [
                    "self",
                    "copy"
                ],
                "_can_hold_element": [
                    "self",
                    "value"
                ],
                "_try_cast": [
                    "self",
                    "value"
                ],
                "_try_cast_result": [
                    "self",
                    "result",
                    "dtype"
                ],
                "_try_operate": [
                    "self",
                    "values"
                ],
                "_try_coerce_args": [
                    "self",
                    "values",
                    "other"
                ],
                "_try_coerce_result": [
                    "self",
                    "result"
                ],
                "_try_coerce_and_cast_result": [
                    "self",
                    "result",
                    "dtype"
                ],
                "_try_fill": [
                    "self",
                    "value"
                ],
                "to_native_types": [
                    "self",
                    "slicer",
                    "na_rep"
                ],
                "_concat_blocks": [
                    "self",
                    "blocks",
                    "values"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace",
                    "filter",
                    "regex"
                ],
                "setitem": [
                    "self",
                    "indexer",
                    "value"
                ],
                "putmask": [
                    "self",
                    "mask",
                    "new",
                    "align",
                    "inplace"
                ],
                "interpolate": [
                    "self",
                    "method",
                    "axis",
                    "index",
                    "values",
                    "inplace",
                    "limit",
                    "fill_value",
                    "coerce",
                    "downcast"
                ],
                "_interpolate_with_fill": [
                    "self",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "fill_value",
                    "coerce",
                    "downcast"
                ],
                "_interpolate": [
                    "self",
                    "method",
                    "index",
                    "values",
                    "fill_value",
                    "axis",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "take_nd": [
                    "self",
                    "indexer",
                    "axis",
                    "new_mgr_locs",
                    "fill_tuple"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ],
                "diff": [
                    "self",
                    "n"
                ],
                "shift": [
                    "self",
                    "periods",
                    "axis"
                ],
                "eval": [
                    "self",
                    "func",
                    "other",
                    "raise_on_error",
                    "try_cast"
                ],
                "where": [
                    "self",
                    "other",
                    "cond",
                    "align",
                    "raise_on_error",
                    "try_cast"
                ],
                "equals": [
                    "self",
                    "other"
                ]
            },
            "NonConsolidatableMixIn": {
                "__init__": [
                    "self",
                    "values",
                    "placement",
                    "ndim",
                    "fastpath"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ],
                "iget": [
                    "self",
                    "col"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "set": [
                    "self",
                    "locs",
                    "values",
                    "check"
                ],
                "get": [
                    "self",
                    "item"
                ],
                "_slice": [
                    "self",
                    "slicer"
                ],
                "_try_cast_result": [
                    "self",
                    "result",
                    "dtype"
                ]
            },
            "NumericBlock": {},
            "FloatOrComplexBlock": {
                "equals": [
                    "self",
                    "other"
                ]
            },
            "FloatBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "to_native_types": [
                    "self",
                    "slicer",
                    "na_rep",
                    "float_format"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "ComplexBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "IntBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ]
            },
            "TimeDeltaBlock": {
                "fill_value": [
                    "self"
                ],
                "_try_fill": [
                    "self",
                    "value"
                ],
                "_try_coerce_args": [
                    "self",
                    "values",
                    "other"
                ],
                "_try_operate": [
                    "self",
                    "values"
                ],
                "_try_coerce_result": [
                    "self",
                    "result"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "to_native_types": [
                    "self",
                    "slicer",
                    "na_rep"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ]
            },
            "BoolBlock": {
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace",
                    "filter",
                    "regex"
                ]
            },
            "ObjectBlock": {
                "__init__": [
                    "self",
                    "values",
                    "ndim",
                    "fastpath",
                    "placement"
                ],
                "is_bool": [
                    "self"
                ],
                "convert": [
                    "self",
                    "convert_dates",
                    "convert_numeric",
                    "convert_timedeltas",
                    "copy",
                    "by_item"
                ],
                "set": [
                    "self",
                    "locs",
                    "values",
                    "check"
                ],
                "_maybe_downcast": [
                    "self",
                    "blocks",
                    "downcast"
                ],
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "replace": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace",
                    "filter",
                    "regex"
                ],
                "_replace_single": [
                    "self",
                    "to_replace",
                    "value",
                    "inplace",
                    "filter",
                    "regex"
                ]
            },
            "CategoricalBlock": {
                "__init__": [
                    "self",
                    "values",
                    "placement",
                    "fastpath"
                ],
                "is_view": [
                    "self"
                ],
                "to_dense": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "array_dtype": [
                    "self"
                ],
                "_slice": [
                    "self",
                    "slicer"
                ],
                "fillna": [
                    "self",
                    "value",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "interpolate": [
                    "self",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "fill_value"
                ],
                "take_nd": [
                    "self",
                    "indexer",
                    "axis",
                    "new_mgr_locs",
                    "fill_tuple"
                ],
                "putmask": [
                    "self",
                    "mask",
                    "new",
                    "align",
                    "inplace"
                ],
                "_astype": [
                    "self",
                    "dtype",
                    "copy",
                    "raise_on_error",
                    "values",
                    "klass"
                ],
                "_concat_blocks": [
                    "self",
                    "blocks",
                    "values"
                ],
                "to_native_types": [
                    "self",
                    "slicer",
                    "na_rep"
                ]
            },
            "DatetimeBlock": {
                "__init__": [
                    "self",
                    "values",
                    "placement",
                    "fastpath"
                ],
                "_can_hold_element": [
                    "self",
                    "element"
                ],
                "_try_cast": [
                    "self",
                    "element"
                ],
                "_try_operate": [
                    "self",
                    "values"
                ],
                "_try_coerce_args": [
                    "self",
                    "values",
                    "other"
                ],
                "_try_coerce_result": [
                    "self",
                    "result"
                ],
                "fill_value": [
                    "self"
                ],
                "_try_fill": [
                    "self",
                    "value"
                ],
                "fillna": [
                    "self",
                    "value",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "to_native_types": [
                    "self",
                    "slicer",
                    "na_rep",
                    "date_format"
                ],
                "should_store": [
                    "self",
                    "value"
                ],
                "set": [
                    "self",
                    "locs",
                    "values",
                    "check"
                ],
                "get_values": [
                    "self",
                    "dtype"
                ]
            },
            "SparseBlock": {
                "shape": [
                    "self"
                ],
                "itemsize": [
                    "self"
                ],
                "fill_value": [
                    "self",
                    "v"
                ],
                "sp_values": [
                    "self",
                    "v"
                ],
                "sp_index": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "make_block_same_class": [
                    "self",
                    "values",
                    "placement",
                    "sparse_index",
                    "kind",
                    "dtype",
                    "fill_value",
                    "copy",
                    "fastpath"
                ],
                "interpolate": [
                    "self",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "fill_value"
                ],
                "fillna": [
                    "self",
                    "value",
                    "limit",
                    "inplace",
                    "downcast"
                ],
                "shift": [
                    "self",
                    "periods",
                    "axis"
                ],
                "reindex_axis": [
                    "self",
                    "indexer",
                    "method",
                    "axis",
                    "fill_value",
                    "limit",
                    "mask_info"
                ],
                "sparse_reindex": [
                    "self",
                    "new_index"
                ]
            },
            "BlockManager": {
                "__init__": [
                    "self",
                    "blocks",
                    "axes",
                    "do_integrity_check",
                    "fastpath"
                ],
                "make_empty": [
                    "self",
                    "axes"
                ],
                "__nonzero__": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "set_axis": [
                    "self",
                    "axis",
                    "new_labels"
                ],
                "rename_axis": [
                    "self",
                    "mapper",
                    "axis",
                    "copy"
                ],
                "add_prefix": [
                    "self",
                    "prefix"
                ],
                "add_suffix": [
                    "self",
                    "suffix"
                ],
                "_is_single_block": [
                    "self"
                ],
                "_rebuild_blknos_and_blklocs": [
                    "self"
                ],
                "_get_items": [
                    "self"
                ],
                "_get_counts": [
                    "self",
                    "f"
                ],
                "get_dtype_counts": [
                    "self"
                ],
                "get_ftype_counts": [
                    "self"
                ],
                "get_dtypes": [
                    "self"
                ],
                "get_ftypes": [
                    "self"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "_post_setstate": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_verify_integrity": [
                    "self"
                ],
                "apply": [
                    "self",
                    "f",
                    "axes",
                    "filter",
                    "do_integrity_check"
                ],
                "isnull": [
                    "self"
                ],
                "where": [
                    "self"
                ],
                "eval": [
                    "self"
                ],
                "setitem": [
                    "self"
                ],
                "putmask": [
                    "self"
                ],
                "diff": [
                    "self"
                ],
                "interpolate": [
                    "self"
                ],
                "shift": [
                    "self"
                ],
                "fillna": [
                    "self"
                ],
                "downcast": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "convert": [
                    "self"
                ],
                "replace": [
                    "self"
                ],
                "replace_list": [
                    "self",
                    "src_list",
                    "dest_list",
                    "inplace",
                    "regex"
                ],
                "reshape_nd": [
                    "self",
                    "axes"
                ],
                "is_consolidated": [
                    "self"
                ],
                "_consolidate_check": [
                    "self"
                ],
                "is_mixed_type": [
                    "self"
                ],
                "is_numeric_mixed_type": [
                    "self"
                ],
                "is_datelike_mixed_type": [
                    "self"
                ],
                "is_view": [
                    "self"
                ],
                "get_bool_data": [
                    "self",
                    "copy"
                ],
                "get_numeric_data": [
                    "self",
                    "copy"
                ],
                "combine": [
                    "self",
                    "blocks",
                    "copy"
                ],
                "get_slice": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "__contains__": [
                    "self",
                    "item"
                ],
                "nblocks": [
                    "self"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "as_matrix": [
                    "self",
                    "items"
                ],
                "_interleave": [
                    "self"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy",
                    "takeable"
                ],
                "fast_xs": [
                    "self",
                    "loc"
                ],
                "consolidate": [
                    "self"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "get": [
                    "self",
                    "item",
                    "fastpath"
                ],
                "iget": [
                    "self",
                    "i",
                    "fastpath"
                ],
                "get_scalar": [
                    "self",
                    "tup"
                ],
                "delete": [
                    "self",
                    "item"
                ],
                "set": [
                    "self",
                    "item",
                    "value",
                    "check"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item",
                    "value",
                    "allow_duplicates"
                ],
                "reindex_axis": [
                    "self",
                    "new_index",
                    "axis",
                    "method",
                    "limit",
                    "fill_value",
                    "copy"
                ],
                "reindex_indexer": [
                    "self",
                    "new_axis",
                    "indexer",
                    "axis",
                    "fill_value",
                    "allow_dups",
                    "copy"
                ],
                "_slice_take_blocks_ax0": [
                    "self",
                    "slice_or_indexer",
                    "fill_tuple"
                ],
                "_make_na_block": [
                    "self",
                    "placement",
                    "fill_value"
                ],
                "take": [
                    "self",
                    "indexer",
                    "axis",
                    "verify",
                    "convert"
                ],
                "merge": [
                    "self",
                    "other",
                    "lsuffix",
                    "rsuffix"
                ],
                "_is_indexed_like": [
                    "self",
                    "other"
                ],
                "equals": [
                    "self",
                    "other"
                ]
            },
            "SingleBlockManager": {
                "__init__": [
                    "self",
                    "block",
                    "axis",
                    "do_integrity_check",
                    "fastpath"
                ],
                "_post_setstate": [
                    "self"
                ],
                "_block": [
                    "self"
                ],
                "_values": [
                    "self"
                ],
                "reindex": [
                    "self",
                    "new_axis",
                    "indexer",
                    "method",
                    "fill_value",
                    "limit",
                    "copy"
                ],
                "get_slice": [
                    "self",
                    "slobj",
                    "axis"
                ],
                "index": [
                    "self"
                ],
                "convert": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "array_dtype": [
                    "self"
                ],
                "ftype": [
                    "self"
                ],
                "get_dtype_counts": [
                    "self"
                ],
                "get_ftype_counts": [
                    "self"
                ],
                "get_dtypes": [
                    "self"
                ],
                "get_ftypes": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "get_values": [
                    "self"
                ],
                "itemsize": [
                    "self"
                ],
                "_can_hold_na": [
                    "self"
                ],
                "is_consolidated": [
                    "self"
                ],
                "_consolidate_check": [
                    "self"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "delete": [
                    "self",
                    "item"
                ],
                "fast_xs": [
                    "self",
                    "loc"
                ]
            },
            "JoinUnit": {
                "__init__": [
                    "self",
                    "block",
                    "shape",
                    "indexers"
                ],
                "__repr__": [
                    "self"
                ],
                "needs_filling": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "is_null": [
                    "self"
                ],
                "needs_block_conversion": [
                    "self"
                ],
                "get_reindexed_values": [
                    "self",
                    "empty_dtype",
                    "upcasted_na"
                ]
            }
        },
        "pandas.core.reshape": {
            "_make_index_array_level": [
                "lev",
                "lab"
            ],
            "_unstack_multiple": [
                "data",
                "clocs"
            ],
            "pivot": [
                "self",
                "index",
                "columns",
                "values"
            ],
            "pivot_simple": [
                "index",
                "columns",
                "values"
            ],
            "_slow_pivot": [
                "index",
                "columns",
                "values"
            ],
            "unstack": [
                "obj",
                "level"
            ],
            "_unstack_frame": [
                "obj",
                "level"
            ],
            "get_compressed_ids": [
                "labels",
                "sizes"
            ],
            "stack": [
                "frame",
                "level",
                "dropna"
            ],
            "stack_multiple": [
                "frame",
                "level",
                "dropna"
            ],
            "_stack_multi_columns": [
                "frame",
                "level",
                "dropna"
            ],
            "melt": [
                "frame",
                "id_vars",
                "value_vars",
                "var_name",
                "value_name",
                "col_level"
            ],
            "lreshape": [
                "data",
                "groups",
                "dropna",
                "label"
            ],
            "wide_to_long": [
                "df",
                "stubnames",
                "i",
                "j"
            ],
            "convert_dummies": [
                "data",
                "cat_variables",
                "prefix_sep"
            ],
            "get_dummies": [
                "data",
                "prefix",
                "prefix_sep",
                "dummy_na",
                "columns"
            ],
            "_get_dummies_1d": [
                "data",
                "prefix",
                "prefix_sep",
                "dummy_na"
            ],
            "make_axis_dummies": [
                "frame",
                "axis",
                "transform"
            ],
            "_Unstacker": {
                "__init__": [
                    "self",
                    "values",
                    "index",
                    "level",
                    "value_columns"
                ],
                "_make_sorted_values_labels": [
                    "self"
                ],
                "_make_selectors": [
                    "self"
                ],
                "get_result": [
                    "self"
                ],
                "get_new_values": [
                    "self"
                ],
                "get_new_columns": [
                    "self"
                ],
                "get_new_index": [
                    "self"
                ]
            }
        },
        "pandas.core.base": {
            "_unbox": [
                "func"
            ],
            "StringMixin": {
                "__unicode__": [
                    "self"
                ],
                "__str__": [
                    "self"
                ],
                "__bytes__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "PandasObject": {
                "_constructor": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_local_dir": [
                    "self"
                ],
                "__dir__": [
                    "self"
                ],
                "_reset_cache": [
                    "self",
                    "key"
                ]
            },
            "PandasDelegate": {
                "_delegate_property_get": [
                    "self",
                    "name"
                ],
                "_delegate_property_set": [
                    "self",
                    "name",
                    "value"
                ],
                "_delegate_method": [
                    "self",
                    "name"
                ],
                "_add_delegate_accessors": [
                    "cls",
                    "delegate",
                    "accessors",
                    "typ"
                ]
            },
            "FrozenList": {
                "__add__": [
                    "self",
                    "other"
                ],
                "__getslice__": [
                    "self",
                    "i",
                    "j"
                ],
                "__getitem__": [
                    "self",
                    "n"
                ],
                "__radd__": [
                    "self",
                    "other"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__mul__": [
                    "self",
                    "other"
                ],
                "__reduce__": [
                    "self"
                ],
                "__hash__": [
                    "self"
                ],
                "_disabled": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ]
            },
            "FrozenNDArray": {
                "__new__": [
                    "cls",
                    "data",
                    "dtype",
                    "copy"
                ],
                "_disabled": [
                    "self"
                ],
                "_shallow_copy": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ]
            },
            "IndexOpsMixin": {
                "transpose": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "ndim": [
                    "self"
                ],
                "item": [
                    "self"
                ],
                "data": [
                    "self"
                ],
                "itemsize": [
                    "self"
                ],
                "nbytes": [
                    "self"
                ],
                "strides": [
                    "self"
                ],
                "size": [
                    "self"
                ],
                "flags": [
                    "self"
                ],
                "base": [
                    "self"
                ],
                "max": [
                    "self"
                ],
                "argmax": [
                    "self",
                    "axis"
                ],
                "min": [
                    "self"
                ],
                "argmin": [
                    "self",
                    "axis"
                ],
                "hasnans": [
                    "self"
                ],
                "value_counts": [
                    "self",
                    "normalize",
                    "sort",
                    "ascending",
                    "bins",
                    "dropna"
                ],
                "unique": [
                    "self"
                ],
                "nunique": [
                    "self",
                    "dropna"
                ],
                "factorize": [
                    "self",
                    "sort",
                    "na_sentinel"
                ],
                "searchsorted": [
                    "self",
                    "key",
                    "side"
                ],
                "drop_duplicates": [
                    "self",
                    "take_last",
                    "inplace"
                ],
                "duplicated": [
                    "self",
                    "take_last"
                ],
                "_update_inplace": [
                    "self",
                    "result"
                ]
            }
        },
        "pandas.core.api": {},
        "pandas.core.series": {
            "_coerce_method": [
                "converter"
            ],
            "remove_na": [
                "series"
            ],
            "_sanitize_index": [
                "data",
                "index",
                "copy"
            ],
            "_sanitize_array": [
                "data",
                "index",
                "dtype",
                "copy",
                "raise_cast_failure"
            ],
            "Series": {
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "dtype",
                    "name",
                    "copy",
                    "fastpath"
                ],
                "from_array": [
                    "cls",
                    "arr",
                    "index",
                    "name",
                    "dtype",
                    "copy",
                    "fastpath"
                ],
                "_constructor": [
                    "self"
                ],
                "_can_hold_na": [
                    "self"
                ],
                "is_time_series": [
                    "self"
                ],
                "_set_axis": [
                    "self",
                    "axis",
                    "labels",
                    "fastpath"
                ],
                "_set_subtyp": [
                    "self",
                    "is_all_dates"
                ],
                "_update_inplace": [
                    "self",
                    "result"
                ],
                "dtype": [
                    "self"
                ],
                "dtypes": [
                    "self"
                ],
                "ftype": [
                    "self"
                ],
                "ftypes": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "get_values": [
                    "self"
                ],
                "ravel": [
                    "self",
                    "order"
                ],
                "compress": [
                    "self",
                    "condition",
                    "axis",
                    "out"
                ],
                "nonzero": [
                    "self"
                ],
                "put": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "view": [
                    "self",
                    "dtype"
                ],
                "__array__": [
                    "self",
                    "result"
                ],
                "__array_wrap__": [
                    "self",
                    "result",
                    "context"
                ],
                "__array_prepare__": [
                    "self",
                    "result",
                    "context"
                ],
                "real": [
                    "self",
                    "v"
                ],
                "imag": [
                    "self",
                    "v"
                ],
                "__getstate__": [
                    "self"
                ],
                "_unpickle_series_compat": [
                    "self",
                    "state"
                ],
                "axes": [
                    "self"
                ],
                "_ixs": [
                    "self",
                    "i",
                    "axis"
                ],
                "_is_mixed_type": [
                    "self"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis",
                    "typ"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_get_with": [
                    "self",
                    "key"
                ],
                "_get_values_tuple": [
                    "self",
                    "key"
                ],
                "_get_values": [
                    "self",
                    "indexer"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "_set_with_engine": [
                    "self",
                    "key",
                    "value"
                ],
                "_set_with": [
                    "self",
                    "key",
                    "value"
                ],
                "_set_labels": [
                    "self",
                    "key",
                    "value"
                ],
                "_set_values": [
                    "self",
                    "key",
                    "value"
                ],
                "repeat": [
                    "self",
                    "reps"
                ],
                "reshape": [
                    "self"
                ],
                "get_value": [
                    "self",
                    "label",
                    "takeable"
                ],
                "set_value": [
                    "self",
                    "label",
                    "value",
                    "takeable"
                ],
                "reset_index": [
                    "self",
                    "level",
                    "drop",
                    "name",
                    "inplace"
                ],
                "__unicode__": [
                    "self"
                ],
                "_tidy_repr": [
                    "self",
                    "max_vals"
                ],
                "_repr_footer": [
                    "self"
                ],
                "to_string": [
                    "self",
                    "buf",
                    "na_rep",
                    "float_format",
                    "length",
                    "dtype",
                    "name"
                ],
                "_get_repr": [
                    "self",
                    "name",
                    "print_header",
                    "length",
                    "dtype",
                    "na_rep",
                    "float_format"
                ],
                "__iter__": [
                    "self"
                ],
                "iteritems": [
                    "self"
                ],
                "keys": [
                    "self"
                ],
                "tolist": [
                    "self"
                ],
                "to_dict": [
                    "self"
                ],
                "to_frame": [
                    "self",
                    "name"
                ],
                "to_sparse": [
                    "self",
                    "kind",
                    "fill_value"
                ],
                "count": [
                    "self",
                    "level"
                ],
                "mode": [
                    "self"
                ],
                "drop_duplicates": [
                    "self",
                    "take_last",
                    "inplace"
                ],
                "duplicated": [
                    "self",
                    "take_last"
                ],
                "idxmin": [
                    "self",
                    "axis",
                    "out",
                    "skipna"
                ],
                "idxmax": [
                    "self",
                    "axis",
                    "out",
                    "skipna"
                ],
                "round": [
                    "self",
                    "decimals",
                    "out"
                ],
                "quantile": [
                    "self",
                    "q"
                ],
                "ptp": [
                    "self",
                    "axis",
                    "out"
                ],
                "corr": [
                    "self",
                    "other",
                    "method",
                    "min_periods"
                ],
                "cov": [
                    "self",
                    "other",
                    "min_periods"
                ],
                "diff": [
                    "self",
                    "periods"
                ],
                "autocorr": [
                    "self"
                ],
                "dot": [
                    "self",
                    "other"
                ],
                "searchsorted": [
                    "self",
                    "v",
                    "side",
                    "sorter"
                ],
                "append": [
                    "self",
                    "to_append",
                    "verify_integrity"
                ],
                "_binop": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "combine": [
                    "self",
                    "other",
                    "func",
                    "fill_value"
                ],
                "combine_first": [
                    "self",
                    "other"
                ],
                "update": [
                    "self",
                    "other"
                ],
                "sort_index": [
                    "self",
                    "ascending"
                ],
                "argsort": [
                    "self",
                    "axis",
                    "kind",
                    "order"
                ],
                "rank": [
                    "self",
                    "method",
                    "na_option",
                    "ascending",
                    "pct"
                ],
                "sort": [
                    "self",
                    "axis",
                    "ascending",
                    "kind",
                    "na_position",
                    "inplace"
                ],
                "order": [
                    "self",
                    "na_last",
                    "ascending",
                    "kind",
                    "na_position",
                    "inplace"
                ],
                "nlargest": [
                    "self",
                    "n",
                    "take_last"
                ],
                "nsmallest": [
                    "self",
                    "n",
                    "take_last"
                ],
                "sortlevel": [
                    "self",
                    "level",
                    "ascending",
                    "sort_remaining"
                ],
                "swaplevel": [
                    "self",
                    "i",
                    "j",
                    "copy"
                ],
                "reorder_levels": [
                    "self",
                    "order"
                ],
                "unstack": [
                    "self",
                    "level"
                ],
                "map": [
                    "self",
                    "arg",
                    "na_action"
                ],
                "apply": [
                    "self",
                    "func",
                    "convert_dtype",
                    "args"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "name",
                    "axis",
                    "skipna",
                    "numeric_only",
                    "filter_type"
                ],
                "_maybe_box": [
                    "self",
                    "func",
                    "dropna"
                ],
                "_reindex_indexer": [
                    "self",
                    "new_index",
                    "indexer",
                    "copy"
                ],
                "_needs_reindex_multi": [
                    "self",
                    "axes",
                    "method",
                    "level"
                ],
                "rename": [
                    "self",
                    "index"
                ],
                "reindex": [
                    "self",
                    "index"
                ],
                "reindex_axis": [
                    "self",
                    "labels",
                    "axis"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis",
                    "convert",
                    "is_copy"
                ],
                "isin": [
                    "self",
                    "values"
                ],
                "between": [
                    "self",
                    "left",
                    "right",
                    "inclusive"
                ],
                "from_csv": [
                    "cls",
                    "path",
                    "sep",
                    "parse_dates",
                    "header",
                    "index_col",
                    "encoding",
                    "infer_datetime_format"
                ],
                "to_csv": [
                    "self",
                    "path",
                    "index",
                    "sep",
                    "na_rep",
                    "float_format",
                    "header",
                    "index_label",
                    "mode",
                    "nanRep",
                    "encoding",
                    "date_format"
                ],
                "dropna": [
                    "self",
                    "axis",
                    "inplace"
                ],
                "first_valid_index": [
                    "self"
                ],
                "last_valid_index": [
                    "self"
                ],
                "asof": [
                    "self",
                    "where"
                ],
                "str": [
                    "self"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how",
                    "copy"
                ],
                "to_period": [
                    "self",
                    "freq",
                    "copy"
                ],
                "dt": [
                    "self"
                ],
                "cat": [
                    "self"
                ]
            }
        },
        "pandas.core": {},
        "pandas.core.nanops": {
            "_bn_ok_dtype": [
                "dt",
                "name"
            ],
            "_has_infs": [
                "result"
            ],
            "_get_fill_value": [
                "dtype",
                "fill_value",
                "fill_value_typ"
            ],
            "_get_values": [
                "values",
                "skipna",
                "fill_value",
                "fill_value_typ",
                "isfinite",
                "copy"
            ],
            "_isfinite": [
                "values"
            ],
            "_na_ok_dtype": [
                "dtype"
            ],
            "_view_if_needed": [
                "values"
            ],
            "_wrap_results": [
                "result",
                "dtype"
            ],
            "nanany": [
                "values",
                "axis",
                "skipna"
            ],
            "nanall": [
                "values",
                "axis",
                "skipna"
            ],
            "nansum": [
                "values",
                "axis",
                "skipna"
            ],
            "nanmean": [
                "values",
                "axis",
                "skipna"
            ],
            "nanmedian": [
                "values",
                "axis",
                "skipna"
            ],
            "_get_counts_nanvar": [
                "mask",
                "axis",
                "ddof"
            ],
            "_nanvar": [
                "values",
                "axis",
                "skipna",
                "ddof"
            ],
            "nanstd": [
                "values",
                "axis",
                "skipna",
                "ddof"
            ],
            "nanvar": [
                "values",
                "axis",
                "skipna",
                "ddof"
            ],
            "nansem": [
                "values",
                "axis",
                "skipna",
                "ddof"
            ],
            "nanmin": [
                "values",
                "axis",
                "skipna"
            ],
            "nanmax": [
                "values",
                "axis",
                "skipna"
            ],
            "nanargmax": [
                "values",
                "axis",
                "skipna"
            ],
            "nanargmin": [
                "values",
                "axis",
                "skipna"
            ],
            "nanskew": [
                "values",
                "axis",
                "skipna"
            ],
            "nankurt": [
                "values",
                "axis",
                "skipna"
            ],
            "nanprod": [
                "values",
                "axis",
                "skipna"
            ],
            "_maybe_arg_null_out": [
                "result",
                "axis",
                "mask",
                "skipna"
            ],
            "_get_counts": [
                "mask",
                "axis"
            ],
            "_maybe_null_out": [
                "result",
                "axis",
                "mask"
            ],
            "_zero_out_fperr": [
                "arg"
            ],
            "nancorr": [
                "a",
                "b",
                "method",
                "min_periods"
            ],
            "get_corr_func": [
                "method"
            ],
            "nancov": [
                "a",
                "b",
                "min_periods"
            ],
            "_ensure_numeric": [
                "x"
            ],
            "make_nancomp": [
                "op"
            ],
            "unique1d": [
                "values"
            ],
            "disallow": {
                "__init__": [
                    "self"
                ],
                "check": [
                    "self",
                    "obj"
                ],
                "__call__": [
                    "self",
                    "f"
                ]
            },
            "bottleneck_switch": {
                "__init__": [
                    "self",
                    "zero_value"
                ],
                "__call__": [
                    "self",
                    "alt"
                ]
            }
        },
        "pandas.core.index": {
            "_try_get_item": [
                "x"
            ],
            "_indexOp": [
                "opname"
            ],
            "_new_Index": [
                "cls",
                "d"
            ],
            "_sparsify": [
                "label_list",
                "start",
                "sentinel"
            ],
            "_ensure_index": [
                "index_like",
                "copy"
            ],
            "_ensure_frozen": [
                "array_like",
                "categories",
                "copy"
            ],
            "_validate_join_method": [
                "method"
            ],
            "_get_combined_index": [
                "indexes",
                "intersect"
            ],
            "_get_distinct_indexes": [
                "indexes"
            ],
            "_union_indexes": [
                "indexes"
            ],
            "_trim_front": [
                "strings"
            ],
            "_sanitize_and_check": [
                "indexes"
            ],
            "_get_consensus_names": [
                "indexes"
            ],
            "_maybe_box": [
                "idx"
            ],
            "_all_indexes_same": [
                "indexes"
            ],
            "_get_na_rep": [
                "dtype"
            ],
            "_get_na_value": [
                "dtype"
            ],
            "_ensure_has_len": [
                "seq"
            ],
            "InvalidIndexError": {},
            "Index": {
                "__new__": [
                    "cls",
                    "data",
                    "dtype",
                    "copy",
                    "name",
                    "fastpath",
                    "tupleize_cols"
                ],
                "_simple_new": [
                    "cls",
                    "values",
                    "name"
                ],
                "_update_inplace": [
                    "self",
                    "result"
                ],
                "is_": [
                    "self",
                    "other"
                ],
                "_reset_identity": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__array__": [
                    "self",
                    "result"
                ],
                "__array_wrap__": [
                    "self",
                    "result",
                    "context"
                ],
                "dtype": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "get_values": [
                    "self"
                ],
                "_array_values": [
                    "self"
                ],
                "tolist": [
                    "self"
                ],
                "repeat": [
                    "self",
                    "n"
                ],
                "ravel": [
                    "self",
                    "order"
                ],
                "_scalar_data_error": [
                    "cls",
                    "data"
                ],
                "_string_data_error": [
                    "cls",
                    "data"
                ],
                "_coerce_to_ndarray": [
                    "cls",
                    "data"
                ],
                "_get_attributes_dict": [
                    "self"
                ],
                "view": [
                    "self",
                    "cls"
                ],
                "_shallow_copy": [
                    "self",
                    "values"
                ],
                "copy": [
                    "self",
                    "names",
                    "name",
                    "dtype",
                    "deep"
                ],
                "__unicode__": [
                    "self"
                ],
                "to_series": [
                    "self"
                ],
                "_to_embed": [
                    "self",
                    "keep_tz"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "to_datetime": [
                    "self",
                    "dayfirst"
                ],
                "_assert_can_do_setop": [
                    "self",
                    "other"
                ],
                "nlevels": [
                    "self"
                ],
                "_get_names": [
                    "self"
                ],
                "_set_names": [
                    "self",
                    "values",
                    "level"
                ],
                "set_names": [
                    "self",
                    "names",
                    "level",
                    "inplace"
                ],
                "rename": [
                    "self",
                    "name",
                    "inplace"
                ],
                "_has_complex_internals": [
                    "self"
                ],
                "summary": [
                    "self",
                    "name"
                ],
                "_mpl_repr": [
                    "self"
                ],
                "is_monotonic": [
                    "self"
                ],
                "is_monotonic_increasing": [
                    "self"
                ],
                "is_monotonic_decreasing": [
                    "self"
                ],
                "is_lexsorted_for_tuple": [
                    "self",
                    "tup"
                ],
                "is_unique": [
                    "self"
                ],
                "is_boolean": [
                    "self"
                ],
                "is_integer": [
                    "self"
                ],
                "is_floating": [
                    "self"
                ],
                "is_numeric": [
                    "self"
                ],
                "is_object": [
                    "self"
                ],
                "is_mixed": [
                    "self"
                ],
                "holds_integer": [
                    "self"
                ],
                "_convert_scalar_indexer": [
                    "self",
                    "key",
                    "typ"
                ],
                "_validate_slicer": [
                    "self",
                    "key",
                    "f"
                ],
                "_convert_slice_indexer_getitem": [
                    "self",
                    "key",
                    "is_index_slice"
                ],
                "_convert_slice_indexer": [
                    "self",
                    "key",
                    "typ"
                ],
                "_convert_list_indexer": [
                    "self",
                    "key",
                    "typ"
                ],
                "_convert_list_indexer_for_mixed": [
                    "self",
                    "keyarr",
                    "typ"
                ],
                "_convert_indexer_error": [
                    "self",
                    "key",
                    "msg"
                ],
                "get_duplicates": [
                    "self"
                ],
                "_cleanup": [
                    "self"
                ],
                "_engine": [
                    "self"
                ],
                "_validate_index_level": [
                    "self",
                    "level"
                ],
                "_get_level_number": [
                    "self",
                    "level"
                ],
                "inferred_type": [
                    "self"
                ],
                "is_type_compatible": [
                    "self",
                    "typ"
                ],
                "is_all_dates": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__deepcopy__": [
                    "self",
                    "memo"
                ],
                "__nonzero__": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "__hash__": [
                    "self"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "_ensure_compat_concat": [
                    "indexes"
                ],
                "take": [
                    "self",
                    "indexer",
                    "axis"
                ],
                "putmask": [
                    "self",
                    "mask",
                    "value"
                ],
                "format": [
                    "self",
                    "name",
                    "formatter"
                ],
                "_format_with_header": [
                    "self",
                    "header",
                    "na_rep"
                ],
                "to_native_types": [
                    "self",
                    "slicer"
                ],
                "_format_native_types": [
                    "self",
                    "na_rep"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "identical": [
                    "self",
                    "other"
                ],
                "asof": [
                    "self",
                    "label"
                ],
                "asof_locs": [
                    "self",
                    "where",
                    "mask"
                ],
                "order": [
                    "self",
                    "return_indexer",
                    "ascending"
                ],
                "sort": [
                    "self"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq"
                ],
                "argsort": [
                    "self"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "__and__": [
                    "self",
                    "other"
                ],
                "__or__": [
                    "self",
                    "other"
                ],
                "__xor__": [
                    "self",
                    "other"
                ],
                "union": [
                    "self",
                    "other"
                ],
                "_wrap_union_result": [
                    "self",
                    "other",
                    "result"
                ],
                "intersection": [
                    "self",
                    "other"
                ],
                "difference": [
                    "self",
                    "other"
                ],
                "sym_diff": [
                    "self",
                    "other",
                    "result_name"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "set_value": [
                    "self",
                    "arr",
                    "key",
                    "value"
                ],
                "get_level_values": [
                    "self",
                    "level"
                ],
                "get_indexer": [
                    "self",
                    "target",
                    "method",
                    "limit"
                ],
                "get_indexer_non_unique": [
                    "self",
                    "target"
                ],
                "get_indexer_for": [
                    "self",
                    "target"
                ],
                "_possibly_promote": [
                    "self",
                    "other"
                ],
                "groupby": [
                    "self",
                    "to_groupby"
                ],
                "map": [
                    "self",
                    "mapper"
                ],
                "isin": [
                    "self",
                    "values",
                    "level"
                ],
                "_get_method": [
                    "self",
                    "method"
                ],
                "reindex": [
                    "self",
                    "target",
                    "method",
                    "level",
                    "limit"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_join_multi": [
                    "self",
                    "other",
                    "how",
                    "return_indexers"
                ],
                "_join_non_unique": [
                    "self",
                    "other",
                    "how",
                    "return_indexers"
                ],
                "_join_level": [
                    "self",
                    "other",
                    "level",
                    "how",
                    "return_indexers"
                ],
                "_join_monotonic": [
                    "self",
                    "other",
                    "how",
                    "return_indexers"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ],
                "slice_indexer": [
                    "self",
                    "start",
                    "end",
                    "step"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end"
                ],
                "delete": [
                    "self",
                    "loc"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item"
                ],
                "drop": [
                    "self",
                    "labels"
                ],
                "drop_duplicates": [
                    "self",
                    "take_last"
                ],
                "duplicated": [
                    "self",
                    "take_last"
                ],
                "_evaluate_with_timedelta_like": [
                    "self",
                    "other",
                    "op",
                    "opstr"
                ],
                "_evaluate_with_datetime_like": [
                    "self",
                    "other",
                    "op",
                    "opstr"
                ],
                "_add_numeric_methods_disabled": [
                    "cls"
                ],
                "_add_numeric_methods": [
                    "cls"
                ]
            },
            "NumericIndex": {},
            "Int64Index": {
                "__new__": [
                    "cls",
                    "data",
                    "dtype",
                    "copy",
                    "name",
                    "fastpath"
                ],
                "inferred_type": [
                    "self"
                ],
                "hasnans": [
                    "self"
                ],
                "asi8": [
                    "self"
                ],
                "is_all_dates": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ]
            },
            "Float64Index": {
                "__new__": [
                    "cls",
                    "data",
                    "dtype",
                    "copy",
                    "name",
                    "fastpath"
                ],
                "inferred_type": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "_convert_scalar_indexer": [
                    "self",
                    "key",
                    "typ"
                ],
                "_convert_slice_indexer": [
                    "self",
                    "key",
                    "typ"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "__contains__": [
                    "self",
                    "other"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "is_all_dates": [
                    "self"
                ],
                "_nan_idxs": [
                    "self"
                ],
                "_isnan": [
                    "self"
                ],
                "hasnans": [
                    "self"
                ],
                "is_unique": [
                    "self"
                ],
                "isin": [
                    "self",
                    "values",
                    "level"
                ]
            },
            "MultiIndex": {
                "__new__": [
                    "cls",
                    "levels",
                    "labels",
                    "sortorder",
                    "names",
                    "copy",
                    "verify_integrity",
                    "_set_identity"
                ],
                "_verify_integrity": [
                    "self"
                ],
                "_get_levels": [
                    "self"
                ],
                "_set_levels": [
                    "self",
                    "levels",
                    "level",
                    "copy",
                    "validate",
                    "verify_integrity"
                ],
                "set_levels": [
                    "self",
                    "levels",
                    "level",
                    "inplace",
                    "verify_integrity"
                ],
                "_get_labels": [
                    "self"
                ],
                "_set_labels": [
                    "self",
                    "labels",
                    "level",
                    "copy",
                    "validate",
                    "verify_integrity"
                ],
                "set_labels": [
                    "self",
                    "labels",
                    "level",
                    "inplace",
                    "verify_integrity"
                ],
                "copy": [
                    "self",
                    "names",
                    "dtype",
                    "levels",
                    "labels",
                    "deep",
                    "_set_identity"
                ],
                "__array__": [
                    "self",
                    "result"
                ],
                "view": [
                    "self",
                    "cls"
                ],
                "_array_values": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "nbytes": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "_get_names": [
                    "self"
                ],
                "_set_names": [
                    "self",
                    "names",
                    "level",
                    "validate"
                ],
                "_reference_duplicate_name": [
                    "self",
                    "name"
                ],
                "_format_native_types": [
                    "self"
                ],
                "_constructor": [
                    "self"
                ],
                "inferred_type": [
                    "self"
                ],
                "_from_elements": [
                    "values",
                    "labels",
                    "levels",
                    "names",
                    "sortorder"
                ],
                "_get_level_number": [
                    "self",
                    "level"
                ],
                "values": [
                    "self"
                ],
                "_is_v1": [
                    "self"
                ],
                "_is_v2": [
                    "self"
                ],
                "_has_complex_internals": [
                    "self"
                ],
                "has_duplicates": [
                    "self"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_level_values": [
                    "self",
                    "level"
                ],
                "format": [
                    "self",
                    "space",
                    "sparsify",
                    "adjoin",
                    "names",
                    "na_rep",
                    "formatter"
                ],
                "to_hierarchical": [
                    "self",
                    "n_repeat",
                    "n_shuffle"
                ],
                "is_all_dates": [
                    "self"
                ],
                "is_lexsorted": [
                    "self"
                ],
                "is_lexsorted_for_tuple": [
                    "self",
                    "tup"
                ],
                "lexsort_depth": [
                    "self"
                ],
                "from_arrays": [
                    "cls",
                    "arrays",
                    "sortorder",
                    "names"
                ],
                "from_tuples": [
                    "cls",
                    "tuples",
                    "sortorder",
                    "names"
                ],
                "from_product": [
                    "cls",
                    "iterables",
                    "sortorder",
                    "names"
                ],
                "nlevels": [
                    "self"
                ],
                "levshape": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "take": [
                    "self",
                    "indexer",
                    "axis"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "argsort": [
                    "self"
                ],
                "repeat": [
                    "self",
                    "n"
                ],
                "drop": [
                    "self",
                    "labels",
                    "level"
                ],
                "_drop_from_level": [
                    "self",
                    "labels",
                    "level"
                ],
                "droplevel": [
                    "self",
                    "level"
                ],
                "swaplevel": [
                    "self",
                    "i",
                    "j"
                ],
                "reorder_levels": [
                    "self",
                    "order"
                ],
                "__getslice__": [
                    "self",
                    "i",
                    "j"
                ],
                "sortlevel": [
                    "self",
                    "level",
                    "ascending",
                    "sort_remaining"
                ],
                "get_indexer": [
                    "self",
                    "target",
                    "method",
                    "limit"
                ],
                "reindex": [
                    "self",
                    "target",
                    "method",
                    "level",
                    "limit"
                ],
                "_tuple_index": [
                    "self"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end",
                    "strict"
                ],
                "_partial_tup_index": [
                    "self",
                    "tup",
                    "side"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "get_loc_level": [
                    "self",
                    "key",
                    "level",
                    "drop_level"
                ],
                "_get_level_indexer": [
                    "self",
                    "key",
                    "level"
                ],
                "get_locs": [
                    "self",
                    "tup"
                ],
                "truncate": [
                    "self",
                    "before",
                    "after"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "equal_levels": [
                    "self",
                    "other"
                ],
                "union": [
                    "self",
                    "other"
                ],
                "intersection": [
                    "self",
                    "other"
                ],
                "difference": [
                    "self",
                    "other"
                ],
                "_assert_can_do_setop": [
                    "self",
                    "other"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item"
                ],
                "delete": [
                    "self",
                    "loc"
                ],
                "_bounds": [
                    "self"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ],
                "isin": [
                    "self",
                    "values",
                    "level"
                ]
            }
        },
        "pandas.tests.test_lib": {
            "TestIsscalar": {
                "test_isscalar_builtin_scalars": [
                    "self"
                ],
                "test_isscalar_builtin_nonscalars": [
                    "self"
                ],
                "test_isscalar_numpy_array_scalars": [
                    "self"
                ],
                "test_isscalar_numpy_zerodim_arrays": [
                    "self"
                ],
                "test_isscalar_numpy_arrays": [
                    "self"
                ],
                "test_isscalar_pandas_scalars": [
                    "self"
                ],
                "test_isscalar_pandas_containers": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_expressions": {
            "TestExpressions": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "run_arithmetic_test": [
                    "self",
                    "df",
                    "other",
                    "assert_func",
                    "check_dtype",
                    "test_flex"
                ],
                "test_integer_arithmetic": [
                    "self"
                ],
                "run_binary_test": [
                    "self",
                    "df",
                    "other",
                    "assert_func",
                    "test_flex",
                    "numexpr_ops"
                ],
                "run_frame": [
                    "self",
                    "df",
                    "other",
                    "binary_comp",
                    "run_binary"
                ],
                "run_series": [
                    "self",
                    "ser",
                    "other",
                    "binary_comp"
                ],
                "run_panel": [
                    "self",
                    "panel",
                    "other",
                    "binary_comp",
                    "run_binary",
                    "assert_func"
                ],
                "test_integer_arithmetic_frame": [
                    "self"
                ],
                "test_integer_arithmetic_series": [
                    "self"
                ],
                "test_integer_panel": [
                    "self"
                ],
                "test_float_arithemtic_frame": [
                    "self"
                ],
                "test_float_arithmetic_series": [
                    "self"
                ],
                "test_float_panel": [
                    "self"
                ],
                "test_panel4d": [
                    "self"
                ],
                "test_mixed_arithmetic_frame": [
                    "self"
                ],
                "test_mixed_arithmetic_series": [
                    "self"
                ],
                "test_mixed_panel": [
                    "self"
                ],
                "test_float_arithemtic": [
                    "self"
                ],
                "test_mixed_arithmetic": [
                    "self"
                ],
                "test_integer_with_zeros": [
                    "self"
                ],
                "test_invalid": [
                    "self"
                ],
                "test_binary_ops": [
                    "self"
                ],
                "test_boolean_ops": [
                    "self"
                ],
                "test_where": [
                    "self"
                ],
                "test_bool_ops_raise_on_arithmetic": [
                    "self"
                ],
                "test_bool_ops_warn_on_arithmetic": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_util": {
            "test_rands": [],
            "test_rands_array": [],
            "TestDecorators": {
                "setUp": [
                    "self"
                ],
                "test_deprecate_kwarg": [
                    "self"
                ],
                "test_dict_deprecate_kwarg": [
                    "self"
                ],
                "test_missing_deprecate_kwarg": [
                    "self"
                ],
                "test_callable_deprecate_kwarg": [
                    "self"
                ],
                "test_bad_deprecate_kwarg": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_format": {
            "curpath": [],
            "has_info_repr": [
                "df"
            ],
            "has_non_verbose_info_repr": [
                "df"
            ],
            "has_horizontally_truncated_repr": [
                "df"
            ],
            "has_vertically_truncated_repr": [
                "df"
            ],
            "has_truncated_repr": [
                "df"
            ],
            "has_doubly_truncated_repr": [
                "df"
            ],
            "has_expanded_repr": [
                "df"
            ],
            "_three_digit_exp": [],
            "TestDataFrameFormatting": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_repr_embedded_ndarray": [
                    "self"
                ],
                "test_eng_float_formatter": [
                    "self"
                ],
                "test_show_null_counts": [
                    "self"
                ],
                "test_repr_tuples": [
                    "self"
                ],
                "test_repr_truncation": [
                    "self"
                ],
                "test_repr_chop_threshold": [
                    "self"
                ],
                "test_repr_obeys_max_seq_limit": [
                    "self"
                ],
                "test_repr_is_valid_construction_code": [
                    "self"
                ],
                "test_repr_should_return_str": [
                    "self"
                ],
                "test_repr_no_backslash": [
                    "self"
                ],
                "test_expand_frame_repr": [
                    "self"
                ],
                "test_repr_non_interactive": [
                    "self"
                ],
                "test_repr_max_columns_max_rows": [
                    "self"
                ],
                "test_auto_detect": [
                    "self"
                ],
                "test_to_string_repr_unicode": [
                    "self"
                ],
                "test_to_string_unicode_columns": [
                    "self"
                ],
                "test_to_string_utf8_columns": [
                    "self"
                ],
                "test_to_string_unicode_two": [
                    "self"
                ],
                "test_to_string_unicode_three": [
                    "self"
                ],
                "test_to_string_with_formatters": [
                    "self"
                ],
                "test_to_string_with_formatters_unicode": [
                    "self"
                ],
                "test_to_string_buffer_all_unicode": [
                    "self"
                ],
                "test_to_string_with_col_space": [
                    "self"
                ],
                "test_to_string_truncate_indices": [
                    "self"
                ],
                "test_to_string_truncate_multilevel": [
                    "self"
                ],
                "test_to_html_with_col_space": [
                    "self"
                ],
                "test_to_html_with_empty_string_label": [
                    "self"
                ],
                "test_to_html_unicode": [
                    "self"
                ],
                "test_to_html_escaped": [
                    "self"
                ],
                "test_to_html_escape_disabled": [
                    "self"
                ],
                "test_to_html_multiindex_sparsify_false_multi_sparse": [
                    "self"
                ],
                "test_to_html_multiindex_sparsify": [
                    "self"
                ],
                "test_to_html_index_formatter": [
                    "self"
                ],
                "test_to_html_regression_GH6098": [
                    "self"
                ],
                "test_to_html_truncate": [
                    "self"
                ],
                "test_to_html_truncate_multi_index": [
                    "self"
                ],
                "test_to_html_truncate_multi_index_sparse_off": [
                    "self"
                ],
                "test_nonunicode_nonascii_alignment": [
                    "self"
                ],
                "test_unicode_problem_decoding_as_ascii": [
                    "self"
                ],
                "test_string_repr_encoding": [
                    "self"
                ],
                "test_repr_corner": [
                    "self"
                ],
                "test_frame_info_encoding": [
                    "self"
                ],
                "test_pprint_thing": [
                    "self"
                ],
                "test_wide_repr": [
                    "self"
                ],
                "test_wide_repr_wide_columns": [
                    "self"
                ],
                "test_wide_repr_named": [
                    "self"
                ],
                "test_wide_repr_multiindex": [
                    "self"
                ],
                "test_wide_repr_multiindex_cols": [
                    "self"
                ],
                "test_wide_repr_unicode": [
                    "self"
                ],
                "test_wide_repr_wide_long_columns": [
                    "self"
                ],
                "test_long_series": [
                    "self"
                ],
                "test_index_with_nan": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_to_string_no_header": [
                    "self"
                ],
                "test_to_string_no_index": [
                    "self"
                ],
                "test_to_string_float_formatting": [
                    "self"
                ],
                "test_to_string_small_float_values": [
                    "self"
                ],
                "test_to_string_float_index": [
                    "self"
                ],
                "test_to_string_ascii_error": [
                    "self"
                ],
                "test_to_string_int_formatting": [
                    "self"
                ],
                "test_to_string_index_formatter": [
                    "self"
                ],
                "test_to_string_left_justify_cols": [
                    "self"
                ],
                "test_to_string_format_na": [
                    "self"
                ],
                "test_to_string_line_width": [
                    "self"
                ],
                "test_show_dimensions": [
                    "self"
                ],
                "test_to_html": [
                    "self"
                ],
                "test_to_html_filename": [
                    "self"
                ],
                "test_to_html_with_no_bold": [
                    "self"
                ],
                "test_to_html_columns_arg": [
                    "self"
                ],
                "test_to_html_multiindex": [
                    "self"
                ],
                "test_to_html_justify": [
                    "self"
                ],
                "test_to_html_index": [
                    "self"
                ],
                "test_repr_html": [
                    "self"
                ],
                "test_repr_html_wide": [
                    "self"
                ],
                "test_repr_html_wide_multiindex_cols": [
                    "self"
                ],
                "test_repr_html_long": [
                    "self"
                ],
                "test_repr_html_float": [
                    "self"
                ],
                "test_repr_html_long_multiindex": [
                    "self"
                ],
                "test_repr_html_long_and_wide": [
                    "self"
                ],
                "test_info_repr": [
                    "self"
                ],
                "test_info_repr_max_cols": [
                    "self"
                ],
                "test_info_repr_html": [
                    "self"
                ],
                "test_fake_qtconsole_repr_html": [
                    "self"
                ],
                "test_to_html_with_classes": [
                    "self"
                ],
                "test_pprint_pathological_object": [
                    "self"
                ],
                "test_float_trim_zeros": [
                    "self"
                ],
                "test_dict_entries": [
                    "self"
                ],
                "test_to_latex_filename": [
                    "self"
                ],
                "test_to_latex": [
                    "self"
                ],
                "test_to_latex_multiindex": [
                    "self"
                ],
                "test_to_latex_escape": [
                    "self"
                ],
                "test_to_latex_longtable": [
                    "self"
                ],
                "test_to_latex_escape_special_chars": [
                    "self"
                ],
                "test_to_csv_quotechar": [
                    "self"
                ],
                "test_to_csv_doublequote": [
                    "self"
                ],
                "test_to_csv_escapechar": [
                    "self"
                ],
                "test_csv_to_string": [
                    "self"
                ]
            },
            "TestSeriesFormatting": {
                "setUp": [
                    "self"
                ],
                "test_repr_unicode": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_freq_name_separation": [
                    "self"
                ],
                "test_to_string_mixed": [
                    "self"
                ],
                "test_to_string_float_na_spacing": [
                    "self"
                ],
                "test_unicode_name_in_footer": [
                    "self"
                ],
                "test_float_trim_zeros": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ],
                "test_timedelta64": [
                    "self"
                ],
                "test_mixed_datetime64": [
                    "self"
                ],
                "test_max_multi_index_display": [
                    "self"
                ]
            },
            "TestEngFormatter": {
                "test_eng_float_formatter": [
                    "self"
                ],
                "compare": [
                    "self",
                    "formatter",
                    "input",
                    "output"
                ],
                "compare_all": [
                    "self",
                    "formatter",
                    "in_out"
                ],
                "test_exponents_with_eng_prefix": [
                    "self"
                ],
                "test_exponents_without_eng_prefix": [
                    "self"
                ],
                "test_rounding": [
                    "self"
                ]
            },
            "TestFloatArrayFormatter": {
                "test_misc": [
                    "self"
                ],
                "test_format": [
                    "self"
                ]
            },
            "TestRepr_timedelta64": {
                "test_none": [
                    "self"
                ],
                "test_even_day": [
                    "self"
                ],
                "test_sub_day": [
                    "self"
                ],
                "test_long": [
                    "self"
                ],
                "test_all": [
                    "self"
                ]
            },
            "TestTimedelta64Formatter": {
                "test_days": [
                    "self"
                ],
                "test_days_neg": [
                    "self"
                ],
                "test_subdays": [
                    "self"
                ],
                "test_subdays_neg": [
                    "self"
                ],
                "test_zero": [
                    "self"
                ]
            },
            "TestDatetime64Formatter": {
                "test_mixed": [
                    "self"
                ],
                "test_dates": [
                    "self"
                ],
                "test_date_nanos": [
                    "self"
                ]
            },
            "TestNaTFormatting": {
                "test_repr": [
                    "self"
                ],
                "test_str": [
                    "self"
                ]
            },
            "TestDatetimeIndexFormat": {
                "test_datetime": [
                    "self"
                ],
                "test_date": [
                    "self"
                ],
                "test_date_tz": [
                    "self"
                ],
                "test_date_explict_date_format": [
                    "self"
                ]
            },
            "TestDatetimeIndexUnicode": {
                "test_dates": [
                    "self"
                ],
                "test_mixed": [
                    "self"
                ]
            },
            "TestStringRepTimestamp": {
                "test_no_tz": [
                    "self"
                ],
                "test_tz_pytz": [
                    "self"
                ],
                "test_tz_dateutil": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_frame": {
            "_check_mixed_float": [
                "df",
                "dtype"
            ],
            "_check_mixed_int": [
                "df",
                "dtype"
            ],
            "skip_if_no_ne": [
                "engine"
            ],
            "skip_if_no_pandas_parser": [
                "parser"
            ],
            "CheckIndexing": {
                "test_getitem": [
                    "self"
                ],
                "test_getitem_dupe_cols": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_getitem_iterator": [
                    "self"
                ],
                "test_getitem_list": [
                    "self"
                ],
                "test_setitem_list": [
                    "self"
                ],
                "test_setitem_list_not_dataframe": [
                    "self"
                ],
                "test_setitem_list_of_tuples": [
                    "self"
                ],
                "test_setitem_mulit_index": [
                    "self"
                ],
                "test_inplace_ops_alignment": [
                    "self"
                ],
                "test_inplace_ops_identity": [
                    "self"
                ],
                "test_getitem_boolean": [
                    "self"
                ],
                "test_getitem_boolean_casting": [
                    "self"
                ],
                "test_getitem_boolean_list": [
                    "self"
                ],
                "test_getitem_boolean_iadd": [
                    "self"
                ],
                "test_boolean_index_empty_corner": [
                    "self"
                ],
                "test_getitem_ix_mixed_integer": [
                    "self"
                ],
                "test_getitem_setitem_ix_negative_integers": [
                    "self"
                ],
                "test_getattr": [
                    "self"
                ],
                "test_setattr_column": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_tuple": [
                    "self"
                ],
                "test_setitem_always_copy": [
                    "self"
                ],
                "test_setitem_boolean": [
                    "self"
                ],
                "test_setitem_cast": [
                    "self"
                ],
                "test_setitem_boolean_column": [
                    "self"
                ],
                "test_setitem_corner": [
                    "self"
                ],
                "test_setitem_corner2": [
                    "self"
                ],
                "test_setitem_ambig": [
                    "self"
                ],
                "test_setitem_clear_caches": [
                    "self"
                ],
                "test_setitem_None": [
                    "self"
                ],
                "test_delitem_corner": [
                    "self"
                ],
                "test_getitem_fancy_2d": [
                    "self"
                ],
                "test_slice_floats": [
                    "self"
                ],
                "test_getitem_fancy_slice_integers_step": [
                    "self"
                ],
                "test_getitem_setitem_integer_slice_keyerrors": [
                    "self"
                ],
                "test_setitem_fancy_2d": [
                    "self"
                ],
                "test_fancy_getitem_slice_mixed": [
                    "self"
                ],
                "test_fancy_setitem_int_labels": [
                    "self"
                ],
                "test_fancy_getitem_int_labels": [
                    "self"
                ],
                "test_fancy_index_int_labels_exceptions": [
                    "self"
                ],
                "test_setitem_fancy_mixed_2d": [
                    "self"
                ],
                "test_ix_align": [
                    "self"
                ],
                "test_ix_frame_align": [
                    "self"
                ],
                "test_getitem_setitem_non_ix_labels": [
                    "self"
                ],
                "test_ix_multi_take": [
                    "self"
                ],
                "test_ix_multi_take_nonint_index": [
                    "self"
                ],
                "test_ix_multi_take_multiindex": [
                    "self"
                ],
                "test_ix_dup": [
                    "self"
                ],
                "test_getitem_fancy_1d": [
                    "self"
                ],
                "test_setitem_fancy_1d": [
                    "self"
                ],
                "test_getitem_fancy_scalar": [
                    "self"
                ],
                "test_setitem_fancy_scalar": [
                    "self"
                ],
                "test_getitem_fancy_boolean": [
                    "self"
                ],
                "test_setitem_fancy_boolean": [
                    "self"
                ],
                "test_getitem_fancy_ints": [
                    "self"
                ],
                "test_getitem_setitem_fancy_exceptions": [
                    "self"
                ],
                "test_getitem_setitem_boolean_misaligned": [
                    "self"
                ],
                "test_getitem_setitem_boolean_multi": [
                    "self"
                ],
                "test_getitem_setitem_float_labels": [
                    "self"
                ],
                "test_setitem_single_column_mixed": [
                    "self"
                ],
                "test_setitem_single_column_mixed_datetime": [
                    "self"
                ],
                "test_setitem_frame": [
                    "self"
                ],
                "test_setitem_frame_align": [
                    "self"
                ],
                "test_setitem_fancy_exceptions": [
                    "self"
                ],
                "test_getitem_boolean_missing": [
                    "self"
                ],
                "test_setitem_boolean_missing": [
                    "self"
                ],
                "test_getitem_setitem_ix_duplicates": [
                    "self"
                ],
                "test_getitem_ix_boolean_duplicates_multiple": [
                    "self"
                ],
                "test_getitem_setitem_ix_bool_keyerror": [
                    "self"
                ],
                "test_getitem_list_duplicates": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_iteritems": [
                    "self"
                ],
                "test_lookup": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_set_value_resize": [
                    "self"
                ],
                "test_set_value_with_index_dtype_change": [
                    "self"
                ],
                "test_get_set_value_no_partial_indexing": [
                    "self"
                ],
                "test_single_element_ix_dont_upcast": [
                    "self"
                ],
                "test_irow": [
                    "self"
                ],
                "test_icol": [
                    "self"
                ],
                "test_irow_icol_duplicates": [
                    "self"
                ],
                "test_icol_sparse_propegate_fill_value": [
                    "self"
                ],
                "test_iget_value": [
                    "self"
                ],
                "test_nested_exception": [
                    "self"
                ],
                "test_reverse_reindex_ffill_raises": [
                    "self"
                ],
                "test_reversed_reindex_ffill_raises": [
                    "self"
                ],
                "test_getitem_ix_float_duplicates": [
                    "self"
                ],
                "test_setitem_with_sparse_value": [
                    "self"
                ],
                "test_setitem_with_unaligned_sparse_value": [
                    "self"
                ]
            },
            "SafeForSparse": {
                "test_copy_index_name_checking": [
                    "self"
                ],
                "test_getitem_pop_assign_name": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_join_index": [
                    "self"
                ],
                "test_join_index_more": [
                    "self"
                ],
                "test_join_index_series": [
                    "self"
                ],
                "test_join_overlap": [
                    "self"
                ],
                "test_add_prefix_suffix": [
                    "self"
                ]
            },
            "TestDataFrame": {
                "setUp": [
                    "self"
                ],
                "test_get_axis": [
                    "self"
                ],
                "test_set_index": [
                    "self"
                ],
                "test_set_index_cast": [
                    "self"
                ],
                "test_set_index2": [
                    "self"
                ],
                "test_set_index_nonuniq": [
                    "self"
                ],
                "test_set_index_bug": [
                    "self"
                ],
                "test_set_index_pass_arrays": [
                    "self"
                ],
                "test_set_index_cast_datetimeindex": [
                    "self"
                ],
                "test_set_index_multiindexcolumns": [
                    "self"
                ],
                "test_set_index_empty_column": [
                    "self"
                ],
                "test_set_columns": [
                    "self"
                ],
                "test_keys": [
                    "self"
                ],
                "test_column_contains_typeerror": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_mixed": [
                    "self"
                ],
                "test_constructor_cast_failure": [
                    "self"
                ],
                "test_constructor_dtype_nocast_view": [
                    "self"
                ],
                "test_constructor_dtype_list_data": [
                    "self"
                ],
                "test_constructor_list_frames": [
                    "self"
                ],
                "test_constructor_mixed_dtypes": [
                    "self"
                ],
                "test_constructor_rec": [
                    "self"
                ],
                "test_constructor_bool": [
                    "self"
                ],
                "test_constructor_overflow_int64": [
                    "self"
                ],
                "test_constructor_ordereddict": [
                    "self"
                ],
                "test_constructor_dict": [
                    "self"
                ],
                "test_constructor_multi_index": [
                    "self"
                ],
                "test_constructor_error_msgs": [
                    "self"
                ],
                "test_constructor_with_embedded_frames": [
                    "self"
                ],
                "test_insert_error_msmgs": [
                    "self"
                ],
                "test_constructor_subclass_dict": [
                    "self"
                ],
                "test_constructor_dict_block": [
                    "self"
                ],
                "test_constructor_dict_cast": [
                    "self"
                ],
                "test_constructor_dict_dont_upcast": [
                    "self"
                ],
                "test_constructor_dict_of_tuples": [
                    "self"
                ],
                "test_constructor_dict_multiindex": [
                    "self"
                ],
                "_check_basic_constructor": [
                    "self",
                    "empty"
                ],
                "test_constructor_ndarray": [
                    "self"
                ],
                "test_constructor_maskedarray": [
                    "self"
                ],
                "test_constructor_maskedarray_nonfloat": [
                    "self"
                ],
                "test_constructor_mrecarray": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_scalar_inference": [
                    "self"
                ],
                "test_constructor_arrays_and_scalars": [
                    "self"
                ],
                "test_constructor_DataFrame": [
                    "self"
                ],
                "test_constructor_more": [
                    "self"
                ],
                "test_constructor_empty_list": [
                    "self"
                ],
                "test_constructor_list_of_lists": [
                    "self"
                ],
                "test_constructor_sequence_like": [
                    "self"
                ],
                "test_constructor_iterator": [
                    "self"
                ],
                "test_constructor_generator": [
                    "self"
                ],
                "test_constructor_list_of_dicts": [
                    "self"
                ],
                "test_constructor_list_of_series": [
                    "self"
                ],
                "test_constructor_list_of_derived_dicts": [
                    "self"
                ],
                "test_constructor_ragged": [
                    "self"
                ],
                "test_constructor_scalar": [
                    "self"
                ],
                "test_constructor_Series_copy_bug": [
                    "self"
                ],
                "test_constructor_mixed_dict_and_Series": [
                    "self"
                ],
                "test_constructor_tuples": [
                    "self"
                ],
                "test_constructor_orient": [
                    "self"
                ],
                "test_constructor_Series_named": [
                    "self"
                ],
                "test_constructor_Series_differently_indexed": [
                    "self"
                ],
                "test_constructor_manager_resize": [
                    "self"
                ],
                "test_constructor_from_items": [
                    "self"
                ],
                "test_constructor_mix_series_nonseries": [
                    "self"
                ],
                "test_constructor_miscast_na_int_dtype": [
                    "self"
                ],
                "test_constructor_iterator_failure": [
                    "self"
                ],
                "test_constructor_column_duplicates": [
                    "self"
                ],
                "test_column_dups_operations": [
                    "self"
                ],
                "test_column_dups2": [
                    "self"
                ],
                "test_column_dups_indexing": [
                    "self"
                ],
                "test_column_dups_indexing2": [
                    "self"
                ],
                "test_insert_benchmark": [
                    "self"
                ],
                "test_constructor_single_value": [
                    "self"
                ],
                "test_constructor_with_datetimes": [
                    "self"
                ],
                "test_constructor_for_list_with_dtypes": [
                    "self"
                ],
                "test_not_hashable": [
                    "self"
                ],
                "test_timedeltas": [
                    "self"
                ],
                "test_operators_timedelta64": [
                    "self"
                ],
                "test_datetimelike_setitem_with_inference": [
                    "self"
                ],
                "test_new_empty_index": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_astype_with_exclude_string": [
                    "self"
                ],
                "test_astype_with_view": [
                    "self"
                ],
                "test_astype_cast_nan_int": [
                    "self"
                ],
                "test_array_interface": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_to_dict": [
                    "self"
                ],
                "test_to_dict_invalid_orient": [
                    "self"
                ],
                "test_to_records_dt64": [
                    "self"
                ],
                "test_to_records_with_multindex": [
                    "self"
                ],
                "test_to_records_with_Mapping_type": [
                    "self"
                ],
                "test_from_records_to_records": [
                    "self"
                ],
                "test_from_records_nones": [
                    "self"
                ],
                "test_from_records_iterator": [
                    "self"
                ],
                "test_from_records_tuples_generator": [
                    "self"
                ],
                "test_from_records_lists_generator": [
                    "self"
                ],
                "test_from_records_columns_not_modified": [
                    "self"
                ],
                "test_from_records_decimal": [
                    "self"
                ],
                "test_from_records_duplicates": [
                    "self"
                ],
                "test_from_records_set_index_name": [
                    "self"
                ],
                "test_from_records_misc_brokenness": [
                    "self"
                ],
                "test_from_records_empty": [
                    "self"
                ],
                "test_from_records_empty_with_nonempty_fields_gh3682": [
                    "self"
                ],
                "test_from_records_with_datetimes": [
                    "self"
                ],
                "test_to_records_floats": [
                    "self"
                ],
                "test_to_recods_index_name": [
                    "self"
                ],
                "test_join_str_datetime": [
                    "self"
                ],
                "test_from_records_sequencelike": [
                    "self"
                ],
                "test_from_records_dictlike": [
                    "self"
                ],
                "test_from_records_with_index_data": [
                    "self"
                ],
                "test_from_records_bad_index_column": [
                    "self"
                ],
                "test_from_records_non_tuple": [
                    "self"
                ],
                "test_from_records_len0_with_columns": [
                    "self"
                ],
                "test_get_agg_axis": [
                    "self"
                ],
                "test_nonzero": [
                    "self"
                ],
                "test_repr_empty": [
                    "self"
                ],
                "test_repr_mixed": [
                    "self"
                ],
                "test_repr_mixed_big": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_repr_dimensions": [
                    "self"
                ],
                "test_repr_big": [
                    "self"
                ],
                "test_repr_unsortable": [
                    "self"
                ],
                "test_repr_unicode": [
                    "self"
                ],
                "test_unicode_string_with_unicode": [
                    "self"
                ],
                "test_bytestring_with_unicode": [
                    "self"
                ],
                "test_very_wide_info_repr": [
                    "self"
                ],
                "test_repr_column_name_unicode_truncation_bug": [
                    "self"
                ],
                "test_head_tail": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delitem": [
                    "self"
                ],
                "test_pop": [
                    "self"
                ],
                "test_pop_non_unique_cols": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_iterrows": [
                    "self"
                ],
                "test_itertuples": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_ops_np_scalar": [
                    "self"
                ],
                "test_operators_boolean": [
                    "self"
                ],
                "test_operators_none_as_na": [
                    "self"
                ],
                "test_comparison_invalid": [
                    "self"
                ],
                "test_timestamp_compare": [
                    "self"
                ],
                "test_modulo": [
                    "self"
                ],
                "test_div": [
                    "self"
                ],
                "test_logical_operators": [
                    "self"
                ],
                "test_logical_typeerror": [
                    "self"
                ],
                "test_constructor_lists_to_object_dtype": [
                    "self"
                ],
                "test_constructor_with_nas": [
                    "self"
                ],
                "test_logical_with_nas": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_invert": [
                    "self"
                ],
                "test_first_last_valid": [
                    "self"
                ],
                "test_arith_flex_frame": [
                    "self"
                ],
                "test_binary_ops_align": [
                    "self"
                ],
                "test_arith_mixed": [
                    "self"
                ],
                "test_arith_getitem_commute": [
                    "self"
                ],
                "_test_op": [
                    "df",
                    "op"
                ],
                "test_bool_flex_frame": [
                    "self"
                ],
                "test_arith_flex_series": [
                    "self"
                ],
                "test_arith_non_pandas_object": [
                    "self"
                ],
                "test_combineFrame": [
                    "self"
                ],
                "test_combineSeries": [
                    "self"
                ],
                "test_combineFunc": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_string_comparison": [
                    "self"
                ],
                "test_float_none_comparison": [
                    "self"
                ],
                "test_boolean_comparison": [
                    "self"
                ],
                "test_to_csv_deprecated_options": [
                    "self"
                ],
                "test_to_csv_from_csv": [
                    "self"
                ],
                "test_to_csv_cols_reordering": [
                    "self"
                ],
                "test_to_csv_legacy_raises_on_dupe_cols": [
                    "self"
                ],
                "test_to_csv_new_dupe_cols": [
                    "self"
                ],
                "test_to_csv_moar": [
                    "self"
                ],
                "test_to_csv_from_csv_w_some_infs": [
                    "self"
                ],
                "test_to_csv_from_csv_w_all_infs": [
                    "self"
                ],
                "test_to_csv_no_index": [
                    "self"
                ],
                "test_to_csv_headers": [
                    "self"
                ],
                "test_to_csv_multiindex": [
                    "self"
                ],
                "test_to_csv_float32_nanrep": [
                    "self"
                ],
                "test_to_csv_withcommas": [
                    "self"
                ],
                "test_to_csv_mixed": [
                    "self"
                ],
                "test_to_csv_dups_cols": [
                    "self"
                ],
                "test_to_csv_chunking": [
                    "self"
                ],
                "test_to_csv_bug": [
                    "self"
                ],
                "test_to_csv_unicode": [
                    "self"
                ],
                "test_to_csv_unicode_index_col": [
                    "self"
                ],
                "test_to_csv_stringio": [
                    "self"
                ],
                "test_to_csv_float_format": [
                    "self"
                ],
                "test_to_csv_quoting": [
                    "self"
                ],
                "test_to_csv_unicodewriter_quoting": [
                    "self"
                ],
                "test_to_csv_quote_none": [
                    "self"
                ],
                "test_to_csv_index_no_leading_comma": [
                    "self"
                ],
                "test_to_csv_line_terminators": [
                    "self"
                ],
                "test_to_csv_from_csv_categorical": [
                    "self"
                ],
                "test_to_csv_path_is_none": [
                    "self"
                ],
                "test_info": [
                    "self"
                ],
                "test_info_wide": [
                    "self"
                ],
                "test_info_duplicate_columns": [
                    "self"
                ],
                "test_info_shows_column_dtypes": [
                    "self"
                ],
                "test_info_max_cols": [
                    "self"
                ],
                "test_info_memory_usage": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_convert_objects": [
                    "self"
                ],
                "test_convert_objects_no_conversion": [
                    "self"
                ],
                "test_append_series_dict": [
                    "self"
                ],
                "test_append_list_of_series_dicts": [
                    "self"
                ],
                "test_append_empty_dataframe": [
                    "self"
                ],
                "test_append_dtypes": [
                    "self"
                ],
                "test_asfreq": [
                    "self"
                ],
                "test_asfreq_datetimeindex": [
                    "self"
                ],
                "test_at_time_between_time_datetimeindex": [
                    "self"
                ],
                "test_as_matrix": [
                    "self"
                ],
                "test_as_matrix_duplicates": [
                    "self"
                ],
                "test_ftypes": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_deepcopy": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "_check_method": [
                    "self",
                    "method",
                    "check_minp"
                ],
                "test_corr_pearson": [
                    "self"
                ],
                "test_corr_kendall": [
                    "self"
                ],
                "test_corr_spearman": [
                    "self"
                ],
                "test_corr_non_numeric": [
                    "self"
                ],
                "test_corr_nooverlap": [
                    "self"
                ],
                "test_corr_constant": [
                    "self"
                ],
                "test_corr_int": [
                    "self"
                ],
                "test_cov": [
                    "self"
                ],
                "test_corrwith": [
                    "self"
                ],
                "test_corrwith_with_objects": [
                    "self"
                ],
                "test_corrwith_series": [
                    "self"
                ],
                "test_corrwith_matches_corrcoef": [
                    "self"
                ],
                "test_drop_names": [
                    "self"
                ],
                "test_dropEmptyRows": [
                    "self"
                ],
                "test_dropIncompleteRows": [
                    "self"
                ],
                "test_dropna": [
                    "self"
                ],
                "test_drop_and_dropna_caching": [
                    "self"
                ],
                "test_dropna_corner": [
                    "self"
                ],
                "test_dropna_multiple_axes": [
                    "self"
                ],
                "test_drop_duplicates": [
                    "self"
                ],
                "test_drop_duplicates_deprecated_warning": [
                    "self"
                ],
                "test_drop_duplicates_tuple": [
                    "self"
                ],
                "test_drop_duplicates_NA": [
                    "self"
                ],
                "test_drop_duplicates_inplace": [
                    "self"
                ],
                "test_duplicated_deprecated_warning": [
                    "self"
                ],
                "test_drop_col_still_multiindex": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_fillna_dtype_conversion": [
                    "self"
                ],
                "test_ffill": [
                    "self"
                ],
                "test_bfill": [
                    "self"
                ],
                "test_fillna_skip_certain_blocks": [
                    "self"
                ],
                "test_fillna_inplace": [
                    "self"
                ],
                "test_fillna_dict_series": [
                    "self"
                ],
                "test_fillna_dataframe": [
                    "self"
                ],
                "test_fillna_columns": [
                    "self"
                ],
                "test_fillna_invalid_method": [
                    "self"
                ],
                "test_fillna_invalid_value": [
                    "self"
                ],
                "test_replace_inplace": [
                    "self"
                ],
                "test_regex_replace_scalar": [
                    "self"
                ],
                "test_regex_replace_scalar_inplace": [
                    "self"
                ],
                "test_regex_replace_list_obj": [
                    "self"
                ],
                "test_regex_replace_list_obj_inplace": [
                    "self"
                ],
                "test_regex_replace_list_mixed": [
                    "self"
                ],
                "test_regex_replace_list_mixed_inplace": [
                    "self"
                ],
                "test_regex_replace_dict_mixed": [
                    "self"
                ],
                "test_regex_replace_dict_nested": [
                    "self"
                ],
                "test_regex_replace_dict_nested_gh4115": [
                    "self"
                ],
                "test_regex_replace_list_to_scalar": [
                    "self"
                ],
                "test_regex_replace_str_to_numeric": [
                    "self"
                ],
                "test_regex_replace_regex_list_to_numeric": [
                    "self"
                ],
                "test_regex_replace_series_of_regexes": [
                    "self"
                ],
                "test_regex_replace_numeric_to_object_conversion": [
                    "self"
                ],
                "test_replace_regex_metachar": [
                    "self"
                ],
                "test_replace": [
                    "self"
                ],
                "test_replace_list": [
                    "self"
                ],
                "test_replace_series_dict": [
                    "self"
                ],
                "test_replace_convert": [
                    "self"
                ],
                "test_replace_mixed": [
                    "self"
                ],
                "test_replace_simple_nested_dict": [
                    "self"
                ],
                "test_replace_simple_nested_dict_with_nonexistent_value": [
                    "self"
                ],
                "test_interpolate": [
                    "self"
                ],
                "test_replace_value_is_none": [
                    "self"
                ],
                "test_replace_for_new_dtypes": [
                    "self"
                ],
                "test_replace_dtypes": [
                    "self"
                ],
                "test_replace_input_formats": [
                    "self"
                ],
                "test_replace_limit": [
                    "self"
                ],
                "test_replace_dict_no_regex": [
                    "self"
                ],
                "test_replace_series_no_regex": [
                    "self"
                ],
                "test_replace_dict_tuple_list_ordering_remains_the_same": [
                    "self"
                ],
                "test_replace_doesnt_replace_without_regex": [
                    "self"
                ],
                "test_replace_bool_with_string": [
                    "self"
                ],
                "test_replace_pure_bool_with_string_no_op": [
                    "self"
                ],
                "test_replace_bool_with_bool": [
                    "self"
                ],
                "test_replace_with_dict_with_bool_keys": [
                    "self"
                ],
                "test_replace_truthy": [
                    "self"
                ],
                "test_replace_int_to_int_chain": [
                    "self"
                ],
                "test_replace_str_to_str_chain": [
                    "self"
                ],
                "test_replace_swapping_bug": [
                    "self"
                ],
                "test_replace_period": [
                    "self"
                ],
                "test_replace_datetime": [
                    "self"
                ],
                "test_combine_multiple_frames_dtypes": [
                    "self"
                ],
                "test_ops": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_truncate_copy": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_xs_corner": [
                    "self"
                ],
                "test_xs_duplicates": [
                    "self"
                ],
                "test_xs_keep_level": [
                    "self"
                ],
                "test_pivot": [
                    "self"
                ],
                "test_pivot_duplicates": [
                    "self"
                ],
                "test_pivot_empty": [
                    "self"
                ],
                "test_pivot_integer_bug": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_name_remains": [
                    "self"
                ],
                "test_reindex_int": [
                    "self"
                ],
                "test_reindex_like": [
                    "self"
                ],
                "test_reindex_columns": [
                    "self"
                ],
                "test_reindex_axes": [
                    "self"
                ],
                "test_reindex_fill_value": [
                    "self"
                ],
                "test_reindex_dups": [
                    "self"
                ],
                "test_align": [
                    "self"
                ],
                "_check_align": [
                    "self",
                    "a",
                    "b",
                    "axis",
                    "fill_axis",
                    "how",
                    "method",
                    "limit"
                ],
                "test_align_fill_method_inner": [
                    "self"
                ],
                "test_align_fill_method_outer": [
                    "self"
                ],
                "test_align_fill_method_left": [
                    "self"
                ],
                "test_align_fill_method_right": [
                    "self"
                ],
                "_check_align_fill": [
                    "self",
                    "kind",
                    "meth",
                    "ax",
                    "fax"
                ],
                "test_align_int_fill_bug": [
                    "self"
                ],
                "test_where": [
                    "self"
                ],
                "test_where_bug": [
                    "self"
                ],
                "test_where_datetime": [
                    "self"
                ],
                "test_where_none": [
                    "self"
                ],
                "test_where_align": [
                    "self"
                ],
                "test_where_complex": [
                    "self"
                ],
                "test_mask": [
                    "self"
                ],
                "test_mask_edge_case_1xN_frame": [
                    "self"
                ],
                "test_transpose": [
                    "self"
                ],
                "test_transpose_get_view": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_rename_nocopy": [
                    "self"
                ],
                "test_rename_inplace": [
                    "self"
                ],
                "test_rename_bug": [
                    "self"
                ],
                "test_diff": [
                    "self"
                ],
                "test_diff_timedelta": [
                    "self"
                ],
                "test_diff_mixed_dtype": [
                    "self"
                ],
                "test_diff_neg_n": [
                    "self"
                ],
                "test_diff_float_n": [
                    "self"
                ],
                "test_pct_change": [
                    "self"
                ],
                "test_pct_change_shift_over_nas": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_shift_bool": [
                    "self"
                ],
                "test_shift_empty": [
                    "self"
                ],
                "test_tshift": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_mixed_datetimelike": [
                    "self"
                ],
                "test_apply_empty": [
                    "self"
                ],
                "test_apply_standard_nonunique": [
                    "self"
                ],
                "test_apply_broadcast": [
                    "self"
                ],
                "test_apply_raw": [
                    "self"
                ],
                "test_apply_axis1": [
                    "self"
                ],
                "test_apply_ignore_failures": [
                    "self"
                ],
                "test_apply_mixed_dtype_corner": [
                    "self"
                ],
                "test_apply_empty_infer_type": [
                    "self"
                ],
                "test_apply_with_args_kwds": [
                    "self"
                ],
                "test_apply_yield_list": [
                    "self"
                ],
                "test_apply_reduce_Series": [
                    "self"
                ],
                "test_apply_differently_indexed": [
                    "self"
                ],
                "test_apply_modify_traceback": [
                    "self"
                ],
                "test_apply_bug": [
                    "self"
                ],
                "test_swapaxes": [
                    "self"
                ],
                "test_apply_convert_objects": [
                    "self"
                ],
                "test_apply_attach_name": [
                    "self"
                ],
                "test_apply_multi_index": [
                    "self"
                ],
                "test_applymap": [
                    "self"
                ],
                "test_filter": [
                    "self"
                ],
                "test_filter_regex_search": [
                    "self"
                ],
                "test_filter_corner": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_sort_index": [
                    "self"
                ],
                "test_sort_nan": [
                    "self"
                ],
                "test_stable_descending_sort": [
                    "self"
                ],
                "test_stable_descending_multicolumn_sort": [
                    "self"
                ],
                "test_sort_index_multicolumn": [
                    "self"
                ],
                "test_sort_index_inplace": [
                    "self"
                ],
                "test_sort_index_different_sortorder": [
                    "self"
                ],
                "test_sort_inplace": [
                    "self"
                ],
                "test_sort_index_duplicates": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_sort_datetimes": [
                    "self"
                ],
                "test_frame_column_inplace_sort_exception": [
                    "self"
                ],
                "test_combine_first": [
                    "self"
                ],
                "test_combine_first_mixed_bug": [
                    "self"
                ],
                "test_update": [
                    "self"
                ],
                "test_update_dtypes": [
                    "self"
                ],
                "test_update_nooverwrite": [
                    "self"
                ],
                "test_update_filtered": [
                    "self"
                ],
                "test_update_raise": [
                    "self"
                ],
                "test_update_from_non_df": [
                    "self"
                ],
                "test_combineAdd": [
                    "self"
                ],
                "test_combineMult": [
                    "self"
                ],
                "test_combine_generic": [
                    "self"
                ],
                "test_clip": [
                    "self"
                ],
                "test_dataframe_clip": [
                    "self"
                ],
                "test_get_X_columns": [
                    "self"
                ],
                "test_is_mixed_type": [
                    "self"
                ],
                "test_get_numeric_data": [
                    "self"
                ],
                "test_bool_describe_in_mixed_frame": [
                    "self"
                ],
                "test_reduce_mixed_frame": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_stat_operators_attempt_obj_array": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_product": [
                    "self"
                ],
                "test_median": [
                    "self"
                ],
                "test_min": [
                    "self"
                ],
                "test_cummin": [
                    "self"
                ],
                "test_cummax": [
                    "self"
                ],
                "test_max": [
                    "self"
                ],
                "test_mad": [
                    "self"
                ],
                "test_var_std": [
                    "self"
                ],
                "test_sem": [
                    "self"
                ],
                "test_skew": [
                    "self"
                ],
                "test_kurt": [
                    "self"
                ],
                "_check_stat_op": [
                    "self",
                    "name",
                    "alternative",
                    "frame",
                    "has_skipna",
                    "has_numeric_only",
                    "check_dtype",
                    "check_dates",
                    "check_less_precise"
                ],
                "test_mode": [
                    "self"
                ],
                "test_sum_corner": [
                    "self"
                ],
                "test_sum_object": [
                    "self"
                ],
                "test_sum_bool": [
                    "self"
                ],
                "test_mean_corner": [
                    "self"
                ],
                "test_stats_mixed_type": [
                    "self"
                ],
                "test_median_corner": [
                    "self"
                ],
                "test_quantile": [
                    "self"
                ],
                "test_quantile_multi": [
                    "self"
                ],
                "test_quantile_datetime": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "test_cumprod": [
                    "self"
                ],
                "test_rank": [
                    "self"
                ],
                "test_rank2": [
                    "self"
                ],
                "test_rank_na_option": [
                    "self"
                ],
                "test_axis_aliases": [
                    "self"
                ],
                "test_combine_first_mixed": [
                    "self"
                ],
                "test_more_asMatrix": [
                    "self"
                ],
                "test_reindex_boolean": [
                    "self"
                ],
                "test_reindex_objects": [
                    "self"
                ],
                "test_reindex_corner": [
                    "self"
                ],
                "test_reindex_axis": [
                    "self"
                ],
                "test_reindex_with_nans": [
                    "self"
                ],
                "test_reindex_multi": [
                    "self"
                ],
                "test_rename_objects": [
                    "self"
                ],
                "test_fill_corner": [
                    "self"
                ],
                "test_count_objects": [
                    "self"
                ],
                "test_cumsum_corner": [
                    "self"
                ],
                "test_stack_unstack": [
                    "self"
                ],
                "test_stack_ints": [
                    "self"
                ],
                "test_unstack_bool": [
                    "self"
                ],
                "test_unstack_to_series": [
                    "self"
                ],
                "test_unstack_dtypes": [
                    "self"
                ],
                "test_unstack_non_unique_index_names": [
                    "self"
                ],
                "test_stack_datetime_column_multiIndex": [
                    "self"
                ],
                "test_repr_with_mi_nat": [
                    "self"
                ],
                "test_reset_index": [
                    "self"
                ],
                "test_reset_index_right_dtype": [
                    "self"
                ],
                "test_reset_index_multiindex_col": [
                    "self"
                ],
                "test_reset_index_with_datetimeindex_cols": [
                    "self"
                ],
                "test_as_matrix_numeric_cols": [
                    "self"
                ],
                "test_as_matrix_lcd": [
                    "self"
                ],
                "test_constructor_with_convert": [
                    "self"
                ],
                "test_construction_with_mixed": [
                    "self"
                ],
                "test_construction_with_conversions": [
                    "self"
                ],
                "test_constructor_frame_copy": [
                    "self"
                ],
                "test_constructor_ndarray_copy": [
                    "self"
                ],
                "test_constructor_series_copy": [
                    "self"
                ],
                "test_constructor_compound_dtypes": [
                    "self"
                ],
                "test_assign_columns": [
                    "self"
                ],
                "test_columns_with_dups": [
                    "self"
                ],
                "test_insert_column_bug_4032": [
                    "self"
                ],
                "test_cast_internals": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_consolidate_inplace": [
                    "self"
                ],
                "test_as_matrix_consolidate": [
                    "self"
                ],
                "test_modify_values": [
                    "self"
                ],
                "test_boolean_set_uncons": [
                    "self"
                ],
                "test_xs_view": [
                    "self"
                ],
                "test_boolean_indexing": [
                    "self"
                ],
                "test_boolean_indexing_mixed": [
                    "self"
                ],
                "test_sum_bools": [
                    "self"
                ],
                "test_fillna_col_reordering": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_iterkv_deprecation": [
                    "self"
                ],
                "test_iterkv_names": [
                    "self"
                ],
                "test_series_put_names": [
                    "self"
                ],
                "test_dot": [
                    "self"
                ],
                "test_idxmin": [
                    "self"
                ],
                "test_idxmax": [
                    "self"
                ],
                "test_stale_cached_series_bug_473": [
                    "self"
                ],
                "test_index_namedtuple": [
                    "self"
                ],
                "test_empty_nonzero": [
                    "self"
                ],
                "test_any_all": [
                    "self"
                ],
                "test_consolidate_datetime64": [
                    "self"
                ],
                "_check_bool_op": [
                    "self",
                    "name",
                    "alternative",
                    "frame",
                    "has_skipna",
                    "has_bool_only"
                ],
                "test_strange_column_corruption_issue": [
                    "self"
                ],
                "test_inplace_return_self": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_isin_empty": [
                    "self"
                ],
                "test_isin_dict": [
                    "self"
                ],
                "test_isin_with_string_scalar": [
                    "self"
                ],
                "test_isin_df": [
                    "self"
                ],
                "test_isin_df_dupe_values": [
                    "self"
                ],
                "test_isin_dupe_self": [
                    "self"
                ],
                "test_isin_against_series": [
                    "self"
                ],
                "test_isin_multiIndex": [
                    "self"
                ],
                "test_to_csv_date_format": [
                    "self"
                ],
                "test_concat_empty_dataframe_dtypes": [
                    "self"
                ],
                "test_empty_frame_dtypes_ftypes": [
                    "self"
                ],
                "test_dtypes_are_correct_after_column_slice": [
                    "self"
                ],
                "test_set_index_names": [
                    "self"
                ],
                "test_select_dtypes_include": [
                    "self"
                ],
                "test_select_dtypes_exclude": [
                    "self"
                ],
                "test_select_dtypes_exclude_include": [
                    "self"
                ],
                "test_select_dtypes_not_an_attr_but_still_valid_dtype": [
                    "self"
                ],
                "test_select_dtypes_empty": [
                    "self"
                ],
                "test_select_dtypes_raises_on_string": [
                    "self"
                ],
                "test_select_dtypes_bad_datetime64": [
                    "self"
                ],
                "test_select_dtypes_str_raises": [
                    "self"
                ],
                "test_select_dtypes_bad_arg_raises": [
                    "self"
                ]
            },
            "TestDataFrameQueryWithMultiIndex": {
                "check_query_with_named_multiindex": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_named_multiindex": [
                    "self"
                ],
                "check_query_with_unnamed_multiindex": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_unnamed_multiindex": [
                    "self"
                ],
                "check_query_with_partially_named_multiindex": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_partially_named_multiindex": [
                    "self"
                ],
                "test_query_multiindex_get_index_resolvers": [
                    "self"
                ],
                "check_query_multiindex_get_index_resolvers": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_raise_on_panel_with_multiindex": [
                    "self"
                ],
                "check_raise_on_panel_with_multiindex": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_raise_on_panel4d_with_multiindex": [
                    "self"
                ],
                "check_raise_on_panel4d_with_multiindex": [
                    "self",
                    "parser",
                    "engine"
                ]
            },
            "TestDataFrameQueryNumExprPandas": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "test_date_query_with_attribute_access": [
                    "self"
                ],
                "test_date_query_no_attribute_access": [
                    "self"
                ],
                "test_date_query_with_NaT": [
                    "self"
                ],
                "test_date_index_query": [
                    "self"
                ],
                "test_date_index_query_with_NaT": [
                    "self"
                ],
                "test_date_index_query_with_NaT_duplicates": [
                    "self"
                ],
                "test_date_query_with_non_date": [
                    "self"
                ],
                "test_query_syntax_error": [
                    "self"
                ],
                "test_query_scope": [
                    "self"
                ],
                "test_query_doesnt_pickup_local": [
                    "self"
                ],
                "test_query_builtin": [
                    "self"
                ],
                "test_query": [
                    "self"
                ],
                "test_query_index_with_name": [
                    "self"
                ],
                "test_query_index_without_name": [
                    "self"
                ],
                "test_nested_scope": [
                    "self"
                ],
                "test_nested_raises_on_local_self_reference": [
                    "self"
                ],
                "test_local_syntax": [
                    "self"
                ],
                "test_chained_cmp_and_in": [
                    "self"
                ],
                "test_local_variable_with_in": [
                    "self"
                ],
                "test_at_inside_string": [
                    "self"
                ],
                "test_query_undefined_local": [
                    "self"
                ],
                "test_index_resolvers_come_after_columns_with_the_same_name": [
                    "self"
                ],
                "test_inf": [
                    "self"
                ]
            },
            "TestDataFrameQueryNumExprPython": {
                "setUpClass": [
                    "cls"
                ],
                "test_date_query_no_attribute_access": [
                    "self"
                ],
                "test_date_query_with_NaT": [
                    "self"
                ],
                "test_date_index_query": [
                    "self"
                ],
                "test_date_index_query_with_NaT": [
                    "self"
                ],
                "test_date_index_query_with_NaT_duplicates": [
                    "self"
                ],
                "test_nested_scope": [
                    "self"
                ]
            },
            "TestDataFrameQueryPythonPandas": {
                "setUpClass": [
                    "cls"
                ],
                "test_query_builtin": [
                    "self"
                ]
            },
            "TestDataFrameQueryPythonPython": {
                "setUpClass": [
                    "cls"
                ],
                "test_query_builtin": [
                    "self"
                ]
            },
            "TestDataFrameQueryStrings": {
                "check_str_query_method": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_str_query_method": [
                    "self"
                ],
                "test_str_list_query_method": [
                    "self"
                ],
                "check_str_list_query_method": [
                    "self",
                    "parser",
                    "engine"
                ],
                "check_query_with_string_columns": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_string_columns": [
                    "self"
                ],
                "check_object_array_eq_ne": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_object_array_eq_ne": [
                    "self"
                ],
                "check_query_with_nested_strings": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_nested_string": [
                    "self"
                ],
                "check_query_with_nested_special_character": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_with_nested_special_character": [
                    "self"
                ],
                "check_query_lex_compare_strings": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_lex_compare_strings": [
                    "self"
                ],
                "check_query_single_element_booleans": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_single_element_booleans": [
                    "self"
                ],
                "check_query_string_scalar_variable": [
                    "self",
                    "parser",
                    "engine"
                ],
                "test_query_string_scalar_variable": [
                    "self"
                ]
            },
            "TestDataFrameEvalNumExprPandas": {
                "setUpClass": [
                    "cls"
                ],
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_simple_expr": [
                    "self"
                ],
                "test_bool_arith_expr": [
                    "self"
                ],
                "test_invalid_type_for_operator_raises": [
                    "self"
                ]
            },
            "TestDataFrameEvalNumExprPython": {
                "setUpClass": [
                    "cls"
                ]
            },
            "TestDataFrameEvalPythonPandas": {
                "setUpClass": [
                    "cls"
                ]
            },
            "TestDataFrameEvalPythonPython": {
                "setUpClass": [
                    "cls"
                ]
            }
        },
        "pandas.tests.test_nanops": {
            "TestnanopsDataFrame": {
                "setUp": [
                    "self"
                ],
                "check_results": [
                    "self",
                    "targ",
                    "res",
                    "axis"
                ],
                "check_fun_data": [
                    "self",
                    "testfunc",
                    "targfunc",
                    "testarval",
                    "targarval",
                    "targarnanval"
                ],
                "check_fun": [
                    "self",
                    "testfunc",
                    "targfunc",
                    "testar",
                    "targar",
                    "targarnan"
                ],
                "check_funs": [
                    "self",
                    "testfunc",
                    "targfunc",
                    "allow_complex",
                    "allow_all_nan",
                    "allow_str",
                    "allow_date",
                    "allow_tdelta",
                    "allow_obj"
                ],
                "check_funs_ddof": [
                    "self",
                    "testfunc",
                    "targfunc",
                    "allow_complex",
                    "allow_all_nan",
                    "allow_str",
                    "allow_date",
                    "allow_tdelta",
                    "allow_obj"
                ],
                "_badobj_wrap": [
                    "self",
                    "value",
                    "func",
                    "allow_complex"
                ],
                "test_nanany": [
                    "self"
                ],
                "test_nanall": [
                    "self"
                ],
                "test_nansum": [
                    "self"
                ],
                "test_nanmean": [
                    "self"
                ],
                "test_nanmedian": [
                    "self"
                ],
                "test_nanvar": [
                    "self"
                ],
                "test_nanstd": [
                    "self"
                ],
                "test_nansem": [
                    "self"
                ],
                "_minmax_wrap": [
                    "self",
                    "value",
                    "axis",
                    "func"
                ],
                "test_nanmin": [
                    "self"
                ],
                "test_nanmax": [
                    "self"
                ],
                "_argminmax_wrap": [
                    "self",
                    "value",
                    "axis",
                    "func"
                ],
                "test_nanargmax": [
                    "self"
                ],
                "test_nanargmin": [
                    "self"
                ],
                "_skew_kurt_wrap": [
                    "self",
                    "values",
                    "axis",
                    "func"
                ],
                "test_nanskew": [
                    "self"
                ],
                "test_nankurt": [
                    "self"
                ],
                "test_nanprod": [
                    "self"
                ],
                "check_nancorr_nancov_2d": [
                    "self",
                    "checkfun",
                    "targ0",
                    "targ1"
                ],
                "check_nancorr_nancov_1d": [
                    "self",
                    "checkfun",
                    "targ0",
                    "targ1"
                ],
                "test_nancorr": [
                    "self"
                ],
                "test_nancorr_pearson": [
                    "self"
                ],
                "test_nancorr_kendall": [
                    "self"
                ],
                "test_nancorr_spearman": [
                    "self"
                ],
                "test_nancov": [
                    "self"
                ],
                "check_nancomp": [
                    "self",
                    "checkfun",
                    "targ0"
                ],
                "test_nangt": [
                    "self"
                ],
                "test_nange": [
                    "self"
                ],
                "test_nanlt": [
                    "self"
                ],
                "test_nanle": [
                    "self"
                ],
                "test_naneq": [
                    "self"
                ],
                "test_nanne": [
                    "self"
                ],
                "check_bool": [
                    "self",
                    "func",
                    "value",
                    "correct"
                ],
                "test__has_infs": [
                    "self"
                ],
                "test__isfinite": [
                    "self"
                ],
                "test__bn_ok_dtype": [
                    "self"
                ]
            },
            "TestEnsureNumeric": {
                "test_numeric_values": [
                    "self"
                ],
                "test_ndarray": [
                    "self"
                ],
                "test_convertable_values": [
                    "self"
                ],
                "test_non_convertable_values": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_reshape": {
            "TestMelt": {
                "setUp": [
                    "self"
                ],
                "test_default_col_names": [
                    "self"
                ],
                "test_value_vars": [
                    "self"
                ],
                "test_custom_var_name": [
                    "self"
                ],
                "test_custom_value_name": [
                    "self"
                ],
                "test_custom_var_and_value_name": [
                    "self"
                ],
                "test_col_level": [
                    "self"
                ],
                "test_multiindex": [
                    "self"
                ]
            },
            "TestGetDummies": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_just_na": [
                    "self"
                ],
                "test_include_na": [
                    "self"
                ],
                "test_unicode": [
                    "self"
                ],
                "test_dataframe_dummies_all_obj": [
                    "self"
                ],
                "test_dataframe_dummies_mix_default": [
                    "self"
                ],
                "test_dataframe_dummies_prefix_list": [
                    "self"
                ],
                "test_datafrmae_dummies_prefix_str": [
                    "self"
                ],
                "test_dataframe_dummies_subset": [
                    "self"
                ],
                "test_dataframe_dummies_prefix_sep": [
                    "self"
                ],
                "test_dataframe_dummies_prefix_bad_length": [
                    "self"
                ],
                "test_dataframe_dummies_prefix_sep_bad_length": [
                    "self"
                ],
                "test_dataframe_dummies_prefix_dict": [
                    "self"
                ],
                "test_dataframe_dummies_with_na": [
                    "self"
                ],
                "test_dataframe_dummies_with_categorical": [
                    "self"
                ]
            },
            "TestConvertDummies": {
                "test_convert_dummies": [
                    "self"
                ]
            },
            "TestLreshape": {
                "test_pairs": [
                    "self"
                ]
            },
            "TestWideToLong": {
                "test_simple": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_base": {
            "CheckStringMixin": {
                "test_string_methods_dont_fail": [
                    "self"
                ],
                "test_tricky_container": [
                    "self"
                ]
            },
            "CheckImmutable": {
                "check_mutable_error": [
                    "self"
                ],
                "test_no_mutable_funcs": [
                    "self"
                ],
                "test_slicing_maintains_type": [
                    "self"
                ],
                "check_result": [
                    "self",
                    "result",
                    "expected",
                    "klass"
                ]
            },
            "TestFrozenList": {
                "setUp": [
                    "self"
                ],
                "test_add": [
                    "self"
                ],
                "test_inplace": [
                    "self"
                ]
            },
            "TestFrozenNDArray": {
                "setUp": [
                    "self"
                ],
                "test_shallow_copying": [
                    "self"
                ],
                "test_values": [
                    "self"
                ]
            },
            "TestPandasDelegate": {
                "setUp": [
                    "self"
                ],
                "test_invalida_delgation": [
                    "self"
                ]
            },
            "Ops": {
                "setUp": [
                    "self"
                ],
                "check_ops_properties": [
                    "self",
                    "props",
                    "filter",
                    "ignore_failures"
                ]
            },
            "TestIndexOps": {
                "setUp": [
                    "self"
                ],
                "test_ndarray_compat_properties": [
                    "self"
                ],
                "test_ops": [
                    "self"
                ],
                "test_nanops": [
                    "self"
                ],
                "test_value_counts_unique_nunique": [
                    "self"
                ],
                "test_value_counts_inferred": [
                    "self"
                ],
                "test_factorize": [
                    "self"
                ],
                "test_duplicated_drop_duplicates": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_groupby": {
            "_skip_if_mpl_not_installed": [],
            "commonSetUp": [
                "self"
            ],
            "assert_fp_equal": [
                "a",
                "b"
            ],
            "_check_groupby": [
                "df",
                "result",
                "keys",
                "field",
                "f"
            ],
            "test_decons": [],
            "TestGroupBy": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_select_bad_cols": [
                    "self"
                ],
                "test_first_last_nth": [
                    "self"
                ],
                "test_first_last_nth_dtypes": [
                    "self"
                ],
                "test_nth": [
                    "self"
                ],
                "test_grouper_index_types": [
                    "self"
                ],
                "test_grouper_multilevel_freq": [
                    "self"
                ],
                "test_grouper_iter": [
                    "self"
                ],
                "test_empty_groups": [
                    "self"
                ],
                "test_groupby_grouper": [
                    "self"
                ],
                "test_groupby_duplicated_column_errormsg": [
                    "self"
                ],
                "test_groupby_dict_mapping": [
                    "self"
                ],
                "test_groupby_bounds_check": [
                    "self"
                ],
                "test_groupby_grouper_f_sanity_checked": [
                    "self"
                ],
                "test_groupby_nonobject_dtype": [
                    "self"
                ],
                "test_groupby_return_type": [
                    "self"
                ],
                "test_agg_api": [
                    "self"
                ],
                "test_agg_regression1": [
                    "self"
                ],
                "test_agg_datetimes_mixed": [
                    "self"
                ],
                "test_agg_period_index": [
                    "self"
                ],
                "test_agg_must_agg": [
                    "self"
                ],
                "test_agg_ser_multi_key": [
                    "self"
                ],
                "test_get_group": [
                    "self"
                ],
                "test_get_group_grouped_by_tuple": [
                    "self"
                ],
                "test_agg_apply_corner": [
                    "self"
                ],
                "test_agg_grouping_is_list_tuple": [
                    "self"
                ],
                "test_grouping_error_on_multidim_input": [
                    "self"
                ],
                "test_agg_python_multiindex": [
                    "self"
                ],
                "test_apply_describe_bug": [
                    "self"
                ],
                "test_apply_issues": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_groups": [
                    "self"
                ],
                "test_aggregate_str_func": [
                    "self"
                ],
                "test_aggregate_item_by_item": [
                    "self"
                ],
                "test_agg_item_by_item_raise_typeerror": [
                    "self"
                ],
                "test_basic_regression": [
                    "self"
                ],
                "test_transform": [
                    "self"
                ],
                "test_transform_fast": [
                    "self"
                ],
                "test_transform_broadcast": [
                    "self"
                ],
                "test_transform_bug": [
                    "self"
                ],
                "test_transform_multiple": [
                    "self"
                ],
                "test_dispatch_transform": [
                    "self"
                ],
                "test_transform_select_columns": [
                    "self"
                ],
                "test_transform_exclude_nuisance": [
                    "self"
                ],
                "test_transform_function_aliases": [
                    "self"
                ],
                "test_with_na": [
                    "self"
                ],
                "test_groupby_transform_with_int": [
                    "self"
                ],
                "test_indices_concatenation_order": [
                    "self"
                ],
                "test_attr_wrapper": [
                    "self"
                ],
                "test_series_describe_multikey": [
                    "self"
                ],
                "test_series_describe_single": [
                    "self"
                ],
                "test_series_agg_multikey": [
                    "self"
                ],
                "test_series_agg_multi_pure_python": [
                    "self"
                ],
                "test_series_index_name": [
                    "self"
                ],
                "test_frame_describe_multikey": [
                    "self"
                ],
                "test_frame_groupby": [
                    "self"
                ],
                "test_grouping_is_iterable": [
                    "self"
                ],
                "test_frame_groupby_columns": [
                    "self"
                ],
                "test_frame_set_name_single": [
                    "self"
                ],
                "test_multi_iter": [
                    "self"
                ],
                "test_multi_iter_frame": [
                    "self"
                ],
                "test_multi_iter_panel": [
                    "self"
                ],
                "test_multi_func": [
                    "self"
                ],
                "test_multi_key_multiple_functions": [
                    "self"
                ],
                "test_frame_multi_key_function_list": [
                    "self"
                ],
                "test_groupby_multiple_columns": [
                    "self"
                ],
                "test_groupby_as_index_agg": [
                    "self"
                ],
                "test_mulitindex_passthru": [
                    "self"
                ],
                "test_multifunc_select_col_integer_cols": [
                    "self"
                ],
                "test_as_index_series_return_frame": [
                    "self"
                ],
                "test_groupby_as_index_cython": [
                    "self"
                ],
                "test_groupby_as_index_series_scalar": [
                    "self"
                ],
                "test_groupby_as_index_corner": [
                    "self"
                ],
                "test_groupby_as_index_apply": [
                    "self"
                ],
                "test_groupby_head_tail": [
                    "self"
                ],
                "test_groupby_multiple_key": [
                    "self"
                ],
                "test_groupby_multi_corner": [
                    "self"
                ],
                "test_omit_nuisance": [
                    "self"
                ],
                "test_omit_nuisance_python_multiple": [
                    "self"
                ],
                "test_empty_groups_corner": [
                    "self"
                ],
                "test_apply_concat_preserve_names": [
                    "self"
                ],
                "test_nonsense_func": [
                    "self"
                ],
                "test_builtins_apply": [
                    "self"
                ],
                "test_cythonized_aggers": [
                    "self"
                ],
                "test_max_min_non_numeric": [
                    "self"
                ],
                "test_cython_agg_boolean": [
                    "self"
                ],
                "test_cython_agg_nothing_to_agg": [
                    "self"
                ],
                "test_cython_agg_nothing_to_agg_with_dates": [
                    "self"
                ],
                "test_groupby_timedelta_cython_count": [
                    "self"
                ],
                "test_cython_agg_frame_columns": [
                    "self"
                ],
                "test_wrap_aggregated_output_multindex": [
                    "self"
                ],
                "test_groupby_level": [
                    "self"
                ],
                "test_groupby_level_index_names": [
                    "self"
                ],
                "test_groupby_level_with_nas": [
                    "self"
                ],
                "test_groupby_level_apply": [
                    "self"
                ],
                "test_groupby_level_mapper": [
                    "self"
                ],
                "test_groupby_level_0_nonmulti": [
                    "self"
                ],
                "test_level_preserve_order": [
                    "self"
                ],
                "test_grouping_labels": [
                    "self"
                ],
                "test_cython_fail_agg": [
                    "self"
                ],
                "test_apply_series_to_frame": [
                    "self"
                ],
                "test_apply_series_yield_constant": [
                    "self"
                ],
                "test_apply_frame_to_series": [
                    "self"
                ],
                "test_apply_frame_concat_series": [
                    "self"
                ],
                "test_apply_transform": [
                    "self"
                ],
                "test_apply_multikey_corner": [
                    "self"
                ],
                "test_mutate_groups": [
                    "self"
                ],
                "test_no_mutate_but_looks_like": [
                    "self"
                ],
                "test_apply_chunk_view": [
                    "self"
                ],
                "test_apply_no_name_column_conflict": [
                    "self"
                ],
                "test_groupby_series_indexed_differently": [
                    "self"
                ],
                "test_groupby_with_hier_columns": [
                    "self"
                ],
                "test_pass_args_kwargs": [
                    "self"
                ],
                "test_size": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_count_object": [
                    "self"
                ],
                "test_count_cross_type": [
                    "self"
                ],
                "test_non_cython_api": [
                    "self"
                ],
                "test_cython_api2": [
                    "self"
                ],
                "test_grouping_ndarray": [
                    "self"
                ],
                "test_agg_consistency": [
                    "self"
                ],
                "test_apply_typecast_fail": [
                    "self"
                ],
                "test_apply_multiindex_fail": [
                    "self"
                ],
                "test_apply_corner": [
                    "self"
                ],
                "test_apply_without_copy": [
                    "self"
                ],
                "test_apply_use_categorical_name": [
                    "self"
                ],
                "test_apply_corner_cases": [
                    "self"
                ],
                "test_transform_mixed_type": [
                    "self"
                ],
                "test_groupby_wrong_multi_labels": [
                    "self"
                ],
                "test_groupby_series_with_name": [
                    "self"
                ],
                "test_seriesgroupby_name_attr": [
                    "self"
                ],
                "test_groupby_name_propagation": [
                    "self"
                ],
                "test_groupby_nonstring_columns": [
                    "self"
                ],
                "test_cython_grouper_series_bug_noncontig": [
                    "self"
                ],
                "test_series_grouper_noncontig_index": [
                    "self"
                ],
                "test_convert_objects_leave_decimal_alone": [
                    "self"
                ],
                "test_fast_apply": [
                    "self"
                ],
                "test_apply_with_mixed_dtype": [
                    "self"
                ],
                "test_groupby_aggregation_mixed_dtype": [
                    "self"
                ],
                "test_groupby_dtype_inference_empty": [
                    "self"
                ],
                "test_groupby_list_infer_array_like": [
                    "self"
                ],
                "test_dictify": [
                    "self"
                ],
                "test_sparse_friendly": [
                    "self"
                ],
                "test_panel_groupby": [
                    "self"
                ],
                "test_numpy_groupby": [
                    "self"
                ],
                "test_groupby_2d_malformed": [
                    "self"
                ],
                "test_int32_overflow": [
                    "self"
                ],
                "test_int64_overflow": [
                    "self"
                ],
                "test_groupby_sort_multi": [
                    "self"
                ],
                "test_intercept_builtin_sum": [
                    "self"
                ],
                "test_column_select_via_attr": [
                    "self"
                ],
                "test_rank_apply": [
                    "self"
                ],
                "test_dont_clobber_name_column": [
                    "self"
                ],
                "test_skip_group_keys": [
                    "self"
                ],
                "test_no_nonsense_name": [
                    "self"
                ],
                "test_wrap_agg_out": [
                    "self"
                ],
                "test_multifunc_sum_bug": [
                    "self"
                ],
                "test_handle_dict_return_value": [
                    "self"
                ],
                "test_getitem_list_of_columns": [
                    "self"
                ],
                "test_agg_multiple_functions_maintain_order": [
                    "self"
                ],
                "test_multiple_functions_tuples_and_non_tuples": [
                    "self"
                ],
                "test_agg_multiple_functions_too_many_lambdas": [
                    "self"
                ],
                "test_more_flexible_frame_multi_function": [
                    "self"
                ],
                "test_multi_function_flexible_mix": [
                    "self"
                ],
                "test_agg_callables": [
                    "self"
                ],
                "test_set_group_name": [
                    "self"
                ],
                "test_no_dummy_key_names": [
                    "self"
                ],
                "test_groupby_categorical": [
                    "self"
                ],
                "test_groupby_groups_datetimeindex": [
                    "self"
                ],
                "test_groupby_groups_datetimeindex_tz": [
                    "self"
                ],
                "test_groupby_reindex_inside_function": [
                    "self"
                ],
                "test_multiindex_columns_empty_level": [
                    "self"
                ],
                "test_cython_median": [
                    "self"
                ],
                "test_groupby_categorical_no_compress": [
                    "self"
                ],
                "test_groupby_first_datetime64": [
                    "self"
                ],
                "test_groupby_max_datetime64": [
                    "self"
                ],
                "test_groupby_datetime64_32_bit": [
                    "self"
                ],
                "test_groupby_categorical_unequal_len": [
                    "self"
                ],
                "test_gb_apply_list_of_unequal_len_arrays": [
                    "self"
                ],
                "test_groupby_with_empty": [
                    "self"
                ],
                "test_groupby_with_timegrouper": [
                    "self"
                ],
                "test_groupby_with_timegrouper_methods": [
                    "self"
                ],
                "test_timegrouper_with_reg_groups": [
                    "self"
                ],
                "test_timegrouper_get_group": [
                    "self"
                ],
                "test_cumcount": [
                    "self"
                ],
                "test_cumcount_empty": [
                    "self"
                ],
                "test_cumcount_dupe_index": [
                    "self"
                ],
                "test_cumcount_mi": [
                    "self"
                ],
                "test_cumcount_groupby_not_col": [
                    "self"
                ],
                "test_filter_series": [
                    "self"
                ],
                "test_filter_single_column_df": [
                    "self"
                ],
                "test_filter_multi_column_df": [
                    "self"
                ],
                "test_filter_mixed_df": [
                    "self"
                ],
                "test_filter_out_all_groups": [
                    "self"
                ],
                "test_filter_out_no_groups": [
                    "self"
                ],
                "test_filter_condition_raises": [
                    "self"
                ],
                "test_filter_bad_shapes": [
                    "self"
                ],
                "test_filter_nan_is_false": [
                    "self"
                ],
                "test_filter_against_workaround": [
                    "self"
                ],
                "test_filter_using_len": [
                    "self"
                ],
                "test_filter_maintains_ordering": [
                    "self"
                ],
                "test_filter_and_transform_with_non_unique_int_index": [
                    "self"
                ],
                "test_filter_and_transform_with_multiple_non_unique_int_index": [
                    "self"
                ],
                "test_filter_and_transform_with_non_unique_float_index": [
                    "self"
                ],
                "test_filter_and_transform_with_non_unique_timestamp_index": [
                    "self"
                ],
                "test_filter_and_transform_with_non_unique_string_index": [
                    "self"
                ],
                "test_filter_has_access_to_grouped_cols": [
                    "self"
                ],
                "test_filter_enforces_scalarness": [
                    "self"
                ],
                "test_filter_non_bool_raises": [
                    "self"
                ],
                "test_index_label_overlaps_location": [
                    "self"
                ],
                "test_groupby_selection_with_methods": [
                    "self"
                ],
                "test_groupby_whitelist": [
                    "self"
                ],
                "test_regression_whitelist_methods": [
                    "self"
                ],
                "test_groupby_blacklist": [
                    "self"
                ],
                "test_series_groupby_plotting_nominally_works": [
                    "self"
                ],
                "test_plotting_with_float_index_works": [
                    "self"
                ],
                "test_frame_groupby_plot_boxplot": [
                    "self"
                ],
                "test_frame_groupby_hist": [
                    "self"
                ],
                "test_tab_completion": [
                    "self"
                ],
                "test_lexsort_indexer": [
                    "self"
                ],
                "test_nargsort": [
                    "self"
                ],
                "test_datetime_count": [
                    "self"
                ],
                "test_lower_int_prec_count": [
                    "self"
                ],
                "test_count_uses_size_on_exception": [
                    "self"
                ],
                "test__cython_agg_general": [
                    "self"
                ],
                "test_ops_general": [
                    "self"
                ],
                "test_max_nan_bug": [
                    "self"
                ],
                "test_nlargest": [
                    "self"
                ],
                "test_nsmallest": [
                    "self"
                ],
                "test_transform_doesnt_clobber_ints": [
                    "self"
                ],
                "test_groupby_categorical_two_columns": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_internals": {
            "assert_block_equal": [
                "left",
                "right"
            ],
            "get_numeric_mat": [
                "shape"
            ],
            "create_block": [
                "typestr",
                "placement",
                "item_shape",
                "num_offset"
            ],
            "create_single_mgr": [
                "typestr",
                "num_rows"
            ],
            "create_mgr": [
                "descr",
                "item_shape"
            ],
            "TestBlock": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_mgr_locs": [
                    "self"
                ],
                "test_attrs": [
                    "self"
                ],
                "test_merge": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_reindex_index": [
                    "self"
                ],
                "test_reindex_cast": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delete": [
                    "self"
                ],
                "test_split_block_at": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_set": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ]
            },
            "TestBlockManager": {
                "setUp": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_attrs": [
                    "self"
                ],
                "test_is_mixed_dtype": [
                    "self"
                ],
                "test_is_indexed_like": [
                    "self"
                ],
                "test_duplicate_ref_loc_failure": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_non_unique_pickle": [
                    "self"
                ],
                "test_categorical_block_pickle": [
                    "self"
                ],
                "test_get_scalar": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_set": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_set_change_dtype": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_sparse": [
                    "self"
                ],
                "test_sparse_mixed": [
                    "self"
                ],
                "test_as_matrix_float": [
                    "self"
                ],
                "test_as_matrix_int_bool": [
                    "self"
                ],
                "test_as_matrix_datetime": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_convert": [
                    "self"
                ],
                "test_interleave": [
                    "self"
                ],
                "test_interleave_non_unique_cols": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_consolidate_ordering_issues": [
                    "self"
                ],
                "test_reindex_index": [
                    "self"
                ],
                "test_reindex_items": [
                    "self"
                ],
                "test_multiindex_xs": [
                    "self"
                ],
                "test_get_numeric_data": [
                    "self"
                ],
                "test_get_bool_data": [
                    "self"
                ],
                "test_unicode_repr_doesnt_raise": [
                    "self"
                ],
                "test_missing_unicode_key": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_single_mgr_ctor": [
                    "self"
                ]
            },
            "TestIndexing": {
                "test_get_slice": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_reindex_axis": [
                    "self"
                ],
                "test_reindex_indexer": [
                    "self"
                ]
            },
            "TestBlockPlacement": {
                "test_slice_len": [
                    "self"
                ],
                "test_zero_step_raises": [
                    "self"
                ],
                "test_unbounded_slice_raises": [
                    "self"
                ],
                "test_not_slice_like_slices": [
                    "self"
                ],
                "test_array_to_slice_conversion": [
                    "self"
                ],
                "test_not_slice_like_arrays": [
                    "self"
                ],
                "test_slice_iter": [
                    "self"
                ],
                "test_slice_to_array_conversion": [
                    "self"
                ],
                "test_blockplacement_add": [
                    "self"
                ],
                "test_blockplacement_add_int": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_graphics": {
            "_skip_if_mpl_14_or_dev_boxplot": [],
            "_skip_if_no_scipy_gaussian_kde": [],
            "_ok_for_gaussian_kde": [
                "kind"
            ],
            "assert_is_valid_plot_return_object": [
                "objs"
            ],
            "_check_plot_works": [
                "f"
            ],
            "curpath": [],
            "TestPlotBase": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "plt": [
                    "self"
                ],
                "colorconverter": [
                    "self"
                ],
                "_check_legend_labels": [
                    "self",
                    "axes",
                    "labels",
                    "visible"
                ],
                "_check_data": [
                    "self",
                    "xp",
                    "rs"
                ],
                "_check_visible": [
                    "self",
                    "collections",
                    "visible"
                ],
                "_get_colors_mapped": [
                    "self",
                    "series",
                    "colors"
                ],
                "_check_colors": [
                    "self",
                    "collections",
                    "linecolors",
                    "facecolors",
                    "mapping"
                ],
                "_check_text_labels": [
                    "self",
                    "texts",
                    "expected"
                ],
                "_check_ticks_props": [
                    "self",
                    "axes",
                    "xlabelsize",
                    "xrot",
                    "ylabelsize",
                    "yrot"
                ],
                "_check_ax_scales": [
                    "self",
                    "axes",
                    "xaxis",
                    "yaxis"
                ],
                "_check_axes_shape": [
                    "self",
                    "axes",
                    "axes_num",
                    "layout",
                    "figsize"
                ],
                "_get_axes_layout": [
                    "self",
                    "axes"
                ],
                "_flatten_visible": [
                    "self",
                    "axes"
                ],
                "_check_has_errorbars": [
                    "self",
                    "axes",
                    "xerr",
                    "yerr"
                ],
                "_check_box_return_type": [
                    "self",
                    "returned",
                    "return_type",
                    "expected_keys",
                    "check_ax_title"
                ]
            },
            "TestSeriesPlots": {
                "setUp": [
                    "self"
                ],
                "test_plot": [
                    "self"
                ],
                "test_plot_figsize_and_title": [
                    "self"
                ],
                "test_dont_modify_rcParams": [
                    "self"
                ],
                "test_ts_line_lim": [
                    "self"
                ],
                "test_ts_area_lim": [
                    "self"
                ],
                "test_line_area_nan_series": [
                    "self"
                ],
                "test_bar_log": [
                    "self"
                ],
                "test_bar_ignore_index": [
                    "self"
                ],
                "test_rotation": [
                    "self"
                ],
                "test_irregular_datetime": [
                    "self"
                ],
                "test_pie_series": [
                    "self"
                ],
                "test_pie_nan": [
                    "self"
                ],
                "test_hist_df_kwargs": [
                    "self"
                ],
                "test_hist_legacy": [
                    "self"
                ],
                "test_hist_bins_legacy": [
                    "self"
                ],
                "test_hist_layout": [
                    "self"
                ],
                "test_hist_layout_with_by": [
                    "self"
                ],
                "test_hist_no_overlap": [
                    "self"
                ],
                "test_plot_fails_with_dupe_color_and_style": [
                    "self"
                ],
                "test_hist_by_no_extra_plots": [
                    "self"
                ],
                "test_plot_fails_when_ax_differs_from_figure": [
                    "self"
                ],
                "test_hist_kde": [
                    "self"
                ],
                "test_kde_kwargs": [
                    "self"
                ],
                "test_kde_missing_vals": [
                    "self"
                ],
                "test_hist_kwargs": [
                    "self"
                ],
                "test_hist_kde_color": [
                    "self"
                ],
                "test_boxplot_series": [
                    "self"
                ],
                "test_autocorrelation_plot": [
                    "self"
                ],
                "test_lag_plot": [
                    "self"
                ],
                "test_bootstrap_plot": [
                    "self"
                ],
                "test_invalid_plot_data": [
                    "self"
                ],
                "test_valid_object_plot": [
                    "self"
                ],
                "test_partially_invalid_plot_data": [
                    "self"
                ],
                "test_invalid_kind": [
                    "self"
                ],
                "test_dup_datetime_index_plot": [
                    "self"
                ],
                "test_errorbar_plot": [
                    "self"
                ],
                "test_table": [
                    "self"
                ]
            },
            "TestDataFramePlots": {
                "setUp": [
                    "self"
                ],
                "test_plot": [
                    "self"
                ],
                "test_nonnumeric_exclude": [
                    "self"
                ],
                "test_implicit_label": [
                    "self"
                ],
                "test_explicit_label": [
                    "self"
                ],
                "test_donot_overwrite_index_name": [
                    "self"
                ],
                "test_plot_xy": [
                    "self"
                ],
                "test_logscales": [
                    "self"
                ],
                "test_xcompat": [
                    "self"
                ],
                "test_unsorted_index": [
                    "self"
                ],
                "test_subplots": [
                    "self"
                ],
                "test_subplots_timeseries": [
                    "self"
                ],
                "test_subplots_layout": [
                    "self"
                ],
                "test_subplots_multiple_axes": [
                    "self"
                ],
                "test_negative_log": [
                    "self"
                ],
                "_compare_stacked_y_cood": [
                    "self",
                    "normal_lines",
                    "stacked_lines"
                ],
                "test_line_area_stacked": [
                    "self"
                ],
                "test_line_area_nan_df": [
                    "self"
                ],
                "test_line_lim": [
                    "self"
                ],
                "test_area_lim": [
                    "self"
                ],
                "test_bar_colors": [
                    "self"
                ],
                "test_bar_linewidth": [
                    "self"
                ],
                "test_bar_barwidth": [
                    "self"
                ],
                "test_bar_barwidth_position": [
                    "self"
                ],
                "test_bar_bottom_left": [
                    "self"
                ],
                "test_bar_nan": [
                    "self"
                ],
                "test_plot_scatter": [
                    "self"
                ],
                "test_plot_scatter_with_c": [
                    "self"
                ],
                "test_plot_bar": [
                    "self"
                ],
                "_check_bar_alignment": [
                    "self",
                    "df",
                    "kind",
                    "stacked",
                    "subplots",
                    "align",
                    "width",
                    "position"
                ],
                "test_bar_stacked_center": [
                    "self"
                ],
                "test_bar_center": [
                    "self"
                ],
                "test_bar_subplots_center": [
                    "self"
                ],
                "test_bar_align_single_column": [
                    "self"
                ],
                "test_bar_edge": [
                    "self"
                ],
                "test_bar_log_no_subplots": [
                    "self"
                ],
                "test_bar_log_subplots": [
                    "self"
                ],
                "test_boxplot": [
                    "self"
                ],
                "test_boxplot_vertical": [
                    "self"
                ],
                "test_boxplot_return_type": [
                    "self"
                ],
                "test_boxplot_subplots_return_type": [
                    "self"
                ],
                "test_boxplot_legacy": [
                    "self"
                ],
                "test_boxplot_return_type_legacy": [
                    "self"
                ],
                "test_boxplot_axis_limits": [
                    "self"
                ],
                "test_boxplot_empty_column": [
                    "self"
                ],
                "test_kde_df": [
                    "self"
                ],
                "test_kde_missing_vals": [
                    "self"
                ],
                "test_hist_df": [
                    "self"
                ],
                "_check_box_coord": [
                    "self",
                    "patches",
                    "expected_y",
                    "expected_h",
                    "expected_x",
                    "expected_w"
                ],
                "test_hist_df_coord": [
                    "self"
                ],
                "test_hist_df_legacy": [
                    "self"
                ],
                "test_hist_layout": [
                    "self"
                ],
                "test_scatter": [
                    "self"
                ],
                "test_andrews_curves": [
                    "self"
                ],
                "test_parallel_coordinates": [
                    "self"
                ],
                "test_radviz": [
                    "self"
                ],
                "test_plot_int_columns": [
                    "self"
                ],
                "test_df_legend_labels": [
                    "self"
                ],
                "test_legend_name": [
                    "self"
                ],
                "test_no_legend": [
                    "self"
                ],
                "test_style_by_column": [
                    "self"
                ],
                "test_line_label_none": [
                    "self"
                ],
                "test_line_colors": [
                    "self"
                ],
                "test_area_colors": [
                    "self"
                ],
                "test_hist_colors": [
                    "self"
                ],
                "test_kde_colors": [
                    "self"
                ],
                "test_boxplot_colors": [
                    "self"
                ],
                "test_default_color_cycle": [
                    "self"
                ],
                "test_unordered_ts": [
                    "self"
                ],
                "test_all_invalid_plot_data": [
                    "self"
                ],
                "test_partially_invalid_plot_data": [
                    "self"
                ],
                "test_invalid_kind": [
                    "self"
                ],
                "test_hexbin_basic": [
                    "self"
                ],
                "test_hexbin_with_c": [
                    "self"
                ],
                "test_hexbin_cmap": [
                    "self"
                ],
                "test_no_color_bar": [
                    "self"
                ],
                "test_allow_cmap": [
                    "self"
                ],
                "test_pie_df": [
                    "self"
                ],
                "test_pie_df_nan": [
                    "self"
                ],
                "test_errorbar_plot": [
                    "self"
                ],
                "test_errorbar_with_integer_column_names": [
                    "self"
                ],
                "test_errorbar_with_partial_columns": [
                    "self"
                ],
                "test_errorbar_timeseries": [
                    "self"
                ],
                "test_errorbar_asymmetrical": [
                    "self"
                ],
                "test_table": [
                    "self"
                ],
                "test_errorbar_scatter": [
                    "self"
                ]
            },
            "TestDataFrameGroupByPlots": {
                "test_boxplot": [
                    "self"
                ],
                "test_series_plot_color_kwargs": [
                    "self"
                ],
                "test_time_series_plot_color_kwargs": [
                    "self"
                ],
                "test_time_series_plot_color_with_empty_kwargs": [
                    "self"
                ],
                "test_grouped_hist": [
                    "self"
                ],
                "test_grouped_box_return_type": [
                    "self"
                ],
                "test_grouped_box_layout": [
                    "self"
                ],
                "test_grouped_box_multiple_axes": [
                    "self"
                ],
                "test_grouped_hist_layout": [
                    "self"
                ],
                "test_grouped_hist_multiple_axes": [
                    "self"
                ],
                "test_axis_share_x": [
                    "self"
                ],
                "test_axis_share_y": [
                    "self"
                ],
                "test_axis_share_xy": [
                    "self"
                ],
                "test_option_mpl_style": [
                    "self"
                ],
                "test_invalid_colormap": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_stats": {
            "TestRank": {
                "test_rank_tie_methods": [
                    "self"
                ],
                "test_rank_dense_method": [
                    "self"
                ],
                "test_rank_descending": [
                    "self"
                ],
                "test_rank_2d_tie_methods": [
                    "self"
                ],
                "test_rank_int": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_categorical": {
            "TestCategorical": {
                "setUp": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_constructor_unsortable": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_with_generator": [
                    "self"
                ],
                "test_from_codes": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_na_flags_int_categories": [
                    "self"
                ],
                "test_categories_none": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_print": [
                    "self"
                ],
                "test_big_print": [
                    "self"
                ],
                "test_empty_print": [
                    "self"
                ],
                "test_periodindex": [
                    "self"
                ],
                "test_categories_assigments": [
                    "self"
                ],
                "test_set_categories": [
                    "self"
                ],
                "test_rename_categories": [
                    "self"
                ],
                "test_reorder_categories": [
                    "self"
                ],
                "test_add_categories": [
                    "self"
                ],
                "test_remove_categories": [
                    "self"
                ],
                "test_remove_unused_categories": [
                    "self"
                ],
                "test_nan_handling": [
                    "self"
                ],
                "test_isnull": [
                    "self"
                ],
                "test_codes_immutable": [
                    "self"
                ],
                "test_min_max": [
                    "self"
                ],
                "test_unique": [
                    "self"
                ],
                "test_mode": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_slicing_directly": [
                    "self"
                ],
                "test_set_item_nan": [
                    "self"
                ],
                "test_nbytes": [
                    "self"
                ],
                "test_searchsorted": [
                    "self"
                ],
                "test_deprecated_labels": [
                    "self"
                ],
                "test_deprecated_levels": [
                    "self"
                ],
                "test_datetime_categorical_comparison": [
                    "self"
                ],
                "test_reflected_comparison_with_scalars": [
                    "self"
                ]
            },
            "TestCategoricalAsBlock": {
                "setUp": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_codes_dtypes": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_creation_astype": [
                    "self"
                ],
                "test_construction_series": [
                    "self"
                ],
                "test_construction_frame": [
                    "self"
                ],
                "test_reshaping": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_sideeffects_free": [
                    "self"
                ],
                "test_nan_handling": [
                    "self"
                ],
                "test_cat_accessor": [
                    "self"
                ],
                "test_sequence_like": [
                    "self"
                ],
                "test_series_delegations": [
                    "self"
                ],
                "test_series_functions_no_warnings": [
                    "self"
                ],
                "test_assignment_to_dataframe": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_info": [
                    "self"
                ],
                "test_groupby_sort": [
                    "self"
                ],
                "test_min_max": [
                    "self"
                ],
                "test_mode": [
                    "self"
                ],
                "test_value_counts": [
                    "self"
                ],
                "test_groupby": [
                    "self"
                ],
                "test_pivot_table": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_slicing": [
                    "self"
                ],
                "test_slicing_and_getting_ops": [
                    "self"
                ],
                "test_slicing_doc_examples": [
                    "self"
                ],
                "test_assigning_ops": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_concat": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_na_actions": [
                    "self"
                ],
                "test_astype_to_other": [
                    "self"
                ],
                "test_to_records": [
                    "self"
                ],
                "test_numeric_like_ops": [
                    "self"
                ],
                "test_cat_tab_completition": [
                    "self"
                ],
                "test_pickle_v0_14_1": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_tseries": {
            "test_left_join_indexer_unique": [],
            "test_left_outer_join_bug": [],
            "test_inner_join_indexer": [],
            "test_outer_join_indexer": [],
            "test_left_join_indexer": [],
            "test_left_join_indexer2": [],
            "test_outer_join_indexer2": [],
            "test_inner_join_indexer2": [],
            "test_is_lexsorted": [],
            "test_groupsort_indexer": [],
            "test_ensure_platform_int": [],
            "test_duplicated_with_nas": [],
            "test_maybe_booleans_to_slice": [],
            "test_convert_objects": [],
            "test_convert_infs": [],
            "test_convert_objects_ints": [],
            "test_convert_objects_complex_number": [],
            "test_rank": [],
            "test_get_reverse_indexer": [],
            "test_pad_backfill_object_segfault": [],
            "test_arrmap": [],
            "test_series_grouper": [],
            "test_series_bin_grouper": [],
            "test_group_ohlc": [],
            "test_try_parse_dates": [],
            "TestTseriesUtil": {
                "test_combineFunc": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_isnull": [
                    "self"
                ],
                "test_groupby": [
                    "self"
                ],
                "test_groupby_withnull": [
                    "self"
                ],
                "test_backfill": [
                    "self"
                ],
                "test_pad": [
                    "self"
                ]
            },
            "TestBinGroupers": {
                "setUp": [
                    "self"
                ],
                "test_generate_bins": [
                    "self"
                ],
                "test_group_bin_functions": [
                    "self"
                ],
                "_check_versions": [
                    "self",
                    "irr_func",
                    "bin_func",
                    "np_func",
                    "dtype",
                    "check_less_precise"
                ]
            },
            "TestTypeInference": {
                "test_length_zero": [
                    "self"
                ],
                "test_integers": [
                    "self"
                ],
                "test_bools": [
                    "self"
                ],
                "test_floats": [
                    "self"
                ],
                "test_string": [
                    "self"
                ],
                "test_unicode": [
                    "self"
                ],
                "test_datetime": [
                    "self"
                ],
                "test_date": [
                    "self"
                ],
                "test_to_object_array_tuples": [
                    "self"
                ],
                "test_object": [
                    "self"
                ]
            },
            "TestMoments": {},
            "TestReducer": {
                "test_int_index": [
                    "self"
                ]
            },
            "TestTsUtil": {
                "test_min_valid": [
                    "self"
                ],
                "test_max_valid": [
                    "self"
                ],
                "test_to_datetime_bijective": [
                    "self"
                ]
            },
            "TestPeriodField": {
                "test_get_period_field_raises_on_out_of_range": [
                    "self"
                ],
                "test_get_period_field_array_raises_on_out_of_range": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_generic": {
            "_skip_if_no_pchip": [],
            "Generic": {
                "setUp": [
                    "self"
                ],
                "_ndim": [
                    "self"
                ],
                "_axes": [
                    "self"
                ],
                "_construct": [
                    "self",
                    "shape",
                    "value",
                    "dtype"
                ],
                "_compare": [
                    "self",
                    "result",
                    "expected"
                ],
                "test_rename": [
                    "self"
                ],
                "test_get_numeric_data": [
                    "self"
                ],
                "test_get_default": [
                    "self"
                ],
                "test_nonzero": [
                    "self"
                ],
                "test_numpy_1_7_compat_numeric_methods": [
                    "self"
                ],
                "test_downcast": [
                    "self"
                ],
                "test_constructor_compound_dtypes": [
                    "self"
                ],
                "check_metadata": [
                    "self",
                    "x",
                    "y"
                ],
                "test_metadata_propagation": [
                    "self"
                ],
                "test_head_tail": [
                    "self"
                ]
            },
            "TestSeries": {
                "setUp": [
                    "self"
                ],
                "test_rename_mi": [
                    "self"
                ],
                "test_get_numeric_data_preserve_dtype": [
                    "self"
                ],
                "test_nonzero_single_element": [
                    "self"
                ],
                "test_metadata_propagation_indiv": [
                    "self"
                ],
                "test_interpolate": [
                    "self"
                ],
                "test_interp_regression": [
                    "self"
                ],
                "test_interpolate_corners": [
                    "self"
                ],
                "test_interpolate_index_values": [
                    "self"
                ],
                "test_interpolate_non_ts": [
                    "self"
                ],
                "test_nan_interpolate": [
                    "self"
                ],
                "test_nan_irregular_index": [
                    "self"
                ],
                "test_nan_str_index": [
                    "self"
                ],
                "test_interp_quad": [
                    "self"
                ],
                "test_interp_scipy_basic": [
                    "self"
                ],
                "test_interp_limit": [
                    "self"
                ],
                "test_interp_all_good": [
                    "self"
                ],
                "test_interp_multiIndex": [
                    "self"
                ],
                "test_interp_nonmono_raise": [
                    "self"
                ],
                "test_interp_datetime64": [
                    "self"
                ],
                "test_interp_limit_no_nans": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_describe_percentiles": [
                    "self"
                ],
                "test_describe_objects": [
                    "self"
                ],
                "test_describe_empty": [
                    "self"
                ],
                "test_describe_none": [
                    "self"
                ]
            },
            "TestDataFrame": {
                "test_rename_mi": [
                    "self"
                ],
                "test_nonzero_single_element": [
                    "self"
                ],
                "test_get_numeric_data_preserve_dtype": [
                    "self"
                ],
                "test_interp_basic": [
                    "self"
                ],
                "test_interp_bad_method": [
                    "self"
                ],
                "test_interp_combo": [
                    "self"
                ],
                "test_interp_nan_idx": [
                    "self"
                ],
                "test_interp_various": [
                    "self"
                ],
                "test_interp_alt_scipy": [
                    "self"
                ],
                "test_interp_rowwise": [
                    "self"
                ],
                "test_rowwise_alt": [
                    "self"
                ],
                "test_interp_leading_nans": [
                    "self"
                ],
                "test_interp_raise_on_only_mixed": [
                    "self"
                ],
                "test_interp_inplace": [
                    "self"
                ],
                "test_interp_ignore_all_good": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_describe_percentiles": [
                    "self"
                ],
                "test_describe_quantiles_both": [
                    "self"
                ],
                "test_describe_percentiles_percent_or_raw": [
                    "self"
                ],
                "test_describe_percentiles_equivalence": [
                    "self"
                ],
                "test_describe_percentiles_insert_median": [
                    "self"
                ],
                "test_describe_no_numeric": [
                    "self"
                ],
                "test_describe_empty_int_columns": [
                    "self"
                ],
                "test_describe_objects": [
                    "self"
                ],
                "test_describe_typefiltering": [
                    "self"
                ],
                "test_describe_typefiltering_category_bool": [
                    "self"
                ],
                "test_describe_timedelta": [
                    "self"
                ],
                "test_describe_typefiltering_dupcol": [
                    "self"
                ],
                "test_describe_typefiltering_groupby": [
                    "self"
                ],
                "test_no_order": [
                    "self"
                ],
                "test_spline": [
                    "self"
                ],
                "test_metadata_propagation_indiv": [
                    "self"
                ],
                "test_tz_convert_and_localize": [
                    "self"
                ]
            },
            "TestPanel": {},
            "TestNDFrame": {
                "test_squeeze": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_describe_raises": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_strings": {
            "TestStringMethods": {
                "test_api": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_iter_empty": [
                    "self"
                ],
                "test_iter_single_element": [
                    "self"
                ],
                "test_iter_numeric_try_string": [
                    "self"
                ],
                "test_iter_object_try_string": [
                    "self"
                ],
                "test_cat": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_startswith": [
                    "self"
                ],
                "test_endswith": [
                    "self"
                ],
                "test_title": [
                    "self"
                ],
                "test_lower_upper": [
                    "self"
                ],
                "test_replace": [
                    "self"
                ],
                "test_repeat": [
                    "self"
                ],
                "test_deprecated_match": [
                    "self"
                ],
                "test_match": [
                    "self"
                ],
                "test_extract": [
                    "self"
                ],
                "test_extract_single_series_name_is_preserved": [
                    "self"
                ],
                "test_empty_str_methods": [
                    "self"
                ],
                "test_get_dummies": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_findall": [
                    "self"
                ],
                "test_pad": [
                    "self"
                ],
                "test_center": [
                    "self"
                ],
                "test_split": [
                    "self"
                ],
                "test_split_noargs": [
                    "self"
                ],
                "test_split_maxsplit": [
                    "self"
                ],
                "test_split_no_pat_with_nonzero_n": [
                    "self"
                ],
                "test_split_to_dataframe": [
                    "self"
                ],
                "test_pipe_failures": [
                    "self"
                ],
                "test_slice": [
                    "self"
                ],
                "test_slice_replace": [
                    "self"
                ],
                "test_strip_lstrip_rstrip": [
                    "self"
                ],
                "test_strip_lstrip_rstrip_mixed": [
                    "self"
                ],
                "test_strip_lstrip_rstrip_unicode": [
                    "self"
                ],
                "test_strip_lstrip_rstrip_args": [
                    "self"
                ],
                "test_strip_lstrip_rstrip_args_unicode": [
                    "self"
                ],
                "test_wrap": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_more_contains": [
                    "self"
                ],
                "test_more_replace": [
                    "self"
                ],
                "test_string_slice_get_syntax": [
                    "self"
                ],
                "test_string_slice_out_of_bounds": [
                    "self"
                ],
                "test_match_findall_flags": [
                    "self"
                ],
                "test_encode_decode": [
                    "self"
                ],
                "test_encode_decode_errors": [
                    "self"
                ],
                "test_cat_on_filtered_index": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_panel": {
            "test_monotonic": [],
            "test_panel_index": [],
            "test_import_warnings": [],
            "PanelTests": {
                "test_pickle": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "not_hashable": [
                    "self"
                ]
            },
            "SafeForLongAndSparse": {
                "test_repr": [
                    "self"
                ],
                "test_copy_names": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_prod": [
                    "self"
                ],
                "test_median": [
                    "self"
                ],
                "test_min": [
                    "self"
                ],
                "test_max": [
                    "self"
                ],
                "test_skew": [
                    "self"
                ],
                "test_var": [
                    "self"
                ],
                "test_std": [
                    "self"
                ],
                "test_sem": [
                    "self"
                ],
                "_check_stat_op": [
                    "self",
                    "name",
                    "alternative",
                    "obj",
                    "has_skipna"
                ]
            },
            "SafeForSparse": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "test_get_axis": [
                    "self"
                ],
                "test_set_axis": [
                    "self"
                ],
                "test_get_axis_number": [
                    "self"
                ],
                "test_get_axis_name": [
                    "self"
                ],
                "test_get_plane_axes": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_arith": [
                    "self"
                ],
                "_test_op": [
                    "panel",
                    "op"
                ],
                "test_keys": [
                    "self"
                ],
                "test_iteritems": [
                    "self"
                ],
                "test_combineFrame": [
                    "self"
                ],
                "test_combinePanel": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_abs": [
                    "self"
                ]
            },
            "CheckIndexing": {
                "test_getitem": [
                    "self"
                ],
                "test_delitem_and_pop": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_ndarray": [
                    "self"
                ],
                "test_major_xs": [
                    "self"
                ],
                "test_major_xs_mixed": [
                    "self"
                ],
                "test_minor_xs": [
                    "self"
                ],
                "test_minor_xs_mixed": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_getitem_fancy_labels": [
                    "self"
                ],
                "test_getitem_fancy_slice": [
                    "self"
                ],
                "test_getitem_fancy_ints": [
                    "self"
                ],
                "test_getitem_fancy_xs": [
                    "self"
                ],
                "test_getitem_fancy_xs_check_view": [
                    "self"
                ],
                "test_ix_setitem_slice_dataframe": [
                    "self"
                ],
                "test_ix_align": [
                    "self"
                ],
                "test_ix_frame_align": [
                    "self"
                ],
                "_check_view": [
                    "self",
                    "indexer",
                    "comp"
                ],
                "test_logical_with_nas": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_invert": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ]
            },
            "TestPanel": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "setUp": [
                    "self"
                ],
                "test_panel_warnings": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_cast": [
                    "self"
                ],
                "test_constructor_empty_panel": [
                    "self"
                ],
                "test_constructor_observe_dtype": [
                    "self"
                ],
                "test_constructor_dtypes": [
                    "self"
                ],
                "test_constructor_fails_with_not_3d_input": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_ctor_dict": [
                    "self"
                ],
                "test_constructor_dict_mixed": [
                    "self"
                ],
                "test_ctor_orderedDict": [
                    "self"
                ],
                "test_constructor_resize": [
                    "self"
                ],
                "test_from_dict_mixed_orient": [
                    "self"
                ],
                "test_constructor_error_msgs": [
                    "self"
                ],
                "test_conform": [
                    "self"
                ],
                "test_convert_objects": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_slabs": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_multi": [
                    "self"
                ],
                "test_reindex_like": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_sort_index": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_ffill_bfill": [
                    "self"
                ],
                "test_truncate_fillna_bug": [
                    "self"
                ],
                "test_swapaxes": [
                    "self"
                ],
                "test_transpose": [
                    "self"
                ],
                "test_transpose_copy": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_to_frame_mixed": [
                    "self"
                ],
                "test_to_frame_multi_major": [
                    "self"
                ],
                "test_to_frame_multi_major_minor": [
                    "self"
                ],
                "test_to_frame_multi_drop_level": [
                    "self"
                ],
                "test_to_panel_na_handling": [
                    "self"
                ],
                "test_to_panel_duplicates": [
                    "self"
                ],
                "test_panel_dups": [
                    "self"
                ],
                "test_filter": [
                    "self"
                ],
                "test_compound": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_tshift": [
                    "self"
                ],
                "test_pct_change": [
                    "self"
                ],
                "test_multiindex_get": [
                    "self"
                ],
                "test_multiindex_blocks": [
                    "self"
                ],
                "test_repr_empty": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_get_attr": [
                    "self"
                ],
                "test_from_frame_level1_unsorted": [
                    "self"
                ],
                "test_to_excel": [
                    "self"
                ],
                "test_to_excel_xlsxwriter": [
                    "self"
                ],
                "test_dropna": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_update": [
                    "self"
                ],
                "test_update_from_dict": [
                    "self"
                ],
                "test_update_nooverwrite": [
                    "self"
                ],
                "test_update_filtered": [
                    "self"
                ],
                "test_update_raise": [
                    "self"
                ]
            },
            "TestLongPanel": {
                "setUp": [
                    "self"
                ],
                "test_ops_differently_indexed": [
                    "self"
                ],
                "test_ops_scalar": [
                    "self"
                ],
                "test_combineFrame": [
                    "self"
                ],
                "test_combinePanel": [
                    "self"
                ],
                "test_combine_scalar": [
                    "self"
                ],
                "test_combine_series": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_arith_flex_panel": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_to_string": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_axis_dummies": [
                    "self"
                ],
                "test_get_dummies": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_pivot": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_algos": {
            "test_quantile": [],
            "TestMatch": {
                "test_ints": [
                    "self"
                ],
                "test_strings": [
                    "self"
                ]
            },
            "TestFactorize": {
                "test_warn": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_mixed": [
                    "self"
                ],
                "test_datelike": [
                    "self"
                ],
                "test_factorize_nan": [
                    "self"
                ],
                "test_vector_resize": [
                    "self"
                ]
            },
            "TestUnique": {
                "test_ints": [
                    "self"
                ],
                "test_objects": [
                    "self"
                ],
                "test_object_refcount_bug": [
                    "self"
                ],
                "test_on_index_object": [
                    "self"
                ]
            },
            "TestValueCounts": {
                "test_value_counts": [
                    "self"
                ],
                "test_value_counts_bins": [
                    "self"
                ],
                "test_value_counts_dtypes": [
                    "self"
                ],
                "test_value_counts_nat": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_compat": {
            "TestBuiltinIterators": {
                "check_result": [
                    "self",
                    "actual",
                    "expected",
                    "lengths"
                ],
                "test_range": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_filter": [
                    "self"
                ],
                "test_zip": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_common": {
            "test_mut_exclusive": [],
            "test_is_sequence": [],
            "test_get_callable_name": [],
            "test_notnull": [],
            "test_isnull": [],
            "test_isnull_lists": [],
            "test_isnull_nat": [],
            "test_isnull_datetime": [],
            "test_downcast_conv": [],
            "test_array_equivalent": [],
            "test_datetimeindex_from_empty_datetime64_array": [],
            "test_nan_to_nat_conversions": [],
            "test_any_none": [],
            "test_all_not_none": [],
            "test_repr_binary_type": [],
            "test_adjoin": [],
            "test_iterpairs": [],
            "test_split_ranges": [],
            "test_indent": [],
            "test_banner": [],
            "test_map_indices_py": [],
            "test_union": [],
            "test_difference": [],
            "test_intersection": [],
            "test_groupby": [],
            "test_is_list_like": [],
            "test_ensure_int32": [],
            "test_ensure_platform_int": [],
            "test_is_re": [],
            "test_is_recompilable": [],
            "TestIsNull": {
                "test_0d_array": [
                    "self"
                ]
            },
            "TestTake": {
                "test_1d_with_out": [
                    "self"
                ],
                "test_1d_fill_nonna": [
                    "self"
                ],
                "test_2d_with_out": [
                    "self"
                ],
                "test_2d_fill_nonna": [
                    "self"
                ],
                "test_3d_with_out": [
                    "self"
                ],
                "test_3d_fill_nonna": [
                    "self"
                ],
                "test_1d_other_dtypes": [
                    "self"
                ],
                "test_2d_other_dtypes": [
                    "self"
                ],
                "test_1d_bool": [
                    "self"
                ],
                "test_2d_bool": [
                    "self"
                ],
                "test_2d_float32": [
                    "self"
                ],
                "test_2d_datetime64": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_rplot": {
            "curpath": [],
            "between": [
                "a",
                "b",
                "x"
            ],
            "TestUtilityFunctions": {
                "setUp": [
                    "self"
                ],
                "test_make_aes1": [
                    "self"
                ],
                "test_make_aes2": [
                    "self"
                ],
                "test_dictionary_union": [
                    "self"
                ],
                "test_merge_aes": [
                    "self"
                ],
                "test_sequence_layers": [
                    "self"
                ]
            },
            "TestTrellis": {
                "setUp": [
                    "self"
                ],
                "test_grid_sizes": [
                    "self"
                ],
                "test_trellis_cols_rows": [
                    "self"
                ]
            },
            "TestScaleGradient": {
                "setUp": [
                    "self"
                ],
                "test_gradient": [
                    "self"
                ]
            },
            "TestScaleGradient2": {
                "setUp": [
                    "self"
                ],
                "test_gradient2": [
                    "self"
                ]
            },
            "TestScaleRandomColour": {
                "setUp": [
                    "self"
                ],
                "test_random_colour": [
                    "self"
                ]
            },
            "TestScaleConstant": {
                "test_scale_constant": [
                    "self"
                ]
            },
            "TestScaleSize": {
                "setUp": [
                    "self"
                ],
                "test_scale_size": [
                    "self"
                ],
                "test_scale_overflow": [
                    "self"
                ]
            },
            "TestRPlot": {
                "test_rplot1": [
                    "self"
                ],
                "test_rplot2": [
                    "self"
                ],
                "test_rplot3": [
                    "self"
                ],
                "test_rplot_iris": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_panel4d": {
            "add_nans": [
                "panel4d"
            ],
            "SafeForLongAndSparse": {
                "test_repr": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_prod": [
                    "self"
                ],
                "test_median": [
                    "self"
                ],
                "test_min": [
                    "self"
                ],
                "test_max": [
                    "self"
                ],
                "test_skew": [
                    "self"
                ],
                "test_var": [
                    "self"
                ],
                "test_std": [
                    "self"
                ],
                "test_sem": [
                    "self"
                ],
                "_check_stat_op": [
                    "self",
                    "name",
                    "alternative",
                    "obj",
                    "has_skipna"
                ]
            },
            "SafeForSparse": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "assert_panel4d_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "test_get_axis": [
                    "self"
                ],
                "test_set_axis": [
                    "self"
                ],
                "test_get_axis_number": [
                    "self"
                ],
                "test_get_axis_name": [
                    "self"
                ],
                "test_arith": [
                    "self"
                ],
                "_test_op": [
                    "panel4d",
                    "op"
                ],
                "test_keys": [
                    "self"
                ],
                "test_iteritems": [
                    "self"
                ],
                "test_combinePanel4d": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_abs": [
                    "self"
                ]
            },
            "CheckIndexing": {
                "test_getitem": [
                    "self"
                ],
                "test_delitem_and_pop": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_by_indexer": [
                    "self"
                ],
                "test_setitem_by_indexer_mixed_type": [
                    "self"
                ],
                "test_comparisons": [
                    "self"
                ],
                "test_setitem_ndarray": [
                    "self"
                ],
                "test_major_xs": [
                    "self"
                ],
                "test_major_xs_mixed": [
                    "self"
                ],
                "test_minor_xs": [
                    "self"
                ],
                "test_minor_xs_mixed": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_getitem_fancy_labels": [
                    "self"
                ],
                "test_getitem_fancy_slice": [
                    "self"
                ],
                "test_getitem_fancy_ints": [
                    "self"
                ],
                "test_getitem_fancy_xs": [
                    "self"
                ],
                "test_get_value": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ]
            },
            "TestPanel4d": {
                "assert_panel4d_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_cast": [
                    "self"
                ],
                "test_constructor_empty_panel": [
                    "self"
                ],
                "test_constructor_observe_dtype": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_ctor_dict": [
                    "self"
                ],
                "test_constructor_dict_mixed": [
                    "self"
                ],
                "test_constructor_resize": [
                    "self"
                ],
                "test_from_dict_mixed_orient": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_conform": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_not_hashable": [
                    "self"
                ],
                "test_reindex_like": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_sort_index": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_swapaxes": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_to_frame_mixed": [
                    "self"
                ],
                "test_update": [
                    "self"
                ],
                "test_filter": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_compound": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_multiindex_get": [
                    "self"
                ],
                "test_multiindex_blocks": [
                    "self"
                ],
                "test_repr_empty": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_get_attr": [
                    "self"
                ],
                "test_from_frame_level1_unsorted": [
                    "self"
                ],
                "test_to_excel": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_series": {
            "CheckNameIntegration": {
                "test_scalarop_preserve_name": [
                    "self"
                ],
                "test_copy_name": [
                    "self"
                ],
                "test_copy_index_name_checking": [
                    "self"
                ],
                "test_append_preserve_name": [
                    "self"
                ],
                "test_dt_namespace_accessor": [
                    "self"
                ],
                "test_valid_dt_with_missing_values": [
                    "self"
                ],
                "test_binop_maybe_preserve_name": [
                    "self"
                ],
                "test_combine_first_name": [
                    "self"
                ],
                "test_combine_first_dt64": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_delitem": [
                    "self"
                ],
                "test_getitem_preserve_name": [
                    "self"
                ],
                "test_getitem_setitem_ellipsis": [
                    "self"
                ],
                "test_getitem_negative_out_of_bounds": [
                    "self"
                ],
                "test_multilevel_name_print": [
                    "self"
                ],
                "test_multilevel_preserve_name": [
                    "self"
                ],
                "test_name_printing": [
                    "self"
                ],
                "test_pickle_preserve_name": [
                    "self"
                ],
                "_pickle_roundtrip_name": [
                    "self",
                    "obj"
                ],
                "test_argsort_preserve_name": [
                    "self"
                ],
                "test_sort_index_name": [
                    "self"
                ],
                "test_to_sparse_pass_name": [
                    "self"
                ]
            },
            "TestNanops": {
                "test_comparisons": [
                    "self"
                ],
                "test_none_comparison": [
                    "self"
                ],
                "test_sum_zero": [
                    "self"
                ],
                "test_nansum_buglet": [
                    "self"
                ],
                "test_overflow": [
                    "self"
                ]
            },
            "SafeForSparse": {},
            "TestSeries": {
                "setUp": [
                    "self"
                ],
                "test_scalar_conversion": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_empty": [
                    "self"
                ],
                "test_constructor_series": [
                    "self"
                ],
                "test_constructor_iterator": [
                    "self"
                ],
                "test_constructor_generator": [
                    "self"
                ],
                "test_constructor_categorical": [
                    "self"
                ],
                "test_constructor_maskedarray": [
                    "self"
                ],
                "test_constructor_default_index": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_sanitize": [
                    "self"
                ],
                "test_constructor_pass_none": [
                    "self"
                ],
                "test_constructor_cast": [
                    "self"
                ],
                "test_constructor_dtype_nocast": [
                    "self"
                ],
                "test_constructor_dtype_datetime64": [
                    "self"
                ],
                "test_constructor_periodindex": [
                    "self"
                ],
                "test_constructor_dict": [
                    "self"
                ],
                "test_constructor_dict_multiindex": [
                    "self"
                ],
                "test_constructor_subclass_dict": [
                    "self"
                ],
                "test_orderedDict_ctor": [
                    "self"
                ],
                "test_orderedDict_subclass_ctor": [
                    "self"
                ],
                "test_constructor_list_of_tuples": [
                    "self"
                ],
                "test_constructor_tuple_of_tuples": [
                    "self"
                ],
                "test_constructor_set": [
                    "self"
                ],
                "test_fromDict": [
                    "self"
                ],
                "test_setindex": [
                    "self"
                ],
                "test_array_finalize": [
                    "self"
                ],
                "test_pop": [
                    "self"
                ],
                "test_not_hashable": [
                    "self"
                ],
                "test_fromValue": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "_pickle_roundtrip": [
                    "self",
                    "obj"
                ],
                "test_getitem_get": [
                    "self"
                ],
                "test_iget": [
                    "self"
                ],
                "test_iget_nonunique": [
                    "self"
                ],
                "test_getitem_regression": [
                    "self"
                ],
                "test_getitem_setitem_slice_bug": [
                    "self"
                ],
                "test_getitem_int64": [
                    "self"
                ],
                "test_getitem_fancy": [
                    "self"
                ],
                "test_getitem_boolean": [
                    "self"
                ],
                "test_getitem_boolean_empty": [
                    "self"
                ],
                "test_getitem_generator": [
                    "self"
                ],
                "test_getitem_boolean_object": [
                    "self"
                ],
                "test_getitem_setitem_boolean_corner": [
                    "self"
                ],
                "test_getitem_setitem_slice_integers": [
                    "self"
                ],
                "test_getitem_out_of_bounds": [
                    "self"
                ],
                "test_getitem_setitem_integers": [
                    "self"
                ],
                "test_getitem_box_float64": [
                    "self"
                ],
                "test_getitem_ambiguous_keyerror": [
                    "self"
                ],
                "test_getitem_unordered_dup": [
                    "self"
                ],
                "test_getitem_dups_with_missing": [
                    "self"
                ],
                "test_getitem_dups": [
                    "self"
                ],
                "test_getitem_dataframe": [
                    "self"
                ],
                "test_setitem_ambiguous_keyerror": [
                    "self"
                ],
                "test_setitem_float_labels": [
                    "self"
                ],
                "test_slice": [
                    "self"
                ],
                "test_slice_can_reorder_not_uniquely_indexed": [
                    "self"
                ],
                "test_slice_float_get_set": [
                    "self"
                ],
                "test_slice_floats2": [
                    "self"
                ],
                "test_slice_float64": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_dtypes": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_setslice": [
                    "self"
                ],
                "test_basic_getitem_setitem_corner": [
                    "self"
                ],
                "test_reshape_non_2d": [
                    "self"
                ],
                "test_reshape_2d_return_array": [
                    "self"
                ],
                "test_basic_getitem_with_labels": [
                    "self"
                ],
                "test_basic_setitem_with_labels": [
                    "self"
                ],
                "test_ix_getitem": [
                    "self"
                ],
                "test_ix_getitem_not_monotonic": [
                    "self"
                ],
                "test_ix_getitem_setitem_integer_slice_keyerrors": [
                    "self"
                ],
                "test_ix_getitem_iterator": [
                    "self"
                ],
                "test_where": [
                    "self"
                ],
                "test_where_setitem_invalid": [
                    "self"
                ],
                "test_where_broadcast": [
                    "self"
                ],
                "test_where_inplace": [
                    "self"
                ],
                "test_where_dups": [
                    "self"
                ],
                "test_mask": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_ix_setitem": [
                    "self"
                ],
                "test_setitem_boolean": [
                    "self"
                ],
                "test_ix_setitem_boolean": [
                    "self"
                ],
                "test_ix_setitem_corner": [
                    "self"
                ],
                "test_get_set_boolean_different_order": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_tidy_repr": [
                    "self"
                ],
                "test_repr_bool_fails": [
                    "self"
                ],
                "test_repr_name_iterable_indexable": [
                    "self"
                ],
                "test_repr_should_return_str": [
                    "self"
                ],
                "test_repr_max_rows": [
                    "self"
                ],
                "test_unicode_string_with_unicode": [
                    "self"
                ],
                "test_bytestring_with_unicode": [
                    "self"
                ],
                "test_timeseries_repr_object_dtype": [
                    "self"
                ],
                "test_timeseries_periodindex": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_keys": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_iteritems": [
                    "self"
                ],
                "test_sum": [
                    "self"
                ],
                "test_sum_inf": [
                    "self"
                ],
                "test_mean": [
                    "self"
                ],
                "test_median": [
                    "self"
                ],
                "test_mode": [
                    "self"
                ],
                "test_prod": [
                    "self"
                ],
                "test_min": [
                    "self"
                ],
                "test_max": [
                    "self"
                ],
                "test_var_std": [
                    "self"
                ],
                "test_sem": [
                    "self"
                ],
                "test_skew": [
                    "self"
                ],
                "test_kurt": [
                    "self"
                ],
                "test_argsort": [
                    "self"
                ],
                "test_argsort_stable": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "test_cumprod": [
                    "self"
                ],
                "test_cummin": [
                    "self"
                ],
                "test_cummax": [
                    "self"
                ],
                "test_npdiff": [
                    "self"
                ],
                "_check_stat_op": [
                    "self",
                    "name",
                    "alternate",
                    "check_objects"
                ],
                "_check_accum_op": [
                    "self",
                    "name"
                ],
                "test_round": [
                    "self"
                ],
                "test_prod_numpy16_bug": [
                    "self"
                ],
                "test_quantile": [
                    "self"
                ],
                "test_quantile_multi": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_many": [
                    "self"
                ],
                "test_all_any": [
                    "self"
                ],
                "test_op_method": [
                    "self"
                ],
                "test_neg": [
                    "self"
                ],
                "test_invert": [
                    "self"
                ],
                "test_modulo": [
                    "self"
                ],
                "test_div": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_operators_empty_int_corner": [
                    "self"
                ],
                "test_constructor_dtype_timedelta64": [
                    "self"
                ],
                "test_operators_timedelta64": [
                    "self"
                ],
                "test_timedeltas_with_DateOffset": [
                    "self"
                ],
                "test_timedelta64_operations_with_timedeltas": [
                    "self"
                ],
                "test_timedelta64_operations_with_integers": [
                    "self"
                ],
                "test_timedelta64_conversions": [
                    "self"
                ],
                "test_timedelta64_equal_timedelta_supported_ops": [
                    "self"
                ],
                "test_timedelta_assignment": [
                    "self"
                ],
                "test_operators_datetimelike": [
                    "self"
                ],
                "test_ops_datetimelike_align": [
                    "self"
                ],
                "test_timedelta64_functions": [
                    "self"
                ],
                "test_ops_consistency_on_empty": [
                    "self"
                ],
                "test_timedelta_fillna": [
                    "self"
                ],
                "test_datetime64_fillna": [
                    "self"
                ],
                "test_fillna_int": [
                    "self"
                ],
                "test_fillna_raise": [
                    "self"
                ],
                "test_raise_on_info": [
                    "self"
                ],
                "test_isnull_for_inf": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_fillna_bug": [
                    "self"
                ],
                "test_fillna_inplace": [
                    "self"
                ],
                "test_fillna_invalid_method": [
                    "self"
                ],
                "test_ffill": [
                    "self"
                ],
                "test_bfill": [
                    "self"
                ],
                "test_sub_of_datetime_from_TimeSeries": [
                    "self"
                ],
                "test_datetime64_with_index": [
                    "self"
                ],
                "test_timedelta64_nan": [
                    "self"
                ],
                "test_operators_na_handling": [
                    "self"
                ],
                "test_object_comparisons": [
                    "self"
                ],
                "test_comparison_operators_with_nas": [
                    "self"
                ],
                "test_comparison_object_numeric_nas": [
                    "self"
                ],
                "test_comparison_invalid": [
                    "self"
                ],
                "test_more_na_comparisons": [
                    "self"
                ],
                "test_comparison_different_length": [
                    "self"
                ],
                "test_comparison_label_based": [
                    "self"
                ],
                "test_between": [
                    "self"
                ],
                "test_setitem_na": [
                    "self"
                ],
                "test_scalar_na_cmp_corners": [
                    "self"
                ],
                "test_idxmin": [
                    "self"
                ],
                "test_idxmax": [
                    "self"
                ],
                "test_ndarray_compat": [
                    "self"
                ],
                "test_complexx": [
                    "self"
                ],
                "test_underlying_data_conversion": [
                    "self"
                ],
                "test_operators_corner": [
                    "self"
                ],
                "test_operators_reverse_object": [
                    "self"
                ],
                "test_series_frame_radd_bug": [
                    "self"
                ],
                "test_operators_frame": [
                    "self"
                ],
                "test_operators_combine": [
                    "self"
                ],
                "test_combine_first": [
                    "self"
                ],
                "test_update": [
                    "self"
                ],
                "test_corr": [
                    "self"
                ],
                "test_corr_rank": [
                    "self"
                ],
                "test_cov": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_dtype": [
                    "self"
                ],
                "test_dot": [
                    "self"
                ],
                "test_value_counts_nunique": [
                    "self"
                ],
                "test_unique": [
                    "self"
                ],
                "test_dropna_empty": [
                    "self"
                ],
                "test_axis_alias": [
                    "self"
                ],
                "test_drop_duplicates": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_sort_index": [
                    "self"
                ],
                "test_order": [
                    "self"
                ],
                "test_nsmallest_nlargest": [
                    "self"
                ],
                "test_rank": [
                    "self"
                ],
                "test_rank_inf": [
                    "self"
                ],
                "test_from_csv": [
                    "self"
                ],
                "test_to_csv": [
                    "self"
                ],
                "test_to_csv_unicode_index": [
                    "self"
                ],
                "test_tolist": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_to_dict": [
                    "self"
                ],
                "test_to_csv_float_format": [
                    "self"
                ],
                "test_to_csv_list_entries": [
                    "self"
                ],
                "test_to_csv_path_is_none": [
                    "self"
                ],
                "test_clip": [
                    "self"
                ],
                "test_clip_types_and_nulls": [
                    "self"
                ],
                "test_valid": [
                    "self"
                ],
                "test_isnull": [
                    "self"
                ],
                "test_notnull": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_tshift": [
                    "self"
                ],
                "test_shift_int": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_ptp": [
                    "self"
                ],
                "test_asof": [
                    "self"
                ],
                "test_getitem_setitem_datetimeindex": [
                    "self"
                ],
                "test_getitem_setitem_datetime_tz_pytz": [
                    "self"
                ],
                "test_getitem_setitem_datetime_tz_dateutil": [
                    "self"
                ],
                "test_getitem_setitem_periodindex": [
                    "self"
                ],
                "test_asof_periodindex": [
                    "self"
                ],
                "test_asof_more": [
                    "self"
                ],
                "test_cast_on_putmask": [
                    "self"
                ],
                "test_type_promote_putmask": [
                    "self"
                ],
                "test_astype_cast_nan_int": [
                    "self"
                ],
                "test_astype_cast_object_int": [
                    "self"
                ],
                "test_astype_datetimes": [
                    "self"
                ],
                "test_astype_str": [
                    "self"
                ],
                "test_astype_unicode": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_map_compat": [
                    "self"
                ],
                "test_map_int": [
                    "self"
                ],
                "test_map_type_inference": [
                    "self"
                ],
                "test_map_decimal": [
                    "self"
                ],
                "test_map_na_exclusion": [
                    "self"
                ],
                "test_map_dict_with_tuple_keys": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_same_length_inference_bug": [
                    "self"
                ],
                "test_apply_dont_convert_dtype": [
                    "self"
                ],
                "test_convert_objects": [
                    "self"
                ],
                "test_convert_objects_preserve_bool": [
                    "self"
                ],
                "test_convert_objects_preserve_all_bool": [
                    "self"
                ],
                "test_apply_args": [
                    "self"
                ],
                "test_align": [
                    "self"
                ],
                "test_align_fill_method": [
                    "self"
                ],
                "test_align_nocopy": [
                    "self"
                ],
                "test_align_sameindex": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_corner": [
                    "self"
                ],
                "test_reindex_pad": [
                    "self"
                ],
                "test_reindex_backfill": [
                    "self"
                ],
                "test_reindex_int": [
                    "self"
                ],
                "test_reindex_bool": [
                    "self"
                ],
                "test_reindex_bool_pad": [
                    "self"
                ],
                "test_reindex_like": [
                    "self"
                ],
                "test_reindex_fill_value": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_rename_inplace": [
                    "self"
                ],
                "test_preserveRefs": [
                    "self"
                ],
                "test_ne": [
                    "self"
                ],
                "test_pad_nan": [
                    "self"
                ],
                "test_unstack": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_head_tail": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_isin_with_string_scalar": [
                    "self"
                ],
                "test_isin_with_i8": [
                    "self"
                ],
                "test_cummethods_bool": [
                    "self"
                ],
                "test_replace": [
                    "self"
                ],
                "test_replace_with_single_list": [
                    "self"
                ],
                "test_replace_mixed_types": [
                    "self"
                ],
                "test_replace_bool_with_string_no_op": [
                    "self"
                ],
                "test_replace_bool_with_string": [
                    "self"
                ],
                "test_replace_bool_with_bool": [
                    "self"
                ],
                "test_replace_with_dict_with_bool_keys": [
                    "self"
                ],
                "test_asfreq": [
                    "self"
                ],
                "test_diff": [
                    "self"
                ],
                "test_pct_change": [
                    "self"
                ],
                "test_pct_change_shift_over_nas": [
                    "self"
                ],
                "test_autocorr": [
                    "self"
                ],
                "test_first_last_valid": [
                    "self"
                ],
                "test_mpl_compat_hack": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_dropna_preserve_name": [
                    "self"
                ],
                "test_numpy_unique": [
                    "self"
                ],
                "test_concat_empty_series_dtypes": [
                    "self"
                ],
                "test_searchsorted_numeric_dtypes_scalar": [
                    "self"
                ],
                "test_searchsorted_numeric_dtypes_vector": [
                    "self"
                ],
                "test_search_sorted_datetime64_scalar": [
                    "self"
                ],
                "test_search_sorted_datetime64_list": [
                    "self"
                ],
                "test_searchsorted_sorter": [
                    "self"
                ]
            },
            "TestSeriesNonUnique": {
                "setUp": [
                    "self"
                ],
                "test_basic_indexing": [
                    "self"
                ],
                "test_int_indexing": [
                    "self"
                ],
                "test_datetime_indexing": [
                    "self"
                ],
                "test_reset_index": [
                    "self"
                ],
                "test_set_index_makes_timeseries": [
                    "self"
                ],
                "test_timeseries_coercion": [
                    "self"
                ],
                "test_replace": [
                    "self"
                ],
                "test_repeat": [
                    "self"
                ],
                "test_unique_data_ownership": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_testing": {
            "TestAssertAlmostEqual": {
                "_assert_almost_equal_both": [
                    "self",
                    "a",
                    "b"
                ],
                "_assert_not_almost_equal_both": [
                    "self",
                    "a",
                    "b"
                ],
                "test_assert_almost_equal_numbers": [
                    "self"
                ],
                "test_assert_almost_equal_numbers_with_zeros": [
                    "self"
                ],
                "test_assert_almost_equal_numbers_with_mixed": [
                    "self"
                ],
                "test_assert_almost_equal_edge_case_ndarrays": [
                    "self"
                ],
                "test_assert_almost_equal_dicts": [
                    "self"
                ],
                "test_assert_almost_equal_dict_like_object": [
                    "self"
                ],
                "test_assert_almost_equal_strings": [
                    "self"
                ],
                "test_assert_almost_equal_iterables": [
                    "self"
                ],
                "test_assert_almost_equal_null": [
                    "self"
                ],
                "test_assert_almost_equal_inf": [
                    "self"
                ]
            },
            "TestUtilTesting": {
                "test_raise_with_traceback": [
                    "self"
                ]
            },
            "TestAssertSeriesEqual": {
                "_assert_equal": [
                    "self",
                    "x",
                    "y"
                ],
                "_assert_not_equal": [
                    "self",
                    "a",
                    "b"
                ],
                "test_equal": [
                    "self"
                ],
                "test_not_equal": [
                    "self"
                ],
                "test_less_precise": [
                    "self"
                ],
                "test_index_dtype": [
                    "self"
                ],
                "test_multiindex_dtype": [
                    "self"
                ]
            },
            "TestAssertFrameEqual": {
                "_assert_equal": [
                    "self",
                    "x",
                    "y"
                ],
                "_assert_not_equal": [
                    "self",
                    "a",
                    "b"
                ],
                "test_index_dtype": [
                    "self"
                ],
                "test_multiindex_dtype": [
                    "self"
                ]
            },
            "TestRNGContext": {
                "test_RNGContext": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_indexing": {
            "_generate_indices": [
                "f",
                "values"
            ],
            "_get_value": [
                "f",
                "i",
                "values"
            ],
            "_get_result": [
                "obj",
                "method",
                "key",
                "axis"
            ],
            "_axify": [
                "obj",
                "key",
                "axis"
            ],
            "_mklbl": [
                "prefix",
                "n"
            ],
            "TestIndexing": {
                "setUp": [
                    "self"
                ],
                "check_values": [
                    "self",
                    "f",
                    "func",
                    "values"
                ],
                "check_result": [
                    "self",
                    "name",
                    "method1",
                    "key1",
                    "method2",
                    "key2",
                    "typs",
                    "objs",
                    "axes",
                    "fails"
                ],
                "test_indexer_caching": [
                    "self"
                ],
                "test_at_and_iat_get": [
                    "self"
                ],
                "test_at_and_iat_set": [
                    "self"
                ],
                "test_at_iat_coercion": [
                    "self"
                ],
                "test_iat_invalid_args": [
                    "self"
                ],
                "test_imethods_with_dups": [
                    "self"
                ],
                "test_repeated_getitem_dups": [
                    "self"
                ],
                "test_iloc_exceeds_bounds": [
                    "self"
                ],
                "test_iloc_getitem_int": [
                    "self"
                ],
                "test_iloc_getitem_neg_int": [
                    "self"
                ],
                "test_iloc_getitem_list_int": [
                    "self"
                ],
                "test_iloc_getitem_dups": [
                    "self"
                ],
                "test_iloc_getitem_array": [
                    "self"
                ],
                "test_iloc_getitem_bool": [
                    "self"
                ],
                "test_iloc_getitem_slice": [
                    "self"
                ],
                "test_iloc_getitem_slice_dups": [
                    "self"
                ],
                "test_iloc_getitem_multiindex": [
                    "self"
                ],
                "test_iloc_setitem": [
                    "self"
                ],
                "test_ix_loc_setitem": [
                    "self"
                ],
                "test_loc_setitem_multiindex": [
                    "self"
                ],
                "test_loc_setitem_dups": [
                    "self"
                ],
                "test_iloc_setitem_dups": [
                    "self"
                ],
                "test_chained_getitem_with_lists": [
                    "self"
                ],
                "test_loc_getitem_int": [
                    "self"
                ],
                "test_loc_getitem_label": [
                    "self"
                ],
                "test_loc_getitem_label_out_of_range": [
                    "self"
                ],
                "test_loc_getitem_label_list": [
                    "self"
                ],
                "test_loc_getitem_bool": [
                    "self"
                ],
                "test_loc_getitem_int_slice": [
                    "self"
                ],
                "test_loc_to_fail": [
                    "self"
                ],
                "test_loc_getitem_label_slice": [
                    "self"
                ],
                "test_loc_general": [
                    "self"
                ],
                "test_loc_setitem_consistency": [
                    "self"
                ],
                "test_loc_setitem_frame": [
                    "self"
                ],
                "test_loc_setitem_frame_multiples": [
                    "self"
                ],
                "test_iloc_getitem_frame": [
                    "self"
                ],
                "test_iloc_getitem_panel": [
                    "self"
                ],
                "test_iloc_getitem_doc_issue": [
                    "self"
                ],
                "test_setitem_ndarray_1d": [
                    "self"
                ],
                "test_iloc_setitem_series": [
                    "self"
                ],
                "test_iloc_setitem_list_of_lists": [
                    "self"
                ],
                "test_loc_multiindex": [
                    "self"
                ],
                "test_series_getitem_multiindex": [
                    "self"
                ],
                "test_ix_general": [
                    "self"
                ],
                "test_ix_weird_slicing": [
                    "self"
                ],
                "test_xs_multiindex": [
                    "self"
                ],
                "test_per_axis_per_level_getitem": [
                    "self"
                ],
                "test_multiindex_slicers_non_unique": [
                    "self"
                ],
                "test_multiindex_slicers_datetimelike": [
                    "self"
                ],
                "test_multiindex_slicers_edges": [
                    "self"
                ],
                "test_per_axis_per_level_doc_examples": [
                    "self"
                ],
                "test_loc_arguments": [
                    "self"
                ],
                "test_per_axis_per_level_setitem": [
                    "self"
                ],
                "test_multiindex_setitem": [
                    "self"
                ],
                "test_getitem_multiindex": [
                    "self"
                ],
                "test_setitem_dtype_upcast": [
                    "self"
                ],
                "test_setitem_iloc": [
                    "self"
                ],
                "test_dups_fancy_indexing": [
                    "self"
                ],
                "test_indexing_mixed_frame_bug": [
                    "self"
                ],
                "test_set_index_nan": [
                    "self"
                ],
                "test_multi_nan_indexing": [
                    "self"
                ],
                "test_iloc_panel_issue": [
                    "self"
                ],
                "test_panel_getitem": [
                    "self"
                ],
                "test_panel_setitem": [
                    "self"
                ],
                "test_panel_assignment": [
                    "self"
                ],
                "test_multiindex_assignment": [
                    "self"
                ],
                "test_multi_assign": [
                    "self"
                ],
                "test_ix_assign_column_mixed": [
                    "self"
                ],
                "test_ix_get_set_consistency": [
                    "self"
                ],
                "test_setitem_list": [
                    "self"
                ],
                "test_iloc_mask": [
                    "self"
                ],
                "test_ix_slicing_strings": [
                    "self"
                ],
                "test_non_unique_loc": [
                    "self"
                ],
                "test_loc_name": [
                    "self"
                ],
                "test_iloc_non_unique_indexing": [
                    "self"
                ],
                "test_mi_access": [
                    "self"
                ],
                "test_non_unique_loc_memory_error": [
                    "self"
                ],
                "test_astype_assignment": [
                    "self"
                ],
                "test_astype_assignment_with_dups": [
                    "self"
                ],
                "test_dups_loc": [
                    "self"
                ],
                "test_partial_setting": [
                    "self"
                ],
                "test_partial_setting_mixed_dtype": [
                    "self"
                ],
                "test_series_partial_set": [
                    "self"
                ],
                "test_partial_set_invalid": [
                    "self"
                ],
                "test_partial_set_empty": [
                    "self"
                ],
                "test_cache_updating": [
                    "self"
                ],
                "test_slice_consolidate_invalidate_item_cache": [
                    "self"
                ],
                "test_setitem_cache_updating": [
                    "self"
                ],
                "test_setitem_chained_setfault": [
                    "self"
                ],
                "test_detect_chained_assignment": [
                    "self"
                ],
                "test_detect_chained_assignment_warnings": [
                    "self"
                ],
                "test_float64index_slicing_bug": [
                    "self"
                ],
                "test_floating_index_doc_example": [
                    "self"
                ],
                "test_floating_index": [
                    "self"
                ],
                "test_scalar_indexer": [
                    "self"
                ],
                "test_slice_indexer": [
                    "self"
                ],
                "test_set_ix_out_of_bounds_axis_0": [
                    "self"
                ],
                "test_set_ix_out_of_bounds_axis_1": [
                    "self"
                ],
                "test_iloc_empty_list_indexer_is_ok": [
                    "self"
                ],
                "test_loc_empty_list_indexer_is_ok": [
                    "self"
                ],
                "test_ix_empty_list_indexer_is_ok": [
                    "self"
                ],
                "test_deprecate_float_indexers": [
                    "self"
                ],
                "test_float_index_to_mixed": [
                    "self"
                ],
                "test_duplicate_ix_returns_series": [
                    "self"
                ],
                "test_float_index_non_scalar_assignment": [
                    "self"
                ],
                "test_float_index_at_iat": [
                    "self"
                ],
                "test_rhs_alignment": [
                    "self"
                ]
            },
            "TestSeriesNoneCoercion": {
                "test_coercion_with_setitem": [
                    "self"
                ],
                "test_coercion_with_loc_setitem": [
                    "self"
                ],
                "test_coercion_with_setitem_and_series": [
                    "self"
                ],
                "test_coercion_with_loc_and_series": [
                    "self"
                ]
            },
            "TestDataframeNoneCoercion": {
                "test_coercion_with_loc": [
                    "self"
                ],
                "test_coercion_with_setitem_and_dataframe": [
                    "self"
                ],
                "test_none_coercion_loc_and_dataframe": [
                    "self"
                ],
                "test_none_coercion_mixed_dtypes": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_index": {
            "test_get_combined_index": [],
            "Base": {
                "verify_pickle": [
                    "self",
                    "index"
                ],
                "test_pickle_compat_construction": [
                    "self"
                ],
                "test_numeric_compat": [
                    "self"
                ],
                "test_boolean_context_compat": [
                    "self"
                ],
                "test_ndarray_compat_properties": [
                    "self"
                ]
            },
            "TestIndex": {
                "setUp": [
                    "self"
                ],
                "create_index": [
                    "self"
                ],
                "test_wrong_number_names": [
                    "self"
                ],
                "test_set_name_methods": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_new_axis": [
                    "self"
                ],
                "test_copy_and_deepcopy": [
                    "self"
                ],
                "test_duplicates": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_mutability": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_from_series": [
                    "self"
                ],
                "test_constructor_ndarray_like": [
                    "self"
                ],
                "test_index_ctor_infer_periodindex": [
                    "self"
                ],
                "test_constructor_simple_new": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "test_legacy_pickle_identity": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_compat": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delete": [
                    "self"
                ],
                "test_identical": [
                    "self"
                ],
                "test_is_": [
                    "self"
                ],
                "test_asof": [
                    "self"
                ],
                "test_asof_datetime_partial": [
                    "self"
                ],
                "test_nanosecond_index_access": [
                    "self"
                ],
                "test_argsort": [
                    "self"
                ],
                "test_comparators": [
                    "self"
                ],
                "test_booleanindex": [
                    "self"
                ],
                "test_fancy": [
                    "self"
                ],
                "test_empty_fancy": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_add": [
                    "self"
                ],
                "test_append_multiple": [
                    "self"
                ],
                "test_append_empty_preserve_name": [
                    "self"
                ],
                "test_add_string": [
                    "self"
                ],
                "test_iadd_string": [
                    "self"
                ],
                "test_difference": [
                    "self"
                ],
                "test_symmetric_diff": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_is_numeric": [
                    "self"
                ],
                "test_is_object": [
                    "self"
                ],
                "test_is_all_dates": [
                    "self"
                ],
                "test_summary": [
                    "self"
                ],
                "test_format": [
                    "self"
                ],
                "test_format_with_name_time_info": [
                    "self"
                ],
                "test_format_datetime_with_time": [
                    "self"
                ],
                "test_format_none": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "_check_method_works": [
                    "self",
                    "method"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_slice_locs": [
                    "self"
                ],
                "test_slice_locs_dup": [
                    "self"
                ],
                "test_slice_locs_na": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_tuple_union_bug": [
                    "self"
                ],
                "test_is_monotonic_incomparable": [
                    "self"
                ],
                "test_get_set_value": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_isin_nan": [
                    "self"
                ],
                "test_isin_level_kwarg": [
                    "self"
                ],
                "test_boolean_cmp": [
                    "self"
                ],
                "test_get_level_values": [
                    "self"
                ],
                "test_slice_keep_name": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "test_indexing_doesnt_change_class": [
                    "self"
                ],
                "test_outer_join_sort": [
                    "self"
                ],
                "test_nan_first_take_datetime": [
                    "self"
                ],
                "test_reindex_preserves_name_if_target_is_list_or_ndarray": [
                    "self"
                ],
                "test_reindex_preserves_type_if_target_is_empty_list_or_array": [
                    "self"
                ],
                "test_reindex_doesnt_preserve_type_if_target_is_empty_index": [
                    "self"
                ]
            },
            "Numeric": {
                "test_numeric_compat": [
                    "self"
                ],
                "test_explicit_conversions": [
                    "self"
                ],
                "test_ufunc_compat": [
                    "self"
                ]
            },
            "TestFloat64Index": {
                "setUp": [
                    "self"
                ],
                "create_index": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_repr_roundtrip": [
                    "self"
                ],
                "check_is_index": [
                    "self",
                    "i"
                ],
                "check_coerce": [
                    "self",
                    "a",
                    "b",
                    "is_float_index"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_invalid": [
                    "self"
                ],
                "test_constructor_coerce": [
                    "self"
                ],
                "test_constructor_explicit": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_get_loc_na": [
                    "self"
                ],
                "test_contains_nans": [
                    "self"
                ],
                "test_contains_not_nans": [
                    "self"
                ],
                "test_doesnt_contain_all_the_things": [
                    "self"
                ],
                "test_nan_multiple_containment": [
                    "self"
                ],
                "test_astype_from_object": [
                    "self"
                ]
            },
            "TestInt64Index": {
                "setUp": [
                    "self"
                ],
                "create_index": [
                    "self"
                ],
                "test_too_many_names": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "test_coerce_list": [
                    "self"
                ],
                "test_dtype": [
                    "self"
                ],
                "test_is_monotonic": [
                    "self"
                ],
                "test_is_monotonic_na": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_identical": [
                    "self"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_get_indexer_pad": [
                    "self"
                ],
                "test_get_indexer_backfill": [
                    "self"
                ],
                "test_join_outer": [
                    "self"
                ],
                "test_join_inner": [
                    "self"
                ],
                "test_join_left": [
                    "self"
                ],
                "test_join_right": [
                    "self"
                ],
                "test_join_non_int_index": [
                    "self"
                ],
                "test_join_non_unique": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_intersect_str_dates": [
                    "self"
                ],
                "test_union_noncomparable": [
                    "self"
                ],
                "test_cant_or_shouldnt_cast": [
                    "self"
                ],
                "test_view_Index": [
                    "self"
                ],
                "test_prevent_casting": [
                    "self"
                ],
                "test_take_preserve_name": [
                    "self"
                ],
                "test_int_name_format": [
                    "self"
                ],
                "test_print_unicode_columns": [
                    "self"
                ],
                "test_repr_summary": [
                    "self"
                ],
                "test_repr_roundtrip": [
                    "self"
                ],
                "test_unicode_string_with_unicode": [
                    "self"
                ],
                "test_bytestring_with_unicode": [
                    "self"
                ],
                "test_slice_keep_name": [
                    "self"
                ]
            },
            "TestDatetimeIndex": {
                "create_index": [
                    "self"
                ],
                "test_pickle_compat_construction": [
                    "self"
                ],
                "test_numeric_compat": [
                    "self"
                ],
                "test_roundtrip_pickle_with_tz": [
                    "self"
                ],
                "test_reindex_preserves_tz_if_target_is_empty_list_or_array": [
                    "self"
                ]
            },
            "TestPeriodIndex": {
                "create_index": [
                    "self"
                ],
                "test_pickle_compat_construction": [
                    "self"
                ]
            },
            "TestTimedeltaIndex": {
                "create_index": [
                    "self"
                ],
                "test_numeric_compat": [
                    "self"
                ],
                "test_pickle_compat_construction": [
                    "self"
                ]
            },
            "TestMultiIndex": {
                "setUp": [
                    "self"
                ],
                "create_index": [
                    "self"
                ],
                "test_boolean_context_compat2": [
                    "self"
                ],
                "test_labels_dtypes": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_set_names_and_rename": [
                    "self"
                ],
                "test_set_levels": [
                    "self"
                ],
                "test_set_labels": [
                    "self"
                ],
                "test_set_levels_labels_names_bad_input": [
                    "self"
                ],
                "test_metadata_immutable": [
                    "self"
                ],
                "test_inplace_mutation_resets_values": [
                    "self"
                ],
                "test_copy_in_constructor": [
                    "self"
                ],
                "test_set_value_keeps_names": [
                    "self"
                ],
                "test_names": [
                    "self"
                ],
                "test_reference_duplicate_name": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_constructor_single_level": [
                    "self"
                ],
                "test_constructor_no_levels": [
                    "self"
                ],
                "test_constructor_mismatched_label_levels": [
                    "self"
                ],
                "assert_multiindex_copied": [
                    "self",
                    "copy",
                    "original"
                ],
                "test_copy": [
                    "self"
                ],
                "test_shallow_copy": [
                    "self"
                ],
                "test_view": [
                    "self"
                ],
                "check_level_names": [
                    "self",
                    "index",
                    "names"
                ],
                "test_changing_names": [
                    "self"
                ],
                "test_duplicate_names": [
                    "self"
                ],
                "test_get_level_number_integer": [
                    "self"
                ],
                "test_from_arrays": [
                    "self"
                ],
                "test_from_product": [
                    "self"
                ],
                "test_from_product_datetimeindex": [
                    "self"
                ],
                "test_values_boxed": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_get_level_values": [
                    "self"
                ],
                "test_get_level_values_na": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_nlevels": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_legacy_pickle": [
                    "self"
                ],
                "test_legacy_v2_unpickle": [
                    "self"
                ],
                "test_roundtrip_pickle_with_tz": [
                    "self"
                ],
                "test_from_tuples_index_values": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_is_all_dates": [
                    "self"
                ],
                "test_is_numeric": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getitem_group_select": [
                    "self"
                ],
                "test_get_loc": [
                    "self"
                ],
                "test_get_loc_duplicates": [
                    "self"
                ],
                "test_get_loc_level": [
                    "self"
                ],
                "test_slice_locs": [
                    "self"
                ],
                "test_slice_locs_with_type_mismatch": [
                    "self"
                ],
                "test_slice_locs_not_sorted": [
                    "self"
                ],
                "test_slice_locs_partial": [
                    "self"
                ],
                "test_slice_locs_not_contained": [
                    "self"
                ],
                "test_consistency": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_get_indexer": [
                    "self"
                ],
                "test_format": [
                    "self"
                ],
                "test_format_integer_names": [
                    "self"
                ],
                "test_format_sparse_display": [
                    "self"
                ],
                "test_format_sparse_config": [
                    "self"
                ],
                "test_to_hierarchical": [
                    "self"
                ],
                "test_bounds": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_identical": [
                    "self"
                ],
                "test_is_": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_difference": [
                    "self"
                ],
                "test_from_tuples": [
                    "self"
                ],
                "test_argsort": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_sortlevel_not_sort_remaining": [
                    "self"
                ],
                "test_sortlevel_deterministic": [
                    "self"
                ],
                "test_dims": [
                    "self"
                ],
                "test_drop": [
                    "self"
                ],
                "test_droplevel_with_names": [
                    "self"
                ],
                "test_droplevel_multiple": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_take_preserve_name": [
                    "self"
                ],
                "test_join_level": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_level": [
                    "self"
                ],
                "test_has_duplicates": [
                    "self"
                ],
                "test_tolist": [
                    "self"
                ],
                "test_repr_with_unicode_data": [
                    "self"
                ],
                "test_repr_roundtrip": [
                    "self"
                ],
                "test_unicode_string_with_unicode": [
                    "self"
                ],
                "test_bytestring_with_unicode": [
                    "self"
                ],
                "test_slice_keep_name": [
                    "self"
                ],
                "test_isnull_behavior": [
                    "self"
                ],
                "test_level_setting_resets_attributes": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_isin_nan": [
                    "self"
                ],
                "test_isin_level_kwarg": [
                    "self"
                ],
                "test_reindex_preserves_names_when_target_is_list_or_ndarray": [
                    "self"
                ],
                "test_reindex_lvl_preserves_names_when_target_is_list_or_array": [
                    "self"
                ],
                "test_reindex_lvl_preserves_type_if_target_is_empty_list_or_array": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_config": {
            "TestConfig": {
                "__init__": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_api": [
                    "self"
                ],
                "test_is_one_of_factory": [
                    "self"
                ],
                "test_register_option": [
                    "self"
                ],
                "test_describe_option": [
                    "self"
                ],
                "test_case_insensitive": [
                    "self"
                ],
                "test_get_option": [
                    "self"
                ],
                "test_set_option": [
                    "self"
                ],
                "test_set_option_empty_args": [
                    "self"
                ],
                "test_set_option_uneven_args": [
                    "self"
                ],
                "test_set_option_invalid_single_argument_type": [
                    "self"
                ],
                "test_set_option_multiple": [
                    "self"
                ],
                "test_validation": [
                    "self"
                ],
                "test_reset_option": [
                    "self"
                ],
                "test_reset_option_all": [
                    "self"
                ],
                "test_deprecate_option": [
                    "self"
                ],
                "test_config_prefix": [
                    "self"
                ],
                "test_callback": [
                    "self"
                ],
                "test_set_ContextManager": [
                    "self"
                ],
                "test_attribute_access": [
                    "self"
                ]
            }
        },
        "pandas.tests": {},
        "pandas.tests.test_multilevel": {
            "TestMultiLevel": {
                "setUp": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_index": [
                    "self"
                ],
                "test_dataframe_constructor": [
                    "self"
                ],
                "test_series_constructor": [
                    "self"
                ],
                "test_reindex_level": [
                    "self"
                ],
                "test_binops_level": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_preserve_levels": [
                    "self"
                ],
                "test_sort_index_preserve_levels": [
                    "self"
                ],
                "test_sorting_repr_8017": [
                    "self"
                ],
                "test_repr_to_string": [
                    "self"
                ],
                "test_repr_name_coincide": [
                    "self"
                ],
                "test_getitem_simple": [
                    "self"
                ],
                "test_series_getitem": [
                    "self"
                ],
                "test_series_getitem_corner": [
                    "self"
                ],
                "test_series_setitem": [
                    "self"
                ],
                "test_series_slice_partial": [
                    "self"
                ],
                "test_frame_getitem_setitem_boolean": [
                    "self"
                ],
                "test_frame_getitem_setitem_slice": [
                    "self"
                ],
                "test_frame_getitem_setitem_multislice": [
                    "self"
                ],
                "test_frame_getitem_multicolumn_empty_level": [
                    "self"
                ],
                "test_frame_setitem_multi_column": [
                    "self"
                ],
                "test_getitem_tuple_plus_slice": [
                    "self"
                ],
                "test_getitem_setitem_tuple_plus_columns": [
                    "self"
                ],
                "test_getitem_multilevel_index_tuple_unsorted": [
                    "self"
                ],
                "test_xs": [
                    "self"
                ],
                "test_xs_partial": [
                    "self"
                ],
                "test_xs_level": [
                    "self"
                ],
                "test_xs_level_multiple": [
                    "self"
                ],
                "test_xs_level0": [
                    "self"
                ],
                "test_xs_level_series": [
                    "self"
                ],
                "test_get_loc_single_level": [
                    "self"
                ],
                "test_getitem_toplevel": [
                    "self"
                ],
                "test_getitem_setitem_slice_integers": [
                    "self"
                ],
                "test_getitem_int": [
                    "self"
                ],
                "test_getitem_partial": [
                    "self"
                ],
                "test_getitem_slice_not_sorted": [
                    "self"
                ],
                "test_setitem_change_dtype": [
                    "self"
                ],
                "test_frame_setitem_ix": [
                    "self"
                ],
                "test_fancy_slice_partial": [
                    "self"
                ],
                "test_getitem_partial_column_select": [
                    "self"
                ],
                "test_sortlevel": [
                    "self"
                ],
                "test_sortlevel_large_cardinality": [
                    "self"
                ],
                "test_delevel_infer_dtype": [
                    "self"
                ],
                "test_reset_index_with_drop": [
                    "self"
                ],
                "test_sortlevel_by_name": [
                    "self"
                ],
                "test_sortlevel_mixed": [
                    "self"
                ],
                "test_count_level": [
                    "self"
                ],
                "test_count_level_series": [
                    "self"
                ],
                "test_count_level_corner": [
                    "self"
                ],
                "test_get_level_number_out_of_bounds": [
                    "self"
                ],
                "test_unstack": [
                    "self"
                ],
                "test_unstack_multiple_no_empty_columns": [
                    "self"
                ],
                "test_stack": [
                    "self"
                ],
                "test_unstack_odd_failure": [
                    "self"
                ],
                "test_stack_mixed_dtype": [
                    "self"
                ],
                "test_unstack_bug": [
                    "self"
                ],
                "test_stack_unstack_preserve_names": [
                    "self"
                ],
                "test_unstack_level_name": [
                    "self"
                ],
                "test_stack_level_name": [
                    "self"
                ],
                "test_stack_unstack_multiple": [
                    "self"
                ],
                "test_stack_names_and_numbers": [
                    "self"
                ],
                "test_stack_multiple_out_of_bounds": [
                    "self"
                ],
                "test_unstack_period_series": [
                    "self"
                ],
                "test_unstack_period_frame": [
                    "self"
                ],
                "test_stack_multiple_bug": [
                    "self"
                ],
                "test_stack_dropna": [
                    "self"
                ],
                "test_unstack_multiple_hierarchical": [
                    "self"
                ],
                "test_groupby_transform": [
                    "self"
                ],
                "test_unstack_sparse_keyspace": [
                    "self"
                ],
                "test_unstack_unobserved_keys": [
                    "self"
                ],
                "test_groupby_corner": [
                    "self"
                ],
                "test_groupby_level_no_obs": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_swaplevel": [
                    "self"
                ],
                "test_swaplevel_panel": [
                    "self"
                ],
                "test_reorder_levels": [
                    "self"
                ],
                "test_insert_index": [
                    "self"
                ],
                "test_alignment": [
                    "self"
                ],
                "test_is_lexsorted": [
                    "self"
                ],
                "test_frame_getitem_view": [
                    "self"
                ],
                "test_frame_getitem_not_sorted": [
                    "self"
                ],
                "test_series_getitem_not_sorted": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_series_group_min_max": [
                    "self"
                ],
                "test_frame_group_ops": [
                    "self"
                ],
                "test_stat_op_corner": [
                    "self"
                ],
                "test_frame_any_all_group": [
                    "self"
                ],
                "test_std_var_pass_ddof": [
                    "self"
                ],
                "test_frame_series_agg_multiple_levels": [
                    "self"
                ],
                "test_groupby_multilevel": [
                    "self"
                ],
                "test_groupby_multilevel_with_transform": [
                    "self"
                ],
                "test_multilevel_consolidate": [
                    "self"
                ],
                "test_ix_preserve_names": [
                    "self"
                ],
                "test_partial_set": [
                    "self"
                ],
                "test_unstack_preserve_types": [
                    "self"
                ],
                "test_unstack_group_index_overflow": [
                    "self"
                ],
                "test_getitem_lowerdim_corner": [
                    "self"
                ],
                "test_partial_ix_missing": [
                    "self"
                ],
                "test_to_html": [
                    "self"
                ],
                "test_level_with_tuples": [
                    "self"
                ],
                "test_int_series_slicing": [
                    "self"
                ],
                "test_mixed_depth_get": [
                    "self"
                ],
                "test_mixed_depth_insert": [
                    "self"
                ],
                "test_mixed_depth_drop": [
                    "self"
                ],
                "test_drop_nonunique": [
                    "self"
                ],
                "test_mixed_depth_pop": [
                    "self"
                ],
                "test_reindex_level_partial_selection": [
                    "self"
                ],
                "test_setitem_multiple_partial": [
                    "self"
                ],
                "test_drop_level": [
                    "self"
                ],
                "test_drop_preserve_names": [
                    "self"
                ],
                "test_unicode_repr_issues": [
                    "self"
                ],
                "test_unicode_repr_level_names": [
                    "self"
                ],
                "test_dataframe_insert_column_all_na": [
                    "self"
                ],
                "test_join_segfault": [
                    "self"
                ],
                "test_set_column_scalar_with_ix": [
                    "self"
                ],
                "test_frame_dict_constructor_empty_series": [
                    "self"
                ],
                "test_indexing_ambiguity_bug_1678": [
                    "self"
                ],
                "test_nonunique_assignment_1750": [
                    "self"
                ],
                "test_indexing_over_hashtable_size_cutoff": [
                    "self"
                ],
                "test_multiindex_na_repr": [
                    "self"
                ],
                "test_assign_index_sequences": [
                    "self"
                ],
                "test_tuples_have_na": [
                    "self"
                ],
                "test_duplicate_groupby_issues": [
                    "self"
                ],
                "test_duplicate_mi": [
                    "self"
                ],
                "test_duplicated_drop_duplicates": [
                    "self"
                ],
                "test_multiindex_set_index": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ],
                "test_set_index_datetime": [
                    "self"
                ],
                "test_reset_index_datetime": [
                    "self"
                ],
                "test_reset_index_period": [
                    "self"
                ],
                "test_set_index_period": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_panelnd": {
            "TestPanelnd": {
                "setUp": [
                    "self"
                ],
                "test_4d_construction": [
                    "self"
                ],
                "test_4d_construction_alt": [
                    "self"
                ],
                "test_4d_construction_error": [
                    "self"
                ],
                "test_5d_construction": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_msgpack.test_case": {
            "check": [
                "length",
                "obj"
            ],
            "test_1": [],
            "test_2": [],
            "test_3": [],
            "test_5": [],
            "test_9": [],
            "check_raw": [
                "overhead",
                "num"
            ],
            "test_fixraw": [],
            "test_raw16": [],
            "test_raw32": [],
            "check_array": [
                "overhead",
                "num"
            ],
            "test_fixarray": [],
            "test_array16": [],
            "test_array32": [],
            "match": [
                "obj",
                "buf"
            ],
            "test_match": [],
            "test_unicode": []
        },
        "pandas.tests.test_msgpack.test_format": {
            "check": [
                "src",
                "should",
                "use_list"
            ],
            "testSimpleValue": [],
            "testFixnum": [],
            "testFixArray": [],
            "testFixRaw": [],
            "testFixMap": [],
            "testUnsignedInt": [],
            "testSignedInt": [],
            "testRaw": [],
            "testArray": [],
            "testMap": []
        },
        "pandas.tests.test_msgpack.test_subtype": {
            "test_types": [],
            "MyList": {},
            "MyDict": {},
            "MyTuple": {}
        },
        "pandas.tests.test_msgpack.test_obj": {
            "DecodeError": {},
            "TestObj": {
                "_arr_to_str": [
                    "self",
                    "arr"
                ],
                "bad_complex_decoder": [
                    "self",
                    "o"
                ],
                "_decode_complex": [
                    "self",
                    "obj"
                ],
                "_encode_complex": [
                    "self",
                    "obj"
                ],
                "test_encode_hook": [
                    "self"
                ],
                "test_decode_hook": [
                    "self"
                ],
                "test_decode_pairs_hook": [
                    "self"
                ],
                "test_only_one_obj_hook": [
                    "self"
                ],
                "test_bad_hook": [
                    "self"
                ],
                "test_array_hook": [
                    "self"
                ],
                "test_an_exception_in_objecthook1": [
                    "self"
                ],
                "test_an_exception_in_objecthook2": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_msgpack.test_pack": {
            "TestPack": {
                "check": [
                    "self",
                    "data",
                    "use_list"
                ],
                "testPack": [
                    "self"
                ],
                "testPackUnicode": [
                    "self"
                ],
                "testPackUTF32": [
                    "self"
                ],
                "testPackBytes": [
                    "self"
                ],
                "testIgnoreUnicodeErrors": [
                    "self"
                ],
                "testStrictUnicodeUnpack": [
                    "self"
                ],
                "testStrictUnicodePack": [
                    "self"
                ],
                "testIgnoreErrorsPack": [
                    "self"
                ],
                "testNoEncoding": [
                    "self"
                ],
                "testDecodeBinary": [
                    "self"
                ],
                "testPackFloat": [
                    "self"
                ],
                "testArraySize": [
                    "self",
                    "sizes"
                ],
                "test_manualreset": [
                    "self",
                    "sizes"
                ],
                "testMapSize": [
                    "self",
                    "sizes"
                ],
                "test_odict": [
                    "self"
                ],
                "test_pairlist": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_msgpack.test_buffer": {
            "test_unpack_buffer": []
        },
        "pandas.tests.test_msgpack.test_unpack_raw": {
            "test_write_bytes": [],
            "test_write_bytes_multi_buffer": []
        },
        "pandas.tests.test_msgpack.test_seq": {
            "gen_binary_data": [
                "idx"
            ],
            "test_exceeding_unpacker_read_size": []
        },
        "pandas.tests.test_msgpack.test_read_size": {
            "test_read_array_header": [],
            "test_read_map_header": [],
            "test_incorrect_type_array": [],
            "test_incorrect_type_map": [],
            "test_correct_type_nested_array": [],
            "test_incorrect_type_nested_map": []
        },
        "pandas.tests.test_msgpack.test_except": {
            "DummyException": {},
            "TestExceptions": {
                "test_raise_on_find_unsupported_value": [
                    "self"
                ],
                "test_raise_from_object_hook": [
                    "self"
                ],
                "test_invalidvalue": [
                    "self"
                ]
            }
        },
        "pandas.tests.test_msgpack": {},
        "pandas.tests.test_msgpack.test_sequnpack": {
            "TestPack": {
                "test_partialdata": [
                    "self"
                ],
                "test_foobar": [
                    "self"
                ],
                "test_foobar_skip": [
                    "self"
                ],
                "test_maxbuffersize": [
                    "self"
                ],
                "test_readbytes": [
                    "self"
                ]
            }
        },
        "pandas.stats.misc": {
            "zscore": [
                "series"
            ],
            "correl_ts": [
                "frame1",
                "frame2"
            ],
            "correl_xs": [
                "frame1",
                "frame2"
            ],
            "percentileofscore": [
                "a",
                "score",
                "kind"
            ],
            "percentileRank": [
                "frame",
                "column",
                "kind"
            ],
            "bucket": [
                "series",
                "k",
                "by"
            ],
            "_split_quantile": [
                "arr",
                "k"
            ],
            "bucketcat": [
                "series",
                "cats"
            ],
            "bucketpanel": [
                "series",
                "bins",
                "by",
                "cat"
            ],
            "_bucketpanel_by": [
                "series",
                "xby",
                "yby",
                "xbins",
                "ybins"
            ],
            "_bucketpanel_cat": [
                "series",
                "xcat",
                "ycat"
            ],
            "_intern": [
                "values"
            ],
            "_uniquify": [
                "xlabels",
                "ylabels",
                "xbins",
                "ybins"
            ],
            "_bucket_labels": [
                "series",
                "k"
            ]
        },
        "pandas.stats.fama_macbeth": {
            "fama_macbeth": [],
            "_calc_t_stat": [
                "beta",
                "nw_lags_beta"
            ],
            "FamaMacBeth": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "intercept",
                    "nw_lags",
                    "nw_lags_beta",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_stats": [
                    "self"
                ],
                "_mean_beta_raw": [
                    "self"
                ],
                "_std_beta_raw": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "_make_result": [
                    "self",
                    "result"
                ],
                "mean_beta": [
                    "self"
                ],
                "std_beta": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "_results": [
                    "self"
                ],
                "_coef_table": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "summary": [
                    "self"
                ]
            },
            "MovingFamaMacBeth": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "window_type",
                    "window",
                    "intercept",
                    "nw_lags",
                    "nw_lags_beta",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose"
                ],
                "_is_rolling": [
                    "self"
                ],
                "_calc_stats": [
                    "self"
                ],
                "_make_result": [
                    "self",
                    "result"
                ],
                "_result_index": [
                    "self"
                ],
                "_results": [
                    "self"
                ]
            }
        },
        "pandas.stats.common": {
            "_get_cluster_type": [
                "cluster_type"
            ],
            "_get_window_type": [
                "window_type"
            ],
            "banner": [
                "text",
                "width"
            ]
        },
        "pandas.stats.interface": {
            "ols": []
        },
        "pandas.stats.moments": {
            "rolling_count": [
                "arg",
                "window",
                "freq",
                "center",
                "how"
            ],
            "rolling_cov": [
                "arg1",
                "arg2",
                "window",
                "min_periods",
                "freq",
                "center",
                "pairwise",
                "how",
                "ddof"
            ],
            "rolling_corr": [
                "arg1",
                "arg2",
                "window",
                "min_periods",
                "freq",
                "center",
                "pairwise",
                "how"
            ],
            "_flex_binary_moment": [
                "arg1",
                "arg2",
                "f",
                "pairwise"
            ],
            "rolling_corr_pairwise": [
                "df1",
                "df2",
                "window",
                "min_periods",
                "freq",
                "center"
            ],
            "_rolling_moment": [
                "arg",
                "window",
                "func",
                "minp",
                "axis",
                "freq",
                "center",
                "how",
                "args",
                "kwargs"
            ],
            "_center_window": [
                "rs",
                "window",
                "axis"
            ],
            "_process_data_structure": [
                "arg",
                "kill_inf"
            ],
            "_get_center_of_mass": [
                "com",
                "span",
                "halflife"
            ],
            "ewma": [
                "arg",
                "com",
                "span",
                "halflife",
                "min_periods",
                "freq",
                "adjust",
                "how",
                "ignore_na"
            ],
            "ewmvar": [
                "arg",
                "com",
                "span",
                "halflife",
                "min_periods",
                "bias",
                "freq",
                "how",
                "ignore_na",
                "adjust"
            ],
            "ewmstd": [
                "arg",
                "com",
                "span",
                "halflife",
                "min_periods",
                "bias",
                "ignore_na",
                "adjust"
            ],
            "ewmcov": [
                "arg1",
                "arg2",
                "com",
                "span",
                "halflife",
                "min_periods",
                "bias",
                "freq",
                "pairwise",
                "how",
                "ignore_na",
                "adjust"
            ],
            "ewmcorr": [
                "arg1",
                "arg2",
                "com",
                "span",
                "halflife",
                "min_periods",
                "freq",
                "pairwise",
                "how",
                "ignore_na",
                "adjust"
            ],
            "_zsqrt": [
                "x"
            ],
            "_prep_binary": [
                "arg1",
                "arg2"
            ],
            "_conv_timerule": [
                "arg",
                "freq",
                "how"
            ],
            "_require_min_periods": [
                "p"
            ],
            "_use_window": [
                "minp",
                "window"
            ],
            "_rolling_func": [
                "func",
                "desc",
                "check_minp",
                "how",
                "additional_kw"
            ],
            "rolling_quantile": [
                "arg",
                "window",
                "quantile",
                "min_periods",
                "freq",
                "center"
            ],
            "rolling_apply": [
                "arg",
                "window",
                "func",
                "min_periods",
                "freq",
                "center",
                "args",
                "kwargs"
            ],
            "rolling_window": [
                "arg",
                "window",
                "win_type",
                "min_periods",
                "freq",
                "center",
                "mean",
                "axis",
                "how"
            ],
            "_validate_win_type": [
                "win_type",
                "kwargs"
            ],
            "_pop_args": [
                "win_type",
                "arg_names",
                "kwargs"
            ],
            "_expanding_func": [
                "func",
                "desc",
                "check_minp",
                "additional_kw"
            ],
            "expanding_count": [
                "arg",
                "freq"
            ],
            "expanding_quantile": [
                "arg",
                "quantile",
                "min_periods",
                "freq"
            ],
            "expanding_cov": [
                "arg1",
                "arg2",
                "min_periods",
                "freq",
                "pairwise",
                "ddof"
            ],
            "expanding_corr": [
                "arg1",
                "arg2",
                "min_periods",
                "freq",
                "pairwise"
            ],
            "expanding_corr_pairwise": [
                "df1",
                "df2",
                "min_periods",
                "freq"
            ],
            "expanding_apply": [
                "arg",
                "func",
                "min_periods",
                "freq",
                "args",
                "kwargs"
            ]
        },
        "pandas.stats.plm": {
            "_convertDummies": [
                "dummies",
                "mapping"
            ],
            "_is_numeric": [
                "df"
            ],
            "add_intercept": [
                "panel",
                "name"
            ],
            "create_ols_dict": [
                "attr"
            ],
            "create_ols_attr": [
                "attr"
            ],
            "_var_beta_panel": [
                "y",
                "x",
                "beta",
                "xx",
                "rmse",
                "cluster_axis",
                "nw_lags",
                "nobs",
                "df",
                "nw_overlap"
            ],
            "_group_agg": [
                "values",
                "bounds",
                "f"
            ],
            "_xx_time_effects": [
                "x",
                "y"
            ],
            "PanelOLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "weights",
                    "intercept",
                    "nw_lags",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose",
                    "nw_overlap"
                ],
                "log": [
                    "self",
                    "msg"
                ],
                "_prepare_data": [
                    "self"
                ],
                "_filter_data": [
                    "self"
                ],
                "_convert_x": [
                    "self",
                    "x"
                ],
                "_add_dummies": [
                    "self",
                    "panel",
                    "mapping"
                ],
                "_add_entity_effects": [
                    "self",
                    "panel"
                ],
                "_add_categorical_dummies": [
                    "self",
                    "panel",
                    "cat_mappings"
                ],
                "_use_all_dummies": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "_df_model_raw": [
                    "self"
                ],
                "_df_resid_raw": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "_r2_raw": [
                    "self"
                ],
                "_use_centered_tss": [
                    "self"
                ],
                "_r2_adj_raw": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "_rmse_raw": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "_unstack_vector": [
                    "self",
                    "vec",
                    "index"
                ],
                "_unstack_y": [
                    "self",
                    "vec"
                ],
                "_time_obs_count": [
                    "self"
                ],
                "_time_has_obs": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ]
            },
            "MovingPanelOLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "weights",
                    "window_type",
                    "window",
                    "min_periods",
                    "min_obs",
                    "intercept",
                    "nw_lags",
                    "nw_overlap",
                    "entity_effects",
                    "time_effects",
                    "x_effects",
                    "cluster",
                    "dropped_dummies",
                    "verbose"
                ],
                "resid": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "y_predict": [
                    "self"
                ],
                "lagged_y_predict": [
                    "self",
                    "lag"
                ],
                "_rolling_ols_call": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "_y_predict_raw": [
                    "self"
                ],
                "_beta_matrix": [
                    "self",
                    "lag"
                ],
                "_enough_obs": [
                    "self"
                ]
            },
            "NonPooledPanelOLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "window_type",
                    "window",
                    "min_periods",
                    "intercept",
                    "nw_lags",
                    "nw_overlap"
                ]
            }
        },
        "pandas.stats.math": {
            "rank": [
                "X",
                "cond"
            ],
            "solve": [
                "a",
                "b"
            ],
            "inv": [
                "a"
            ],
            "is_psd": [
                "m"
            ],
            "newey_west": [
                "m",
                "max_lags",
                "nobs",
                "df",
                "nw_overlap"
            ],
            "calc_F": [
                "R",
                "r",
                "beta",
                "var_beta",
                "nobs",
                "df"
            ]
        },
        "pandas.stats.api": {},
        "pandas.stats.var": {
            "lag_select": [
                "data",
                "max_lags",
                "ic"
            ],
            "_prep_panel_data": [
                "data"
            ],
            "_drop_incomplete_rows": [
                "array"
            ],
            "_make_param_name": [
                "lag",
                "name"
            ],
            "chain_dot": [],
            "VAR": {
                "__init__": [
                    "self",
                    "data",
                    "p",
                    "intercept"
                ],
                "aic": [
                    "self"
                ],
                "bic": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "forecast": [
                    "self",
                    "h"
                ],
                "forecast_cov": [
                    "self",
                    "h"
                ],
                "forecast_std_err": [
                    "self",
                    "h"
                ],
                "granger_causality": [
                    "self"
                ],
                "ols_results": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "summary": [
                    "self"
                ],
                "_alpha": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_trans_B": [
                    "self",
                    "h"
                ],
                "_x": [
                    "self"
                ],
                "_cov_beta": [
                    "self"
                ],
                "_data_xs": [
                    "self",
                    "i"
                ],
                "_forecast_cov_raw": [
                    "self",
                    "n"
                ],
                "_forecast_cov_beta_raw": [
                    "self",
                    "n"
                ],
                "_forecast_cov_resid_raw": [
                    "self",
                    "h"
                ],
                "_forecast_raw": [
                    "self",
                    "h"
                ],
                "_forecast_std_err_raw": [
                    "self",
                    "h"
                ],
                "_ic": [
                    "self"
                ],
                "_k": [
                    "self"
                ],
                "_lag_betas": [
                    "self"
                ],
                "_lagged_data": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "_psi": [
                    "self",
                    "h"
                ],
                "_resid_raw": [
                    "self"
                ],
                "_rss": [
                    "self"
                ],
                "_sigma": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ]
            },
            "PanelVAR": {
                "__init__": [
                    "self",
                    "data",
                    "lags",
                    "intercept"
                ],
                "_nobs": [
                    "self"
                ],
                "_rss": [
                    "self"
                ],
                "forecast": [
                    "self",
                    "h"
                ],
                "resid": [
                    "self"
                ],
                "_data_xs": [
                    "self",
                    "i"
                ],
                "_sigma": [
                    "self"
                ]
            }
        },
        "pandas.stats.ols": {
            "_safe_update": [
                "d",
                "other"
            ],
            "_filter_data": [
                "lhs",
                "rhs",
                "weights"
            ],
            "_combine_rhs": [
                "rhs"
            ],
            "_y_converter": [
                "y"
            ],
            "f_stat_to_dict": [
                "result"
            ],
            "OLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "intercept",
                    "weights",
                    "nw_lags",
                    "nw_overlap"
                ],
                "_prepare_data": [
                    "self"
                ],
                "nobs": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "nw_lags": [
                    "self"
                ],
                "x": [
                    "self"
                ],
                "y": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "df": [
                    "self"
                ],
                "_df_model_raw": [
                    "self"
                ],
                "df_model": [
                    "self"
                ],
                "_df_resid_raw": [
                    "self"
                ],
                "df_resid": [
                    "self"
                ],
                "_f_stat_raw": [
                    "self"
                ],
                "f_stat": [
                    "self"
                ],
                "f_test": [
                    "self",
                    "hypothesis"
                ],
                "_p_value_raw": [
                    "self"
                ],
                "p_value": [
                    "self"
                ],
                "_r2_raw": [
                    "self"
                ],
                "_use_centered_tss": [
                    "self"
                ],
                "r2": [
                    "self"
                ],
                "_r2_adj_raw": [
                    "self"
                ],
                "r2_adj": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "_rmse_raw": [
                    "self"
                ],
                "rmse": [
                    "self"
                ],
                "_std_err_raw": [
                    "self"
                ],
                "std_err": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "var_beta": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "_y_predict_raw": [
                    "self"
                ],
                "y_predict": [
                    "self"
                ],
                "predict": [
                    "self",
                    "beta",
                    "x",
                    "fill_value",
                    "fill_method",
                    "axis"
                ],
                "_results": [
                    "self"
                ],
                "_coef_table": [
                    "self"
                ],
                "summary_as_matrix": [
                    "self"
                ],
                "summary": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_time_obs_count": [
                    "self"
                ],
                "_total_times": [
                    "self"
                ]
            },
            "MovingOLS": {
                "__init__": [
                    "self",
                    "y",
                    "x",
                    "weights",
                    "window_type",
                    "window",
                    "min_periods",
                    "intercept",
                    "nw_lags",
                    "nw_overlap"
                ],
                "_set_window": [
                    "self",
                    "window_type",
                    "window",
                    "min_periods"
                ],
                "beta": [
                    "self"
                ],
                "rank": [
                    "self"
                ],
                "df": [
                    "self"
                ],
                "df_model": [
                    "self"
                ],
                "df_resid": [
                    "self"
                ],
                "f_stat": [
                    "self"
                ],
                "f_test": [
                    "self",
                    "hypothesis"
                ],
                "forecast_mean": [
                    "self"
                ],
                "forecast_vol": [
                    "self"
                ],
                "p_value": [
                    "self"
                ],
                "r2": [
                    "self"
                ],
                "resid": [
                    "self"
                ],
                "r2_adj": [
                    "self"
                ],
                "rmse": [
                    "self"
                ],
                "std_err": [
                    "self"
                ],
                "t_stat": [
                    "self"
                ],
                "var_beta": [
                    "self"
                ],
                "y_fitted": [
                    "self"
                ],
                "y_predict": [
                    "self"
                ],
                "_is_rolling": [
                    "self"
                ],
                "_beta_raw": [
                    "self"
                ],
                "_result_index": [
                    "self"
                ],
                "_valid_indices": [
                    "self"
                ],
                "_rolling_ols_call": [
                    "self"
                ],
                "_calc_betas": [
                    "self",
                    "x",
                    "y"
                ],
                "_rolling_rank": [
                    "self"
                ],
                "_cum_xx": [
                    "self",
                    "x"
                ],
                "_cum_xy": [
                    "self",
                    "x",
                    "y"
                ],
                "_rank_raw": [
                    "self"
                ],
                "_df_raw": [
                    "self"
                ],
                "_df_model_raw": [
                    "self"
                ],
                "_df_resid_raw": [
                    "self"
                ],
                "_f_stat_raw": [
                    "self"
                ],
                "_p_value_raw": [
                    "self"
                ],
                "_resid_stats": [
                    "self"
                ],
                "_rmse_raw": [
                    "self"
                ],
                "_r2_raw": [
                    "self"
                ],
                "_r2_adj_raw": [
                    "self"
                ],
                "_resid_raw": [
                    "self"
                ],
                "_std_err_raw": [
                    "self"
                ],
                "_t_stat_raw": [
                    "self"
                ],
                "_var_beta_raw": [
                    "self"
                ],
                "_forecast_mean_raw": [
                    "self"
                ],
                "_forecast_vol_raw": [
                    "self"
                ],
                "_y_fitted_raw": [
                    "self"
                ],
                "_y_predict_raw": [
                    "self"
                ],
                "_results": [
                    "self"
                ],
                "_window_time_obs": [
                    "self"
                ],
                "_nobs_raw": [
                    "self"
                ],
                "_beta_matrix": [
                    "self",
                    "lag"
                ],
                "_valid_obs_labels": [
                    "self"
                ],
                "_nobs": [
                    "self"
                ],
                "nobs": [
                    "self"
                ],
                "_enough_obs": [
                    "self"
                ]
            }
        },
        "pandas.stats": {},
        "pandas.stats.tests.test_fama_macbeth": {
            "TestFamaMacBeth": {
                "testFamaMacBethRolling": [
                    "self"
                ],
                "checkFamaMacBethExtended": [
                    "self",
                    "window_type",
                    "x",
                    "y"
                ],
                "_check_stuff_works": [
                    "self",
                    "result"
                ]
            }
        },
        "pandas.stats.tests.common": {
            "makeDataFrame": [],
            "getBasicDatasets": [],
            "check_for_scipy": [],
            "check_for_statsmodels": [],
            "BaseTest": {
                "setUp": [
                    "self"
                ],
                "createData1": [
                    "self"
                ],
                "createData2": [
                    "self"
                ],
                "createData3": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_ols": {
            "_check_repr": [
                "obj"
            ],
            "_compare_ols_results": [
                "model1",
                "model2"
            ],
            "_compare_fullsample_ols": [
                "model1",
                "model2"
            ],
            "_compare_moving_ols": [
                "model1",
                "model2"
            ],
            "_check_non_raw_results": [
                "model"
            ],
            "_period_slice": [
                "panelModel",
                "i"
            ],
            "TestOLS": {
                "setUpClass": [
                    "cls"
                ],
                "testOLSWithDatasets_ccard": [
                    "self"
                ],
                "testOLSWithDatasets_copper": [
                    "self"
                ],
                "testOLSWithDatasets_scotland": [
                    "self"
                ],
                "testWLS": [
                    "self"
                ],
                "_check_wls": [
                    "self",
                    "x",
                    "y",
                    "weights"
                ],
                "checkDataSet": [
                    "self",
                    "dataset",
                    "start",
                    "end",
                    "skip_moving"
                ],
                "checkOLS": [
                    "self",
                    "exog",
                    "endog",
                    "x",
                    "y"
                ],
                "checkMovingOLS": [
                    "self",
                    "window_type",
                    "x",
                    "y",
                    "weights"
                ],
                "compare": [
                    "self",
                    "static",
                    "moving",
                    "event_index",
                    "result_index"
                ],
                "test_ols_object_dtype": [
                    "self"
                ]
            },
            "TestOLSMisc": {
                "setUpClass": [
                    "cls"
                ],
                "test_f_test": [
                    "self"
                ],
                "test_r2_no_intercept": [
                    "self"
                ],
                "test_summary_many_terms": [
                    "self"
                ],
                "test_y_predict": [
                    "self"
                ],
                "test_predict": [
                    "self"
                ],
                "test_predict_longer_exog": [
                    "self"
                ],
                "test_longpanel_series_combo": [
                    "self"
                ],
                "test_series_rhs": [
                    "self"
                ],
                "test_various_attributes": [
                    "self"
                ],
                "test_catch_regressor_overlap": [
                    "self"
                ],
                "test_plm_ctor": [
                    "self"
                ],
                "test_plm_attrs": [
                    "self"
                ],
                "test_plm_lagged_y_predict": [
                    "self"
                ],
                "test_plm_f_test": [
                    "self"
                ],
                "test_plm_exclude_dummy_corner": [
                    "self"
                ],
                "test_columns_tuples_summary": [
                    "self"
                ]
            },
            "TestPanelOLS": {
                "testFiltering": [
                    "self"
                ],
                "test_wls_panel": [
                    "self"
                ],
                "testWithTimeEffects": [
                    "self"
                ],
                "testWithEntityEffects": [
                    "self"
                ],
                "testWithEntityEffectsAndDroppedDummies": [
                    "self"
                ],
                "testWithXEffects": [
                    "self"
                ],
                "testWithXEffectsAndDroppedDummies": [
                    "self"
                ],
                "testWithXEffectsAndConversion": [
                    "self"
                ],
                "testWithXEffectsAndConversionAndDroppedDummies": [
                    "self"
                ],
                "testForSeries": [
                    "self"
                ],
                "testRolling": [
                    "self"
                ],
                "testRollingWithFixedEffects": [
                    "self"
                ],
                "testRollingWithTimeEffects": [
                    "self"
                ],
                "testRollingWithNeweyWest": [
                    "self"
                ],
                "testRollingWithEntityCluster": [
                    "self"
                ],
                "testUnknownClusterRaisesValueError": [
                    "self"
                ],
                "testRollingWithTimeEffectsAndEntityCluster": [
                    "self"
                ],
                "testRollingWithTimeCluster": [
                    "self"
                ],
                "testRollingWithNeweyWestAndEntityCluster": [
                    "self"
                ],
                "testRollingWithNeweyWestAndTimeEffectsAndEntityCluster": [
                    "self"
                ],
                "testExpanding": [
                    "self"
                ],
                "testNonPooled": [
                    "self"
                ],
                "testUnknownWindowType": [
                    "self"
                ],
                "checkNonPooled": [
                    "self",
                    "x",
                    "y"
                ],
                "checkMovingOLS": [
                    "self",
                    "x",
                    "y",
                    "window_type"
                ],
                "checkForSeries": [
                    "self",
                    "x",
                    "y",
                    "series_x",
                    "series_y"
                ],
                "compare": [
                    "self",
                    "static",
                    "moving",
                    "event_index",
                    "result_index"
                ],
                "test_auto_rolling_window_type": [
                    "self"
                ],
                "test_group_agg": [
                    "self"
                ]
            },
            "TestOLSFilter": {
                "setUp": [
                    "self"
                ],
                "testFilterWithSeriesRHS": [
                    "self"
                ],
                "testFilterWithSeriesRHS2": [
                    "self"
                ],
                "testFilterWithSeriesRHS3": [
                    "self"
                ],
                "testFilterWithDataFrameRHS": [
                    "self"
                ],
                "testFilterWithDictRHS": [
                    "self"
                ],
                "tsAssertEqual": [
                    "self",
                    "ts1",
                    "ts2"
                ]
            }
        },
        "pandas.stats.tests.test_moments": {
            "_create_consistency_data": [],
            "Base": {
                "_create_data": [
                    "self"
                ]
            },
            "TestMoments": {
                "setUp": [
                    "self"
                ],
                "test_centered_axis_validation": [
                    "self"
                ],
                "test_rolling_sum": [
                    "self"
                ],
                "test_rolling_count": [
                    "self"
                ],
                "test_rolling_mean": [
                    "self"
                ],
                "test_cmov_mean": [
                    "self"
                ],
                "test_cmov_window": [
                    "self"
                ],
                "test_cmov_window_corner": [
                    "self"
                ],
                "test_cmov_window_frame": [
                    "self"
                ],
                "test_cmov_window_na_min_periods": [
                    "self"
                ],
                "test_cmov_window_regular": [
                    "self"
                ],
                "test_cmov_window_regular_linear_range": [
                    "self"
                ],
                "test_cmov_window_regular_missing_data": [
                    "self"
                ],
                "test_cmov_window_special": [
                    "self"
                ],
                "test_cmov_window_special_linear_range": [
                    "self"
                ],
                "test_rolling_median": [
                    "self"
                ],
                "test_rolling_min": [
                    "self"
                ],
                "test_rolling_max": [
                    "self"
                ],
                "test_rolling_quantile": [
                    "self"
                ],
                "test_rolling_apply": [
                    "self"
                ],
                "test_rolling_apply_out_of_bounds": [
                    "self"
                ],
                "test_rolling_std": [
                    "self"
                ],
                "test_rolling_std_1obs": [
                    "self"
                ],
                "test_rolling_std_neg_sqrt": [
                    "self"
                ],
                "test_rolling_var": [
                    "self"
                ],
                "test_rolling_skew": [
                    "self"
                ],
                "test_rolling_kurt": [
                    "self"
                ],
                "test_fperr_robustness": [
                    "self"
                ],
                "_check_moment_func": [
                    "self",
                    "func",
                    "static_comp",
                    "window",
                    "has_min_periods",
                    "has_center",
                    "has_time_rule",
                    "preserve_nan",
                    "fill_value",
                    "test_stable"
                ],
                "_check_ndarray": [
                    "self",
                    "func",
                    "static_comp",
                    "window",
                    "has_min_periods",
                    "preserve_nan",
                    "has_center",
                    "fill_value",
                    "test_stable",
                    "test_window"
                ],
                "_check_structures": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule",
                    "has_center",
                    "fill_value"
                ],
                "test_ewma": [
                    "self"
                ],
                "test_ewma_nan_handling": [
                    "self"
                ],
                "test_ewmvar": [
                    "self"
                ],
                "test_ewmvol": [
                    "self"
                ],
                "test_ewma_span_com_args": [
                    "self"
                ],
                "test_ewma_halflife_arg": [
                    "self"
                ],
                "test_ew_empty_arrays": [
                    "self"
                ],
                "_check_ew": [
                    "self",
                    "func"
                ],
                "_check_ew_ndarray": [
                    "self",
                    "func",
                    "preserve_nan"
                ],
                "_check_ew_structures": [
                    "self",
                    "func"
                ]
            },
            "TestMomentsConsistency": {
                "_create_data": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "_test_moments_consistency": [
                    "self",
                    "min_periods",
                    "count",
                    "mean",
                    "mock_mean",
                    "corr",
                    "var_unbiased",
                    "std_unbiased",
                    "cov_unbiased",
                    "var_biased",
                    "std_biased",
                    "cov_biased",
                    "var_debiasing_factors"
                ],
                "test_ewm_consistency": [
                    "self"
                ],
                "test_expanding_consistency": [
                    "self"
                ],
                "test_rolling_consistency": [
                    "self"
                ],
                "test_rolling_cov": [
                    "self"
                ],
                "test_rolling_cov_pairwise": [
                    "self"
                ],
                "test_rolling_corr": [
                    "self"
                ],
                "test_rolling_corr_pairwise": [
                    "self"
                ],
                "_check_pairwise_moment": [
                    "self",
                    "func"
                ],
                "test_flex_binary_moment": [
                    "self"
                ],
                "test_corr_sanity": [
                    "self"
                ],
                "test_flex_binary_frame": [
                    "self"
                ],
                "test_ewmcov": [
                    "self"
                ],
                "test_ewmcov_pairwise": [
                    "self"
                ],
                "test_ewmcorr": [
                    "self"
                ],
                "test_ewmcorr_pairwise": [
                    "self"
                ],
                "_check_binary_ew": [
                    "self",
                    "func"
                ],
                "test_expanding_apply": [
                    "self"
                ],
                "test_expanding_apply_args_kwargs": [
                    "self"
                ],
                "test_expanding_corr": [
                    "self"
                ],
                "test_expanding_count": [
                    "self"
                ],
                "test_expanding_quantile": [
                    "self"
                ],
                "test_expanding_cov": [
                    "self"
                ],
                "test_expanding_max": [
                    "self"
                ],
                "test_expanding_cov_pairwise": [
                    "self"
                ],
                "test_expanding_corr_pairwise": [
                    "self"
                ],
                "test_expanding_cov_diff_index": [
                    "self"
                ],
                "test_expanding_corr_diff_index": [
                    "self"
                ],
                "test_rolling_cov_diff_length": [
                    "self"
                ],
                "test_rolling_corr_diff_length": [
                    "self"
                ],
                "test_rolling_functions_window_non_shrinkage": [
                    "self"
                ],
                "test_moment_functions_zero_length": [
                    "self"
                ],
                "test_expanding_cov_pairwise_diff_length": [
                    "self"
                ],
                "test_expanding_corr_pairwise_diff_length": [
                    "self"
                ],
                "test_pairwise_stats_column_names_order": [
                    "self"
                ],
                "test_rolling_skew_edge_cases": [
                    "self"
                ],
                "test_rolling_kurt_edge_cases": [
                    "self"
                ],
                "_check_expanding_ndarray": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule",
                    "preserve_nan"
                ],
                "_check_expanding_structures": [
                    "self",
                    "func"
                ],
                "_check_expanding": [
                    "self",
                    "func",
                    "static_comp",
                    "has_min_periods",
                    "has_time_rule",
                    "preserve_nan"
                ],
                "test_rolling_max_gh6297": [
                    "self"
                ],
                "test_rolling_max_how_resample": [
                    "self"
                ],
                "test_rolling_min_how_resample": [
                    "self"
                ],
                "test_rolling_median_how_resample": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_math": {
            "TestMath": {
                "setUp": [
                    "self"
                ],
                "test_rank_1d": [
                    "self"
                ],
                "test_solve_rect": [
                    "self"
                ],
                "test_inv_illformed": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests.test_var": {
            "CheckVAR": {
                "test_params": [
                    "self"
                ],
                "test_neqs": [
                    "self"
                ],
                "test_nobs": [
                    "self"
                ],
                "test_df_eq": [
                    "self"
                ],
                "test_rmse": [
                    "self"
                ],
                "test_rsquared": [
                    "self"
                ],
                "test_llf": [
                    "self"
                ],
                "test_aic": [
                    "self"
                ],
                "test_bic": [
                    "self"
                ],
                "test_hqic": [
                    "self"
                ],
                "test_fpe": [
                    "self"
                ],
                "test_detsig": [
                    "self"
                ],
                "test_bse": [
                    "self"
                ]
            },
            "Foo": {
                "__init__": [
                    "self"
                ]
            },
            "RVAR": {
                "__init__": [
                    "self",
                    "data",
                    "p",
                    "type"
                ],
                "aic": [
                    "self"
                ],
                "bic": [
                    "self"
                ],
                "beta": [
                    "self"
                ],
                "summary": [
                    "self",
                    "equation"
                ],
                "output": [
                    "self"
                ],
                "estimate": [
                    "self"
                ],
                "plot": [
                    "self",
                    "names"
                ],
                "serial_test": [
                    "self",
                    "lags_pt",
                    "type"
                ],
                "data_summary": [
                    "self"
                ]
            },
            "TestVAR": {
                "setUp": [
                    "self"
                ],
                "test_foo": [
                    "self"
                ]
            }
        },
        "pandas.stats.tests": {},
        "pandas.io.common": {
            "_is_url": [
                "url"
            ],
            "_is_s3_url": [
                "url"
            ],
            "maybe_read_encoded_stream": [
                "reader",
                "encoding"
            ],
            "get_filepath_or_buffer": [
                "filepath_or_buffer",
                "encoding"
            ],
            "file_path_to_url": [
                "path"
            ],
            "PerformanceWarning": {},
            "DtypeWarning": {}
        },
        "pandas.io.pytables": {
            "_ensure_decoded": [
                "s"
            ],
            "_ensure_encoding": [
                "encoding"
            ],
            "_set_tz": [
                "values",
                "tz",
                "preserve_UTC"
            ],
            "_ensure_term": [
                "where",
                "scope_level"
            ],
            "_tables": [],
            "get_store": [
                "path"
            ],
            "to_hdf": [
                "path_or_buf",
                "key",
                "value",
                "mode",
                "complevel",
                "complib",
                "append"
            ],
            "read_hdf": [
                "path_or_buf",
                "key"
            ],
            "_reindex_axis": [
                "obj",
                "axis",
                "labels",
                "other"
            ],
            "_get_info": [
                "info",
                "name"
            ],
            "_convert_index": [
                "index",
                "encoding",
                "format_type"
            ],
            "_unconvert_index": [
                "data",
                "kind",
                "encoding"
            ],
            "_unconvert_index_legacy": [
                "data",
                "kind",
                "legacy",
                "encoding"
            ],
            "_convert_string_array": [
                "data",
                "encoding",
                "itemsize"
            ],
            "_unconvert_string_array": [
                "data",
                "nan_rep",
                "encoding"
            ],
            "_maybe_convert": [
                "values",
                "val_kind",
                "encoding"
            ],
            "_get_converter": [
                "kind",
                "encoding"
            ],
            "_need_convert": [
                "kind"
            ],
            "timeit": [
                "key",
                "df",
                "fn",
                "remove"
            ],
            "PossibleDataLossError": {},
            "ClosedFileError": {},
            "IncompatibilityWarning": {},
            "AttributeConflictWarning": {},
            "DuplicateWarning": {},
            "HDFStore": {
                "__init__": [
                    "self",
                    "path",
                    "mode",
                    "complevel",
                    "complib",
                    "fletcher32"
                ],
                "root": [
                    "self"
                ],
                "filename": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "__getattr__": [
                    "self",
                    "name"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "__len__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "keys": [
                    "self"
                ],
                "items": [
                    "self"
                ],
                "open": [
                    "self",
                    "mode"
                ],
                "close": [
                    "self"
                ],
                "is_open": [
                    "self"
                ],
                "flush": [
                    "self",
                    "fsync"
                ],
                "get": [
                    "self",
                    "key"
                ],
                "select": [
                    "self",
                    "key",
                    "where",
                    "start",
                    "stop",
                    "columns",
                    "iterator",
                    "chunksize",
                    "auto_close"
                ],
                "select_as_coordinates": [
                    "self",
                    "key",
                    "where",
                    "start",
                    "stop"
                ],
                "select_column": [
                    "self",
                    "key",
                    "column"
                ],
                "select_as_multiple": [
                    "self",
                    "keys",
                    "where",
                    "selector",
                    "columns",
                    "start",
                    "stop",
                    "iterator",
                    "chunksize",
                    "auto_close"
                ],
                "put": [
                    "self",
                    "key",
                    "value",
                    "format",
                    "append"
                ],
                "remove": [
                    "self",
                    "key",
                    "where",
                    "start",
                    "stop"
                ],
                "append": [
                    "self",
                    "key",
                    "value",
                    "format",
                    "append",
                    "columns",
                    "dropna"
                ],
                "append_to_multiple": [
                    "self",
                    "d",
                    "value",
                    "selector",
                    "data_columns",
                    "axes",
                    "dropna"
                ],
                "create_table_index": [
                    "self",
                    "key"
                ],
                "groups": [
                    "self"
                ],
                "get_node": [
                    "self",
                    "key"
                ],
                "get_storer": [
                    "self",
                    "key"
                ],
                "copy": [
                    "self",
                    "file",
                    "mode",
                    "propindexes",
                    "keys",
                    "complib",
                    "complevel",
                    "fletcher32",
                    "overwrite"
                ],
                "_check_if_open": [
                    "self"
                ],
                "_validate_format": [
                    "self",
                    "format",
                    "kwargs"
                ],
                "_create_storer": [
                    "self",
                    "group",
                    "format",
                    "value",
                    "append"
                ],
                "_write_to_group": [
                    "self",
                    "key",
                    "value",
                    "format",
                    "index",
                    "append",
                    "complib",
                    "encoding"
                ],
                "_read_group": [
                    "self",
                    "group"
                ]
            },
            "TableIterator": {
                "__init__": [
                    "self",
                    "store",
                    "s",
                    "func",
                    "where",
                    "nrows",
                    "start",
                    "stop",
                    "iterator",
                    "chunksize",
                    "auto_close"
                ],
                "__iter__": [
                    "self"
                ],
                "close": [
                    "self"
                ],
                "get_result": [
                    "self",
                    "coordinates"
                ]
            },
            "IndexCol": {
                "__init__": [
                    "self",
                    "values",
                    "kind",
                    "typ",
                    "cname",
                    "itemsize",
                    "name",
                    "axis",
                    "kind_attr",
                    "pos",
                    "freq",
                    "tz",
                    "index_name"
                ],
                "set_name": [
                    "self",
                    "name",
                    "kind_attr"
                ],
                "set_axis": [
                    "self",
                    "axis"
                ],
                "set_pos": [
                    "self",
                    "pos"
                ],
                "set_table": [
                    "self",
                    "table"
                ],
                "__unicode__": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "is_indexed": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "infer": [
                    "self",
                    "table"
                ],
                "convert": [
                    "self",
                    "values",
                    "nan_rep",
                    "encoding"
                ],
                "take_data": [
                    "self"
                ],
                "attrs": [
                    "self"
                ],
                "description": [
                    "self"
                ],
                "col": [
                    "self"
                ],
                "cvalues": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "maybe_set_size": [
                    "self",
                    "min_itemsize"
                ],
                "validate_and_set": [
                    "self",
                    "table",
                    "append"
                ],
                "validate_col": [
                    "self",
                    "itemsize"
                ],
                "validate_attr": [
                    "self",
                    "append"
                ],
                "update_info": [
                    "self",
                    "info"
                ],
                "set_info": [
                    "self",
                    "info"
                ],
                "get_attr": [
                    "self"
                ],
                "set_attr": [
                    "self"
                ]
            },
            "GenericIndexCol": {
                "is_indexed": [
                    "self"
                ],
                "convert": [
                    "self",
                    "values",
                    "nan_rep",
                    "encoding"
                ],
                "get_attr": [
                    "self"
                ],
                "set_attr": [
                    "self"
                ]
            },
            "DataCol": {
                "create_for_block": [
                    "cls",
                    "i",
                    "name",
                    "cname",
                    "version"
                ],
                "__init__": [
                    "self",
                    "values",
                    "kind",
                    "typ",
                    "cname",
                    "data",
                    "block"
                ],
                "__unicode__": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "set_data": [
                    "self",
                    "data",
                    "dtype"
                ],
                "take_data": [
                    "self"
                ],
                "set_kind": [
                    "self"
                ],
                "set_atom": [
                    "self",
                    "block",
                    "block_items",
                    "existing_col",
                    "min_itemsize",
                    "nan_rep",
                    "info",
                    "encoding"
                ],
                "get_atom_string": [
                    "self",
                    "block",
                    "itemsize"
                ],
                "set_atom_string": [
                    "self",
                    "block",
                    "block_items",
                    "existing_col",
                    "min_itemsize",
                    "nan_rep",
                    "encoding"
                ],
                "convert_string_data": [
                    "self",
                    "data",
                    "itemsize",
                    "encoding"
                ],
                "get_atom_coltype": [
                    "self"
                ],
                "get_atom_data": [
                    "self",
                    "block"
                ],
                "set_atom_data": [
                    "self",
                    "block"
                ],
                "get_atom_datetime64": [
                    "self",
                    "block"
                ],
                "set_atom_datetime64": [
                    "self",
                    "block",
                    "values"
                ],
                "get_atom_timedelta64": [
                    "self",
                    "block"
                ],
                "set_atom_timedelta64": [
                    "self",
                    "block",
                    "values"
                ],
                "shape": [
                    "self"
                ],
                "cvalues": [
                    "self"
                ],
                "validate_attr": [
                    "self",
                    "append"
                ],
                "convert": [
                    "self",
                    "values",
                    "nan_rep",
                    "encoding"
                ],
                "get_attr": [
                    "self"
                ],
                "set_attr": [
                    "self"
                ]
            },
            "DataIndexableCol": {
                "get_atom_string": [
                    "self",
                    "block",
                    "itemsize"
                ],
                "get_atom_data": [
                    "self",
                    "block"
                ],
                "get_atom_datetime64": [
                    "self",
                    "block"
                ],
                "get_atom_timedelta64": [
                    "self",
                    "block"
                ]
            },
            "GenericDataIndexableCol": {
                "get_attr": [
                    "self"
                ]
            },
            "Fixed": {
                "__init__": [
                    "self",
                    "parent",
                    "group",
                    "encoding"
                ],
                "is_old_version": [
                    "self"
                ],
                "set_version": [
                    "self"
                ],
                "pandas_type": [
                    "self"
                ],
                "format_type": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "set_object_info": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "storage_obj_type": [
                    "self"
                ],
                "shape": [
                    "self"
                ],
                "pathname": [
                    "self"
                ],
                "_handle": [
                    "self"
                ],
                "_filters": [
                    "self"
                ],
                "_complevel": [
                    "self"
                ],
                "_fletcher32": [
                    "self"
                ],
                "_complib": [
                    "self"
                ],
                "attrs": [
                    "self"
                ],
                "set_attrs": [
                    "self"
                ],
                "get_attrs": [
                    "self"
                ],
                "storable": [
                    "self"
                ],
                "is_exists": [
                    "self"
                ],
                "nrows": [
                    "self"
                ],
                "validate": [
                    "self",
                    "other"
                ],
                "validate_version": [
                    "self",
                    "where"
                ],
                "infer_axes": [
                    "self"
                ],
                "read": [
                    "self"
                ],
                "write": [
                    "self"
                ],
                "delete": [
                    "self",
                    "where",
                    "start",
                    "stop"
                ]
            },
            "GenericFixed": {
                "_class_to_alias": [
                    "self",
                    "cls"
                ],
                "_alias_to_class": [
                    "self",
                    "alias"
                ],
                "_get_index_factory": [
                    "self",
                    "klass"
                ],
                "validate_read": [
                    "self",
                    "kwargs"
                ],
                "is_exists": [
                    "self"
                ],
                "set_attrs": [
                    "self"
                ],
                "get_attrs": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ],
                "read_array": [
                    "self",
                    "key"
                ],
                "read_index": [
                    "self",
                    "key"
                ],
                "write_index": [
                    "self",
                    "key",
                    "index"
                ],
                "write_block_index": [
                    "self",
                    "key",
                    "index"
                ],
                "read_block_index": [
                    "self",
                    "key"
                ],
                "write_sparse_intindex": [
                    "self",
                    "key",
                    "index"
                ],
                "read_sparse_intindex": [
                    "self",
                    "key"
                ],
                "write_multi_index": [
                    "self",
                    "key",
                    "index"
                ],
                "read_multi_index": [
                    "self",
                    "key"
                ],
                "read_index_node": [
                    "self",
                    "node"
                ],
                "write_array_empty": [
                    "self",
                    "key",
                    "value"
                ],
                "_is_empty_array": [
                    "self",
                    "shape"
                ],
                "write_array": [
                    "self",
                    "key",
                    "value",
                    "items"
                ]
            },
            "LegacyFixed": {
                "read_index_legacy": [
                    "self",
                    "key"
                ]
            },
            "LegacySeriesFixed": {
                "read": [
                    "self"
                ]
            },
            "LegacyFrameFixed": {
                "read": [
                    "self"
                ]
            },
            "SeriesFixed": {
                "shape": [
                    "self"
                ],
                "read": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ]
            },
            "SparseSeriesFixed": {
                "read": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ]
            },
            "SparseFrameFixed": {
                "read": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ]
            },
            "SparsePanelFixed": {
                "read": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ]
            },
            "BlockManagerFixed": {
                "shape": [
                    "self"
                ],
                "read": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj"
                ]
            },
            "FrameFixed": {},
            "PanelFixed": {
                "write": [
                    "self",
                    "obj"
                ]
            },
            "Table": {
                "__init__": [
                    "self"
                ],
                "table_type_short": [
                    "self"
                ],
                "format_type": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "c"
                ],
                "validate": [
                    "self",
                    "other"
                ],
                "is_multi_index": [
                    "self"
                ],
                "validate_multiindex": [
                    "self",
                    "obj"
                ],
                "nrows_expected": [
                    "self"
                ],
                "is_exists": [
                    "self"
                ],
                "storable": [
                    "self"
                ],
                "table": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "description": [
                    "self"
                ],
                "axes": [
                    "self"
                ],
                "ncols": [
                    "self"
                ],
                "is_transposed": [
                    "self"
                ],
                "data_orientation": [
                    "self"
                ],
                "queryables": [
                    "self"
                ],
                "index_cols": [
                    "self"
                ],
                "values_cols": [
                    "self"
                ],
                "set_info": [
                    "self"
                ],
                "set_attrs": [
                    "self"
                ],
                "get_attrs": [
                    "self"
                ],
                "validate_version": [
                    "self",
                    "where"
                ],
                "validate_min_itemsize": [
                    "self",
                    "min_itemsize"
                ],
                "indexables": [
                    "self"
                ],
                "create_index": [
                    "self",
                    "columns",
                    "optlevel",
                    "kind"
                ],
                "read_axes": [
                    "self",
                    "where"
                ],
                "get_object": [
                    "self",
                    "obj"
                ],
                "validate_data_columns": [
                    "self",
                    "data_columns",
                    "min_itemsize"
                ],
                "create_axes": [
                    "self",
                    "axes",
                    "obj",
                    "validate",
                    "nan_rep",
                    "data_columns",
                    "min_itemsize"
                ],
                "process_axes": [
                    "self",
                    "obj",
                    "columns"
                ],
                "create_description": [
                    "self",
                    "complib",
                    "complevel",
                    "fletcher32",
                    "expectedrows"
                ],
                "read_coordinates": [
                    "self",
                    "where",
                    "start",
                    "stop"
                ],
                "read_column": [
                    "self",
                    "column",
                    "where",
                    "start",
                    "stop"
                ]
            },
            "WORMTable": {
                "read": [
                    "self"
                ],
                "write": [
                    "self"
                ]
            },
            "LegacyTable": {
                "write": [
                    "self"
                ],
                "read": [
                    "self",
                    "where",
                    "columns"
                ]
            },
            "LegacyFrameTable": {
                "read": [
                    "self"
                ]
            },
            "LegacyPanelTable": {},
            "AppendableTable": {
                "write": [
                    "self",
                    "obj",
                    "axes",
                    "append",
                    "complib",
                    "complevel",
                    "fletcher32",
                    "min_itemsize",
                    "chunksize",
                    "expectedrows",
                    "dropna"
                ],
                "write_data": [
                    "self",
                    "chunksize",
                    "dropna"
                ],
                "write_data_chunk": [
                    "self",
                    "indexes",
                    "mask",
                    "values"
                ],
                "delete": [
                    "self",
                    "where",
                    "start",
                    "stop"
                ]
            },
            "AppendableFrameTable": {
                "is_transposed": [
                    "self"
                ],
                "get_object": [
                    "self",
                    "obj"
                ],
                "read": [
                    "self",
                    "where",
                    "columns"
                ]
            },
            "AppendableSeriesTable": {
                "is_transposed": [
                    "self"
                ],
                "get_object": [
                    "self",
                    "obj"
                ],
                "write": [
                    "self",
                    "obj",
                    "data_columns"
                ],
                "read": [
                    "self",
                    "columns"
                ]
            },
            "AppendableMultiSeriesTable": {
                "write": [
                    "self",
                    "obj"
                ]
            },
            "GenericTable": {
                "pandas_type": [
                    "self"
                ],
                "storable": [
                    "self"
                ],
                "get_attrs": [
                    "self"
                ],
                "indexables": [
                    "self"
                ],
                "write": [
                    "self"
                ]
            },
            "AppendableMultiFrameTable": {
                "table_type_short": [
                    "self"
                ],
                "write": [
                    "self",
                    "obj",
                    "data_columns"
                ],
                "read": [
                    "self"
                ]
            },
            "AppendablePanelTable": {
                "get_object": [
                    "self",
                    "obj"
                ],
                "is_transposed": [
                    "self"
                ]
            },
            "AppendableNDimTable": {},
            "Selection": {
                "__init__": [
                    "self",
                    "table",
                    "where",
                    "start",
                    "stop"
                ],
                "generate": [
                    "self",
                    "where"
                ],
                "select": [
                    "self"
                ],
                "select_coords": [
                    "self"
                ]
            }
        },
        "pandas.io.stata": {
            "read_stata": [
                "filepath_or_buffer",
                "convert_dates",
                "convert_categoricals",
                "encoding",
                "index",
                "convert_missing",
                "preserve_dtypes",
                "columns"
            ],
            "_stata_elapsed_date_to_datetime_vec": [
                "dates",
                "fmt"
            ],
            "_datetime_to_stata_elapsed_vec": [
                "dates",
                "fmt"
            ],
            "_cast_to_stata_types": [
                "data"
            ],
            "_open_file_binary_write": [
                "fname",
                "encoding"
            ],
            "_set_endianness": [
                "endianness"
            ],
            "_pad_bytes": [
                "name",
                "length"
            ],
            "_default_names": [
                "nvar"
            ],
            "_convert_datetime_to_stata_type": [
                "fmt"
            ],
            "_maybe_convert_to_int_keys": [
                "convert_dates",
                "varlist"
            ],
            "_dtype_to_stata_type": [
                "dtype"
            ],
            "_dtype_to_default_stata_fmt": [
                "dtype",
                "column"
            ],
            "PossiblePrecisionLoss": {},
            "InvalidColumnName": {},
            "StataMissingValue": {
                "__init__": [
                    "self",
                    "value"
                ],
                "__unicode__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ]
            },
            "StataParser": {
                "__init__": [
                    "self",
                    "encoding"
                ],
                "_decode_bytes": [
                    "self",
                    "str",
                    "errors"
                ]
            },
            "StataReader": {
                "__init__": [
                    "self",
                    "path_or_buf",
                    "encoding"
                ],
                "_read_header": [
                    "self"
                ],
                "_calcsize": [
                    "self",
                    "fmt"
                ],
                "_null_terminate": [
                    "self",
                    "s"
                ],
                "_read_value_labels": [
                    "self"
                ],
                "_read_strls": [
                    "self"
                ],
                "data": [
                    "self",
                    "convert_dates",
                    "convert_categoricals",
                    "index",
                    "convert_missing",
                    "preserve_dtypes",
                    "columns"
                ],
                "data_label": [
                    "self"
                ],
                "variable_labels": [
                    "self"
                ],
                "value_labels": [
                    "self"
                ]
            },
            "StataWriter": {
                "__init__": [
                    "self",
                    "fname",
                    "data",
                    "convert_dates",
                    "write_index",
                    "encoding",
                    "byteorder",
                    "time_stamp",
                    "data_label"
                ],
                "_write": [
                    "self",
                    "to_write"
                ],
                "_replace_nans": [
                    "self",
                    "data"
                ],
                "_check_column_names": [
                    "self",
                    "data"
                ],
                "_prepare_pandas": [
                    "self",
                    "data"
                ],
                "write_file": [
                    "self"
                ],
                "_write_header": [
                    "self",
                    "data_label",
                    "time_stamp"
                ],
                "_write_descriptors": [
                    "self",
                    "typlist",
                    "varlist",
                    "srtlist",
                    "fmtlist",
                    "lbllist"
                ],
                "_write_variable_labels": [
                    "self",
                    "labels"
                ],
                "_prepare_data": [
                    "self"
                ],
                "_write_data": [
                    "self"
                ],
                "_null_terminate": [
                    "self",
                    "s",
                    "as_string"
                ]
            }
        },
        "pandas.io.excel": {
            "register_writer": [
                "klass"
            ],
            "get_writer": [
                "engine_name"
            ],
            "read_excel": [
                "io",
                "sheetname"
            ],
            "_trim_excel_header": [
                "row"
            ],
            "_conv_value": [
                "val"
            ],
            "ExcelFile": {
                "__init__": [
                    "self",
                    "io"
                ],
                "parse": [
                    "self",
                    "sheetname",
                    "header",
                    "skiprows",
                    "skip_footer",
                    "index_col",
                    "parse_cols",
                    "parse_dates",
                    "date_parser",
                    "na_values",
                    "thousands",
                    "chunksize",
                    "convert_float",
                    "has_index_names"
                ],
                "_should_parse": [
                    "self",
                    "i",
                    "parse_cols"
                ],
                "_parse_excel": [
                    "self",
                    "sheetname",
                    "header",
                    "skiprows",
                    "skip_footer",
                    "index_col",
                    "has_index_names",
                    "parse_cols",
                    "parse_dates",
                    "date_parser",
                    "na_values",
                    "thousands",
                    "chunksize",
                    "convert_float"
                ],
                "sheet_names": [
                    "self"
                ],
                "close": [
                    "self"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ]
            },
            "ExcelWriter": {
                "__new__": [
                    "cls",
                    "path",
                    "engine"
                ],
                "supported_extensions": [
                    "self"
                ],
                "engine": [
                    "self"
                ],
                "write_cells": [
                    "self",
                    "cells",
                    "sheet_name",
                    "startrow",
                    "startcol"
                ],
                "save": [
                    "self"
                ],
                "__init__": [
                    "self",
                    "path",
                    "engine",
                    "date_format",
                    "datetime_format"
                ],
                "_get_sheet_name": [
                    "self",
                    "sheet_name"
                ],
                "check_extension": [
                    "cls",
                    "ext"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ],
                "close": [
                    "self"
                ]
            },
            "_Openpyxl1Writer": {
                "__init__": [
                    "self",
                    "path",
                    "engine"
                ],
                "save": [
                    "self"
                ],
                "write_cells": [
                    "self",
                    "cells",
                    "sheet_name",
                    "startrow",
                    "startcol"
                ],
                "_convert_to_style": [
                    "cls",
                    "style_dict"
                ]
            },
            "_OpenpyxlWriter": {},
            "_Openpyxl2Writer": {
                "write_cells": [
                    "self",
                    "cells",
                    "sheet_name",
                    "startrow",
                    "startcol"
                ],
                "_convert_to_style_kwargs": [
                    "cls",
                    "style_dict"
                ],
                "_convert_to_color": [
                    "cls",
                    "color_spec"
                ],
                "_convert_to_font": [
                    "cls",
                    "font_dict"
                ],
                "_convert_to_stop": [
                    "cls",
                    "stop_seq"
                ],
                "_convert_to_fill": [
                    "cls",
                    "fill_dict"
                ],
                "_convert_to_side": [
                    "cls",
                    "side_spec"
                ],
                "_convert_to_border": [
                    "cls",
                    "border_dict"
                ],
                "_convert_to_alignment": [
                    "cls",
                    "alignment_dict"
                ],
                "_convert_to_number_format": [
                    "cls",
                    "number_format_dict"
                ],
                "_convert_to_protection": [
                    "cls",
                    "protection_dict"
                ]
            },
            "_XlwtWriter": {
                "__init__": [
                    "self",
                    "path",
                    "engine",
                    "encoding"
                ],
                "save": [
                    "self"
                ],
                "write_cells": [
                    "self",
                    "cells",
                    "sheet_name",
                    "startrow",
                    "startcol"
                ],
                "_style_to_xlwt": [
                    "cls",
                    "item",
                    "firstlevel",
                    "field_sep",
                    "line_sep"
                ],
                "_convert_to_style": [
                    "cls",
                    "style_dict",
                    "num_format_str"
                ]
            },
            "_XlsxWriter": {
                "__init__": [
                    "self",
                    "path",
                    "engine",
                    "date_format",
                    "datetime_format"
                ],
                "save": [
                    "self"
                ],
                "write_cells": [
                    "self",
                    "cells",
                    "sheet_name",
                    "startrow",
                    "startcol"
                ],
                "_convert_to_style": [
                    "self",
                    "style_dict",
                    "num_format_str"
                ]
            }
        },
        "pandas.io.sql": {
            "_is_sqlalchemy_engine": [
                "con"
            ],
            "_convert_params": [
                "sql",
                "params"
            ],
            "_handle_date_column": [
                "col",
                "format"
            ],
            "_parse_date_columns": [
                "data_frame",
                "parse_dates"
            ],
            "_wrap_result": [
                "data",
                "columns",
                "index_col",
                "coerce_float",
                "parse_dates"
            ],
            "execute": [
                "sql",
                "con",
                "cur",
                "params"
            ],
            "_safe_fetch": [
                "cur"
            ],
            "tquery": [
                "sql",
                "con",
                "cur",
                "retry"
            ],
            "uquery": [
                "sql",
                "con",
                "cur",
                "retry",
                "params"
            ],
            "read_sql_table": [
                "table_name",
                "con",
                "schema",
                "index_col",
                "coerce_float",
                "parse_dates",
                "columns",
                "chunksize"
            ],
            "read_sql_query": [
                "sql",
                "con",
                "index_col",
                "coerce_float",
                "params",
                "parse_dates",
                "chunksize"
            ],
            "read_sql": [
                "sql",
                "con",
                "index_col",
                "coerce_float",
                "params",
                "parse_dates",
                "columns",
                "chunksize"
            ],
            "to_sql": [
                "frame",
                "name",
                "con",
                "flavor",
                "schema",
                "if_exists",
                "index",
                "index_label",
                "chunksize"
            ],
            "has_table": [
                "table_name",
                "con",
                "flavor",
                "schema"
            ],
            "pandasSQL_builder": [
                "con",
                "flavor",
                "schema",
                "meta",
                "is_cursor"
            ],
            "get_schema": [
                "frame",
                "name",
                "flavor",
                "keys",
                "con"
            ],
            "read_frame": [],
            "frame_query": [],
            "write_frame": [
                "frame",
                "name",
                "con",
                "flavor",
                "if_exists"
            ],
            "SQLAlchemyRequired": {},
            "DatabaseError": {},
            "SQLTable": {
                "__init__": [
                    "self",
                    "name",
                    "pandas_sql_engine",
                    "frame",
                    "index",
                    "if_exists",
                    "prefix",
                    "index_label",
                    "schema",
                    "keys"
                ],
                "exists": [
                    "self"
                ],
                "sql_schema": [
                    "self"
                ],
                "_execute_create": [
                    "self"
                ],
                "create": [
                    "self"
                ],
                "insert_statement": [
                    "self"
                ],
                "insert_data": [
                    "self"
                ],
                "_execute_insert": [
                    "self",
                    "conn",
                    "keys",
                    "data_iter"
                ],
                "insert": [
                    "self",
                    "chunksize"
                ],
                "_query_iterator": [
                    "self",
                    "result",
                    "chunksize",
                    "columns",
                    "coerce_float",
                    "parse_dates"
                ],
                "read": [
                    "self",
                    "coerce_float",
                    "parse_dates",
                    "columns",
                    "chunksize"
                ],
                "_index_name": [
                    "self",
                    "index",
                    "index_label"
                ],
                "_get_column_names_and_types": [
                    "self",
                    "dtype_mapper"
                ],
                "_create_table_setup": [
                    "self"
                ],
                "_harmonize_columns": [
                    "self",
                    "parse_dates"
                ],
                "_sqlalchemy_type": [
                    "self",
                    "col"
                ],
                "_numpy_type": [
                    "self",
                    "sqltype"
                ]
            },
            "PandasSQL": {
                "read_sql": [
                    "self"
                ],
                "to_sql": [
                    "self"
                ]
            },
            "SQLDatabase": {
                "__init__": [
                    "self",
                    "engine",
                    "schema",
                    "meta"
                ],
                "run_transaction": [
                    "self"
                ],
                "execute": [
                    "self"
                ],
                "read_table": [
                    "self",
                    "table_name",
                    "index_col",
                    "coerce_float",
                    "parse_dates",
                    "columns",
                    "schema",
                    "chunksize"
                ],
                "_query_iterator": [
                    "result",
                    "chunksize",
                    "columns",
                    "index_col",
                    "coerce_float",
                    "parse_dates"
                ],
                "read_query": [
                    "self",
                    "sql",
                    "index_col",
                    "coerce_float",
                    "parse_dates",
                    "params",
                    "chunksize"
                ],
                "to_sql": [
                    "self",
                    "frame",
                    "name",
                    "if_exists",
                    "index",
                    "index_label",
                    "schema",
                    "chunksize"
                ],
                "tables": [
                    "self"
                ],
                "has_table": [
                    "self",
                    "name",
                    "schema"
                ],
                "get_table": [
                    "self",
                    "table_name",
                    "schema"
                ],
                "drop_table": [
                    "self",
                    "table_name",
                    "schema"
                ],
                "_create_sql_schema": [
                    "self",
                    "frame",
                    "table_name",
                    "keys"
                ]
            },
            "SQLiteTable": {
                "sql_schema": [
                    "self"
                ],
                "_execute_create": [
                    "self"
                ],
                "insert_statement": [
                    "self"
                ],
                "_execute_insert": [
                    "self",
                    "conn",
                    "keys",
                    "data_iter"
                ],
                "_create_table_setup": [
                    "self"
                ],
                "_sql_type_name": [
                    "self",
                    "col"
                ]
            },
            "SQLiteDatabase": {
                "__init__": [
                    "self",
                    "con",
                    "flavor",
                    "is_cursor"
                ],
                "run_transaction": [
                    "self"
                ],
                "execute": [
                    "self"
                ],
                "_query_iterator": [
                    "cursor",
                    "chunksize",
                    "columns",
                    "index_col",
                    "coerce_float",
                    "parse_dates"
                ],
                "read_query": [
                    "self",
                    "sql",
                    "index_col",
                    "coerce_float",
                    "params",
                    "parse_dates",
                    "chunksize"
                ],
                "_fetchall_as_list": [
                    "self",
                    "cur"
                ],
                "to_sql": [
                    "self",
                    "frame",
                    "name",
                    "if_exists",
                    "index",
                    "index_label",
                    "schema",
                    "chunksize"
                ],
                "has_table": [
                    "self",
                    "name",
                    "schema"
                ],
                "get_table": [
                    "self",
                    "table_name",
                    "schema"
                ],
                "drop_table": [
                    "self",
                    "name",
                    "schema"
                ],
                "_create_sql_schema": [
                    "self",
                    "frame",
                    "table_name",
                    "keys"
                ]
            }
        },
        "pandas.io.auth": {
            "process_flags": [
                "flags"
            ],
            "get_flow": [
                "secret",
                "scope",
                "redirect"
            ],
            "make_token_store": [
                "fpath"
            ],
            "authenticate": [
                "flow",
                "storage"
            ],
            "init_service": [
                "http"
            ],
            "reset_default_token_store": [],
            "AuthenticationConfigError": {}
        },
        "pandas.io.data": {
            "DataReader": [
                "name",
                "data_source",
                "start",
                "end",
                "retry_count",
                "pause"
            ],
            "_sanitize_dates": [
                "start",
                "end"
            ],
            "_in_chunks": [
                "seq",
                "size"
            ],
            "get_quote_yahoo": [
                "symbols"
            ],
            "get_quote_google": [
                "symbols"
            ],
            "_retry_read_url": [
                "url",
                "retry_count",
                "pause",
                "name"
            ],
            "_get_hist_yahoo": [
                "sym",
                "start",
                "end",
                "retry_count",
                "pause"
            ],
            "_get_hist_google": [
                "sym",
                "start",
                "end",
                "retry_count",
                "pause"
            ],
            "_adjust_prices": [
                "hist_data",
                "price_list"
            ],
            "_calc_return_index": [
                "price_df"
            ],
            "get_components_yahoo": [
                "idx_sym"
            ],
            "_dl_mult_symbols": [
                "symbols",
                "start",
                "end",
                "chunksize",
                "retry_count",
                "pause",
                "method"
            ],
            "_get_data_from": [
                "symbols",
                "start",
                "end",
                "retry_count",
                "pause",
                "adjust_price",
                "ret_index",
                "chunksize",
                "source"
            ],
            "get_data_yahoo": [
                "symbols",
                "start",
                "end",
                "retry_count",
                "pause",
                "adjust_price",
                "ret_index",
                "chunksize"
            ],
            "get_data_google": [
                "symbols",
                "start",
                "end",
                "retry_count",
                "pause",
                "adjust_price",
                "ret_index",
                "chunksize"
            ],
            "get_data_fred": [
                "name",
                "start",
                "end"
            ],
            "get_data_famafrench": [
                "name"
            ],
            "_two_char": [
                "s"
            ],
            "SymbolWarning": {},
            "RemoteDataError": {},
            "Options": {
                "__init__": [
                    "self",
                    "symbol",
                    "data_source"
                ],
                "get_options_data": [
                    "self",
                    "month",
                    "year",
                    "expiry"
                ],
                "_get_option_frames_from_yahoo": [
                    "self",
                    "expiry"
                ],
                "_expiry_to_string": [
                    "expiry"
                ],
                "_yahoo_url_from_expiry": [
                    "self",
                    "expiry"
                ],
                "_option_frames_from_url": [
                    "self",
                    "url"
                ],
                "_get_underlying_price": [
                    "self",
                    "url"
                ],
                "_get_option_data": [
                    "self",
                    "expiry",
                    "name"
                ],
                "get_call_data": [
                    "self",
                    "month",
                    "year",
                    "expiry"
                ],
                "get_put_data": [
                    "self",
                    "month",
                    "year",
                    "expiry"
                ],
                "get_near_stock_price": [
                    "self",
                    "above_below",
                    "call",
                    "put",
                    "month",
                    "year",
                    "expiry"
                ],
                "chop_data": [
                    "self",
                    "df",
                    "above_below",
                    "underlying_price"
                ],
                "_try_parse_dates": [
                    "self",
                    "year",
                    "month",
                    "expiry"
                ],
                "_validate_expiry": [
                    "self",
                    "expiry"
                ],
                "get_forward_data": [
                    "self",
                    "months",
                    "call",
                    "put",
                    "near",
                    "above_below"
                ],
                "get_all_data": [
                    "self",
                    "call",
                    "put"
                ],
                "_get_data_in_date_range": [
                    "self",
                    "dates",
                    "call",
                    "put"
                ],
                "expiry_dates": [
                    "self"
                ],
                "_get_expiry_dates_and_links": [
                    "self"
                ],
                "_parse_url": [
                    "self",
                    "url"
                ],
                "_process_data": [
                    "self",
                    "frame",
                    "type"
                ]
            }
        },
        "pandas.io.wb": {
            "download": [
                "country",
                "indicator",
                "start",
                "end",
                "errors"
            ],
            "_get_data": [
                "indicator",
                "country",
                "start",
                "end"
            ],
            "get_countries": [],
            "get_indicators": [],
            "search": [
                "string",
                "field",
                "case"
            ]
        },
        "pandas.io.packers": {
            "to_msgpack": [
                "path_or_buf"
            ],
            "read_msgpack": [
                "path_or_buf",
                "iterator"
            ],
            "dtype_for": [
                "t"
            ],
            "c2f": [
                "r",
                "i",
                "ctype_name"
            ],
            "convert": [
                "values"
            ],
            "unconvert": [
                "values",
                "dtype",
                "compress"
            ],
            "encode": [
                "obj"
            ],
            "decode": [
                "obj"
            ],
            "pack": [
                "o",
                "default",
                "encoding",
                "unicode_errors",
                "use_single_float"
            ],
            "unpack": [
                "packed",
                "object_hook",
                "list_hook",
                "use_list",
                "encoding",
                "unicode_errors",
                "object_pairs_hook"
            ],
            "Packer": {
                "__init__": [
                    "self",
                    "default",
                    "encoding",
                    "unicode_errors",
                    "use_single_float"
                ]
            },
            "Unpacker": {
                "__init__": [
                    "self",
                    "file_like",
                    "read_size",
                    "use_list",
                    "object_hook",
                    "object_pairs_hook",
                    "list_hook",
                    "encoding",
                    "unicode_errors",
                    "max_buffer_size"
                ]
            },
            "Iterator": {
                "__init__": [
                    "self",
                    "path"
                ],
                "__iter__": [
                    "self"
                ]
            }
        },
        "pandas.io.ga": {
            "reset_token_store": [],
            "read_ga": [
                "metrics",
                "dimensions",
                "start_date"
            ],
            "format_query": [
                "ids",
                "metrics",
                "start_date",
                "end_date",
                "dimensions",
                "segment",
                "filters",
                "sort",
                "start_index",
                "max_results"
            ],
            "_maybe_add_arg": [
                "query",
                "field",
                "data",
                "prefix"
            ],
            "_get_match": [
                "obj_store",
                "name",
                "id"
            ],
            "_clean_index": [
                "index_dims",
                "parse_dates"
            ],
            "_get_col_names": [
                "header_info"
            ],
            "_get_column_types": [
                "header_info"
            ],
            "_get_dim_names": [
                "header_info"
            ],
            "_get_met_names": [
                "header_info"
            ],
            "_get_data_types": [
                "header_info"
            ],
            "OAuthDataReader": {
                "__init__": [
                    "self",
                    "scope",
                    "token_file_name",
                    "redirect"
                ],
                "authenticate": [
                    "self",
                    "secrets"
                ],
                "_create_flow": [
                    "self",
                    "secrets"
                ]
            },
            "GDataReader": {
                "__init__": [
                    "self",
                    "scope",
                    "token_file_name",
                    "redirect",
                    "secrets"
                ],
                "service": [
                    "self"
                ],
                "_init_service": [
                    "self",
                    "secrets"
                ],
                "get_account": [
                    "self",
                    "name",
                    "id"
                ],
                "get_web_property": [
                    "self",
                    "account_id",
                    "name",
                    "id"
                ],
                "get_profile": [
                    "self",
                    "account_id",
                    "web_property_id",
                    "name",
                    "id"
                ],
                "create_query": [
                    "self"
                ],
                "get_data": [
                    "self",
                    "metrics",
                    "start_date",
                    "end_date",
                    "dimensions",
                    "segment",
                    "filters",
                    "start_index",
                    "max_results",
                    "index_col",
                    "parse_dates",
                    "keep_date_col",
                    "date_parser",
                    "na_values",
                    "converters",
                    "sort",
                    "dayfirst",
                    "account_name",
                    "account_id",
                    "property_name",
                    "property_id",
                    "profile_name",
                    "profile_id",
                    "chunksize"
                ],
                "_parse_data": [
                    "self",
                    "rows",
                    "col_info",
                    "index_col",
                    "parse_dates",
                    "keep_date_col",
                    "date_parser",
                    "dayfirst",
                    "na_values",
                    "converters",
                    "sort"
                ]
            },
            "GAnalytics": {
                "create_query": [
                    "self",
                    "profile_id",
                    "metrics",
                    "start_date",
                    "end_date",
                    "dimensions",
                    "segment",
                    "filters",
                    "start_index",
                    "max_results"
                ]
            }
        },
        "pandas.io.pickle": {
            "to_pickle": [
                "obj",
                "path"
            ],
            "read_pickle": [
                "path"
            ]
        },
        "pandas.io.date_converters": {
            "parse_date_time": [
                "date_col",
                "time_col"
            ],
            "parse_date_fields": [
                "year_col",
                "month_col",
                "day_col"
            ],
            "parse_all_fields": [
                "year_col",
                "month_col",
                "day_col",
                "hour_col",
                "minute_col",
                "second_col"
            ],
            "generic_parser": [
                "parse_func"
            ],
            "_maybe_cast": [
                "arr"
            ],
            "_check_columns": [
                "cols"
            ]
        },
        "pandas.io.json": {
            "to_json": [
                "path_or_buf",
                "obj",
                "orient",
                "date_format",
                "double_precision",
                "force_ascii",
                "date_unit",
                "default_handler"
            ],
            "read_json": [
                "path_or_buf",
                "orient",
                "typ",
                "dtype",
                "convert_axes",
                "convert_dates",
                "keep_default_dates",
                "numpy",
                "precise_float",
                "date_unit"
            ],
            "nested_to_record": [
                "ds",
                "prefix",
                "level"
            ],
            "json_normalize": [
                "data",
                "record_path",
                "meta",
                "meta_prefix",
                "record_prefix"
            ],
            "Writer": {
                "__init__": [
                    "self",
                    "obj",
                    "orient",
                    "date_format",
                    "double_precision",
                    "ensure_ascii",
                    "date_unit",
                    "default_handler"
                ],
                "_format_axes": [
                    "self"
                ],
                "write": [
                    "self"
                ]
            },
            "SeriesWriter": {
                "_format_axes": [
                    "self"
                ]
            },
            "FrameWriter": {
                "_format_axes": [
                    "self"
                ]
            },
            "Parser": {
                "__init__": [
                    "self",
                    "json",
                    "orient",
                    "dtype",
                    "convert_axes",
                    "convert_dates",
                    "keep_default_dates",
                    "numpy",
                    "precise_float",
                    "date_unit"
                ],
                "check_keys_split": [
                    "self",
                    "decoded"
                ],
                "parse": [
                    "self"
                ],
                "_convert_axes": [
                    "self"
                ],
                "_try_convert_types": [
                    "self"
                ],
                "_try_convert_data": [
                    "self",
                    "name",
                    "data",
                    "use_dtypes",
                    "convert_dates"
                ],
                "_try_convert_to_date": [
                    "self",
                    "data"
                ],
                "_try_convert_dates": [
                    "self"
                ]
            },
            "SeriesParser": {
                "_parse_no_numpy": [
                    "self"
                ],
                "_parse_numpy": [
                    "self"
                ],
                "_try_convert_types": [
                    "self"
                ]
            },
            "FrameParser": {
                "_parse_numpy": [
                    "self"
                ],
                "_parse_no_numpy": [
                    "self"
                ],
                "_process_converter": [
                    "self",
                    "f",
                    "filt"
                ],
                "_try_convert_types": [
                    "self"
                ],
                "_try_convert_dates": [
                    "self"
                ]
            }
        },
        "pandas.io.parsers": {
            "_read": [
                "filepath_or_buffer",
                "kwds"
            ],
            "_make_parser_function": [
                "name",
                "sep"
            ],
            "read_fwf": [
                "filepath_or_buffer",
                "colspecs",
                "widths"
            ],
            "_is_index_col": [
                "col"
            ],
            "TextParser": [],
            "count_empty_vals": [
                "vals"
            ],
            "_wrap_compressed": [
                "f",
                "compression",
                "encoding"
            ],
            "_make_date_converter": [
                "date_parser",
                "dayfirst",
                "infer_datetime_format"
            ],
            "_process_date_conversion": [
                "data_dict",
                "converter",
                "parse_spec",
                "index_col",
                "index_names",
                "columns",
                "keep_date_col"
            ],
            "_try_convert_dates": [
                "parser",
                "colspec",
                "data_dict",
                "columns"
            ],
            "_clean_na_values": [
                "na_values",
                "keep_default_na"
            ],
            "_clean_index_names": [
                "columns",
                "index_col"
            ],
            "_get_empty_meta": [
                "columns",
                "index_col",
                "index_names"
            ],
            "_floatify_na_values": [
                "na_values"
            ],
            "_stringify_na_values": [
                "na_values"
            ],
            "_get_na_values": [
                "col",
                "na_values",
                "na_fvalues"
            ],
            "_get_col_names": [
                "colspec",
                "columns"
            ],
            "_concat_date_cols": [
                "date_cols"
            ],
            "ParserWarning": {},
            "TextFileReader": {
                "__init__": [
                    "self",
                    "f",
                    "engine"
                ],
                "_get_options_with_defaults": [
                    "self",
                    "engine"
                ],
                "_clean_options": [
                    "self",
                    "options",
                    "engine"
                ],
                "__iter__": [
                    "self"
                ],
                "_make_engine": [
                    "self",
                    "engine"
                ],
                "_failover_to_python": [
                    "self"
                ],
                "read": [
                    "self",
                    "nrows"
                ],
                "_create_index": [
                    "self",
                    "ret"
                ],
                "get_chunk": [
                    "self",
                    "size"
                ]
            },
            "ParserBase": {
                "__init__": [
                    "self",
                    "kwds"
                ],
                "_has_complex_date_col": [
                    "self"
                ],
                "_should_parse_dates": [
                    "self",
                    "i"
                ],
                "_extract_multi_indexer_columns": [
                    "self",
                    "header",
                    "index_names",
                    "col_names",
                    "passed_names"
                ],
                "_maybe_make_multi_index_columns": [
                    "self",
                    "columns",
                    "col_names"
                ],
                "_make_index": [
                    "self",
                    "data",
                    "alldata",
                    "columns",
                    "indexnamerow"
                ],
                "_get_simple_index": [
                    "self",
                    "data",
                    "columns"
                ],
                "_get_complex_date_index": [
                    "self",
                    "data",
                    "col_names"
                ],
                "_agg_index": [
                    "self",
                    "index",
                    "try_parse_dates"
                ],
                "_convert_to_ndarrays": [
                    "self",
                    "dct",
                    "na_values",
                    "na_fvalues",
                    "verbose",
                    "converters"
                ],
                "_convert_types": [
                    "self",
                    "values",
                    "na_values",
                    "try_num_bool"
                ],
                "_do_date_conversions": [
                    "self",
                    "names",
                    "data"
                ]
            },
            "CParserWrapper": {
                "__init__": [
                    "self",
                    "src"
                ],
                "_set_noconvert_columns": [
                    "self"
                ],
                "set_error_bad_lines": [
                    "self",
                    "status"
                ],
                "read": [
                    "self",
                    "nrows"
                ],
                "_filter_usecols": [
                    "self",
                    "names"
                ],
                "_get_index_names": [
                    "self"
                ],
                "_maybe_parse_dates": [
                    "self",
                    "values",
                    "index",
                    "try_parse_dates"
                ]
            },
            "PythonParser": {
                "__init__": [
                    "self",
                    "f"
                ],
                "_set_no_thousands_columns": [
                    "self"
                ],
                "_make_reader": [
                    "self",
                    "f"
                ],
                "read": [
                    "self",
                    "rows"
                ],
                "_exclude_implicit_index": [
                    "self",
                    "alldata"
                ],
                "get_chunk": [
                    "self",
                    "size"
                ],
                "_convert_data": [
                    "self",
                    "data"
                ],
                "_infer_columns": [
                    "self"
                ],
                "_handle_usecols": [
                    "self",
                    "columns",
                    "usecols_key"
                ],
                "_buffered_line": [
                    "self"
                ],
                "_empty": [
                    "self",
                    "line"
                ],
                "_next_line": [
                    "self"
                ],
                "_check_comments": [
                    "self",
                    "lines"
                ],
                "_check_empty": [
                    "self",
                    "lines"
                ],
                "_check_thousands": [
                    "self",
                    "lines"
                ],
                "_clear_buffer": [
                    "self"
                ],
                "_get_index_name": [
                    "self",
                    "columns"
                ],
                "_rows_to_cols": [
                    "self",
                    "content"
                ],
                "_get_lines": [
                    "self",
                    "rows"
                ]
            },
            "FixedWidthReader": {
                "__init__": [
                    "self",
                    "f",
                    "colspecs",
                    "delimiter",
                    "comment"
                ],
                "get_rows": [
                    "self",
                    "n"
                ],
                "detect_colspecs": [
                    "self",
                    "n"
                ],
                "next": [
                    "self"
                ]
            },
            "FixedWidthFieldParser": {
                "__init__": [
                    "self",
                    "f"
                ],
                "_make_reader": [
                    "self",
                    "f"
                ]
            }
        },
        "pandas.io.api": {},
        "pandas.io.clipboard": {
            "read_clipboard": [],
            "to_clipboard": [
                "obj",
                "excel",
                "sep"
            ]
        },
        "pandas.io.html": {
            "_remove_whitespace": [
                "s",
                "regex"
            ],
            "_get_skiprows": [
                "skiprows"
            ],
            "_read": [
                "obj"
            ],
            "_build_xpath_expr": [
                "attrs"
            ],
            "_expand_elements": [
                "body"
            ],
            "_data_to_frame": [
                "data",
                "header",
                "index_col",
                "skiprows",
                "infer_types",
                "parse_dates",
                "tupleize_cols",
                "thousands"
            ],
            "_parser_dispatch": [
                "flavor"
            ],
            "_print_as_set": [
                "s"
            ],
            "_validate_flavor": [
                "flavor"
            ],
            "_parse": [
                "flavor",
                "io",
                "match",
                "header",
                "index_col",
                "skiprows",
                "infer_types",
                "parse_dates",
                "tupleize_cols",
                "thousands",
                "attrs",
                "encoding"
            ],
            "read_html": [
                "io",
                "match",
                "flavor",
                "header",
                "index_col",
                "skiprows",
                "infer_types",
                "attrs",
                "parse_dates",
                "tupleize_cols",
                "thousands",
                "encoding"
            ],
            "_HtmlFrameParser": {
                "__init__": [
                    "self",
                    "io",
                    "match",
                    "attrs",
                    "encoding"
                ],
                "parse_tables": [
                    "self"
                ],
                "_parse_raw_data": [
                    "self",
                    "rows"
                ],
                "_text_getter": [
                    "self",
                    "obj"
                ],
                "_parse_td": [
                    "self",
                    "obj"
                ],
                "_parse_tables": [
                    "self",
                    "doc",
                    "match",
                    "attrs"
                ],
                "_parse_tr": [
                    "self",
                    "table"
                ],
                "_parse_thead": [
                    "self",
                    "table"
                ],
                "_parse_tbody": [
                    "self",
                    "table"
                ],
                "_parse_tfoot": [
                    "self",
                    "table"
                ],
                "_build_doc": [
                    "self"
                ],
                "_build_table": [
                    "self",
                    "table"
                ],
                "_parse_raw_thead": [
                    "self",
                    "table"
                ],
                "_parse_raw_tfoot": [
                    "self",
                    "table"
                ],
                "_parse_raw_tbody": [
                    "self",
                    "table"
                ]
            },
            "_BeautifulSoupHtml5LibFrameParser": {
                "__init__": [
                    "self"
                ],
                "_text_getter": [
                    "self",
                    "obj"
                ],
                "_parse_td": [
                    "self",
                    "row"
                ],
                "_parse_tr": [
                    "self",
                    "element"
                ],
                "_parse_th": [
                    "self",
                    "element"
                ],
                "_parse_thead": [
                    "self",
                    "table"
                ],
                "_parse_tbody": [
                    "self",
                    "table"
                ],
                "_parse_tfoot": [
                    "self",
                    "table"
                ],
                "_parse_tables": [
                    "self",
                    "doc",
                    "match",
                    "attrs"
                ],
                "_setup_build_doc": [
                    "self"
                ],
                "_build_doc": [
                    "self"
                ]
            },
            "_LxmlFrameParser": {
                "__init__": [
                    "self"
                ],
                "_text_getter": [
                    "self",
                    "obj"
                ],
                "_parse_td": [
                    "self",
                    "row"
                ],
                "_parse_tr": [
                    "self",
                    "table"
                ],
                "_parse_tables": [
                    "self",
                    "doc",
                    "match",
                    "kwargs"
                ],
                "_build_doc": [
                    "self"
                ],
                "_parse_tbody": [
                    "self",
                    "table"
                ],
                "_parse_thead": [
                    "self",
                    "table"
                ],
                "_parse_tfoot": [
                    "self",
                    "table"
                ],
                "_parse_raw_thead": [
                    "self",
                    "table"
                ],
                "_parse_raw_tfoot": [
                    "self",
                    "table"
                ]
            }
        },
        "pandas.io.gbq": {
            "_parse_data": [
                "schema",
                "rows"
            ],
            "_parse_entry": [
                "field_value",
                "field_type"
            ],
            "_test_imports": [],
            "read_gbq": [
                "query",
                "project_id",
                "index_col",
                "col_order",
                "reauth"
            ],
            "to_gbq": [
                "dataframe",
                "destination_table",
                "project_id",
                "chunksize",
                "verbose",
                "reauth"
            ],
            "InvalidPageToken": {},
            "InvalidQueryException": {},
            "AccessDeniedException": {},
            "NotFoundException": {},
            "TermsOfServiceNotAcceptedException": {},
            "UnknownGBQException": {},
            "InvalidColumnOrder": {},
            "GbqConnector": {
                "__init__": [
                    "self",
                    "project_id",
                    "reauth"
                ],
                "get_credentials": [
                    "self"
                ],
                "get_service": [
                    "self",
                    "credentials"
                ],
                "run_query": [
                    "self",
                    "query"
                ],
                "load_data": [
                    "self",
                    "dataframe",
                    "dataset_id",
                    "table_id",
                    "chunksize",
                    "verbose"
                ]
            }
        },
        "pandas.io": {},
        "pandas.io.tests.generate_legacy_pickles": {
            "_create_sp_series": [],
            "_create_sp_tsseries": [],
            "_create_sp_frame": [],
            "create_data": [],
            "write_legacy_pickles": []
        },
        "pandas.io.tests.test_packers": {
            "check_arbitrary": [
                "a",
                "b"
            ],
            "TestPackers": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "encode_decode": [
                    "self",
                    "x"
                ]
            },
            "TestAPI": {
                "test_string_io": [
                    "self"
                ],
                "test_iterator_with_string_io": [
                    "self"
                ]
            },
            "TestNumpy": {
                "test_numpy_scalar_float": [
                    "self"
                ],
                "test_numpy_scalar_complex": [
                    "self"
                ],
                "test_scalar_float": [
                    "self"
                ],
                "test_scalar_complex": [
                    "self"
                ],
                "test_list_numpy_float": [
                    "self"
                ],
                "test_list_numpy_float_complex": [
                    "self"
                ],
                "test_list_float": [
                    "self"
                ],
                "test_list_float_complex": [
                    "self"
                ],
                "test_dict_float": [
                    "self"
                ],
                "test_dict_complex": [
                    "self"
                ],
                "test_dict_numpy_float": [
                    "self"
                ],
                "test_dict_numpy_complex": [
                    "self"
                ],
                "test_numpy_array_float": [
                    "self"
                ],
                "test_numpy_array_complex": [
                    "self"
                ],
                "test_list_mixed": [
                    "self"
                ]
            },
            "TestBasic": {
                "test_timestamp": [
                    "self"
                ],
                "test_datetimes": [
                    "self"
                ],
                "test_timedeltas": [
                    "self"
                ]
            },
            "TestIndex": {
                "setUp": [
                    "self"
                ],
                "test_basic_index": [
                    "self"
                ],
                "test_multi_index": [
                    "self"
                ],
                "test_unicode": [
                    "self"
                ]
            },
            "TestSeries": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ]
            },
            "TestNDFrame": {
                "setUp": [
                    "self"
                ],
                "test_basic_frame": [
                    "self"
                ],
                "test_basic_panel": [
                    "self"
                ],
                "test_multi": [
                    "self"
                ],
                "test_iterator": [
                    "self"
                ],
                "tests_datetimeindex_freq_issue": [
                    "self"
                ]
            },
            "TestSparse": {
                "_check_roundtrip": [
                    "self",
                    "obj",
                    "comparator"
                ],
                "test_sparse_series": [
                    "self"
                ],
                "test_sparse_frame": [
                    "self"
                ],
                "test_sparse_panel": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_clipboard": {
            "TestClipboard": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "check_round_trip_frame": [
                    "self",
                    "data_type",
                    "excel",
                    "sep"
                ],
                "test_round_trip_frame_sep": [
                    "self"
                ],
                "test_round_trip_frame_string": [
                    "self"
                ],
                "test_round_trip_frame": [
                    "self"
                ],
                "test_read_clipboard_infer_excel": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_sql": {
            "format_query": [
                "sql"
            ],
            "_skip_if_no_pymysql": [],
            "PandasSQLTest": {
                "drop_table": [
                    "self",
                    "table_name"
                ],
                "_get_exec": [
                    "self"
                ],
                "_load_iris_data": [
                    "self"
                ],
                "_check_iris_loaded_frame": [
                    "self",
                    "iris_frame"
                ],
                "_load_test1_data": [
                    "self"
                ],
                "_load_test2_data": [
                    "self"
                ],
                "_load_test3_data": [
                    "self"
                ],
                "_load_raw_sql": [
                    "self"
                ],
                "_count_rows": [
                    "self",
                    "table_name"
                ],
                "_read_sql_iris": [
                    "self"
                ],
                "_read_sql_iris_parameter": [
                    "self"
                ],
                "_read_sql_iris_named_parameter": [
                    "self"
                ],
                "_to_sql": [
                    "self"
                ],
                "_to_sql_empty": [
                    "self"
                ],
                "_to_sql_fail": [
                    "self"
                ],
                "_to_sql_replace": [
                    "self"
                ],
                "_to_sql_append": [
                    "self"
                ],
                "_roundtrip": [
                    "self"
                ],
                "_execute_sql": [
                    "self"
                ],
                "_to_sql_save_index": [
                    "self"
                ],
                "_transaction_test": [
                    "self"
                ]
            },
            "_TestSQLApi": {
                "setUp": [
                    "self"
                ],
                "test_read_sql_iris": [
                    "self"
                ],
                "test_legacy_read_frame": [
                    "self"
                ],
                "test_to_sql": [
                    "self"
                ],
                "test_to_sql_fail": [
                    "self"
                ],
                "test_to_sql_replace": [
                    "self"
                ],
                "test_to_sql_append": [
                    "self"
                ],
                "test_to_sql_type_mapping": [
                    "self"
                ],
                "test_to_sql_series": [
                    "self"
                ],
                "test_to_sql_panel": [
                    "self"
                ],
                "test_legacy_write_frame": [
                    "self"
                ],
                "test_roundtrip": [
                    "self"
                ],
                "test_roundtrip_chunksize": [
                    "self"
                ],
                "test_execute_sql": [
                    "self"
                ],
                "test_date_parsing": [
                    "self"
                ],
                "test_date_and_index": [
                    "self"
                ],
                "test_timedelta": [
                    "self"
                ],
                "test_to_sql_index_label": [
                    "self"
                ],
                "test_to_sql_index_label_multiindex": [
                    "self"
                ],
                "test_multiindex_roundtrip": [
                    "self"
                ],
                "test_integer_col_names": [
                    "self"
                ],
                "test_get_schema": [
                    "self"
                ],
                "test_chunksize_read": [
                    "self"
                ],
                "test_categorical": [
                    "self"
                ]
            },
            "TestSQLApi": {
                "connect": [
                    "self"
                ],
                "test_read_table_columns": [
                    "self"
                ],
                "test_read_table_index_col": [
                    "self"
                ],
                "test_read_sql_delegate": [
                    "self"
                ],
                "test_not_reflect_all_tables": [
                    "self"
                ],
                "test_warning_case_insensitive_table_name": [
                    "self"
                ],
                "_get_index_columns": [
                    "self",
                    "tbl_name"
                ]
            },
            "TestSQLiteFallbackApi": {
                "connect": [
                    "self",
                    "database"
                ],
                "test_sql_open_close": [
                    "self"
                ],
                "test_read_sql_delegate": [
                    "self"
                ],
                "test_safe_names_warning": [
                    "self"
                ],
                "test_get_schema2": [
                    "self"
                ],
                "test_tquery": [
                    "self"
                ],
                "test_uquery": [
                    "self"
                ]
            },
            "_TestSQLAlchemy": {
                "setUp": [
                    "self"
                ],
                "setup_import": [
                    "self"
                ],
                "setup_driver": [
                    "self"
                ],
                "connect": [
                    "self"
                ],
                "setup_connect": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_aread_sql": [
                    "self"
                ],
                "test_read_sql_parameter": [
                    "self"
                ],
                "test_read_sql_named_parameter": [
                    "self"
                ],
                "test_to_sql": [
                    "self"
                ],
                "test_to_sql_empty": [
                    "self"
                ],
                "test_to_sql_fail": [
                    "self"
                ],
                "test_to_sql_replace": [
                    "self"
                ],
                "test_to_sql_append": [
                    "self"
                ],
                "test_create_table": [
                    "self"
                ],
                "test_drop_table": [
                    "self"
                ],
                "test_roundtrip": [
                    "self"
                ],
                "test_execute_sql": [
                    "self"
                ],
                "test_read_table": [
                    "self"
                ],
                "test_read_table_columns": [
                    "self"
                ],
                "test_read_table_absent": [
                    "self"
                ],
                "test_default_type_conversion": [
                    "self"
                ],
                "test_bigint": [
                    "self"
                ],
                "test_default_date_load": [
                    "self"
                ],
                "test_date_parsing": [
                    "self"
                ],
                "test_datetime": [
                    "self"
                ],
                "test_datetime_NaT": [
                    "self"
                ],
                "test_datetime_date": [
                    "self"
                ],
                "test_datetime_time": [
                    "self"
                ],
                "test_mixed_dtype_insert": [
                    "self"
                ],
                "test_nan_numeric": [
                    "self"
                ],
                "test_nan_fullcolumn": [
                    "self"
                ],
                "test_nan_string": [
                    "self"
                ],
                "_get_index_columns": [
                    "self",
                    "tbl_name"
                ],
                "test_to_sql_save_index": [
                    "self"
                ],
                "test_transactions": [
                    "self"
                ]
            },
            "TestSQLiteAlchemy": {
                "connect": [
                    "self"
                ],
                "setup_driver": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_default_type_conversion": [
                    "self"
                ],
                "test_default_date_load": [
                    "self"
                ],
                "test_bigint_warning": [
                    "self"
                ]
            },
            "TestMySQLAlchemy": {
                "connect": [
                    "self"
                ],
                "setup_driver": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_default_type_conversion": [
                    "self"
                ],
                "test_read_procedure": [
                    "self"
                ]
            },
            "TestPostgreSQLAlchemy": {
                "connect": [
                    "self"
                ],
                "setup_driver": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_schema_support": [
                    "self"
                ]
            },
            "TestSQLiteFallback": {
                "connect": [
                    "self"
                ],
                "drop_table": [
                    "self",
                    "table_name"
                ],
                "setUp": [
                    "self"
                ],
                "test_invalid_flavor": [
                    "self"
                ],
                "test_read_sql": [
                    "self"
                ],
                "test_read_sql_parameter": [
                    "self"
                ],
                "test_read_sql_named_parameter": [
                    "self"
                ],
                "test_to_sql": [
                    "self"
                ],
                "test_to_sql_empty": [
                    "self"
                ],
                "test_to_sql_fail": [
                    "self"
                ],
                "test_to_sql_replace": [
                    "self"
                ],
                "test_to_sql_append": [
                    "self"
                ],
                "test_create_and_drop_table": [
                    "self"
                ],
                "test_roundtrip": [
                    "self"
                ],
                "test_execute_sql": [
                    "self"
                ],
                "test_datetime_date": [
                    "self"
                ],
                "test_datetime_time": [
                    "self"
                ],
                "_get_index_columns": [
                    "self",
                    "tbl_name"
                ],
                "test_to_sql_save_index": [
                    "self"
                ],
                "test_transactions": [
                    "self"
                ]
            },
            "TestMySQLLegacy": {
                "drop_table": [
                    "self",
                    "table_name"
                ],
                "_count_rows": [
                    "self",
                    "table_name"
                ],
                "connect": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_a_deprecation": [
                    "self"
                ],
                "_get_index_columns": [
                    "self",
                    "tbl_name"
                ],
                "test_to_sql_save_index": [
                    "self"
                ]
            },
            "TestXSQLite": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_write_row_by_row": [
                    "self"
                ],
                "test_execute": [
                    "self"
                ],
                "test_schema": [
                    "self"
                ],
                "test_execute_fail": [
                    "self"
                ],
                "test_execute_closed_connection": [
                    "self"
                ],
                "test_na_roundtrip": [
                    "self"
                ],
                "_check_roundtrip": [
                    "self",
                    "frame"
                ],
                "test_tquery": [
                    "self"
                ],
                "test_uquery": [
                    "self"
                ],
                "test_keyword_as_column_names": [
                    "self"
                ],
                "test_onecolumn_of_integer": [
                    "self"
                ],
                "test_if_exists": [
                    "self"
                ]
            },
            "TestXMySQL": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_write_row_by_row": [
                    "self"
                ],
                "test_execute": [
                    "self"
                ],
                "test_schema": [
                    "self"
                ],
                "test_execute_fail": [
                    "self"
                ],
                "test_execute_closed_connection": [
                    "self"
                ],
                "test_na_roundtrip": [
                    "self"
                ],
                "_check_roundtrip": [
                    "self",
                    "frame"
                ],
                "test_tquery": [
                    "self"
                ],
                "test_uquery": [
                    "self"
                ],
                "test_keyword_as_column_names": [
                    "self"
                ],
                "test_if_exists": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_date_converters": {
            "TestConverters": {
                "setUp": [
                    "self"
                ],
                "test_parse_date_time": [
                    "self"
                ],
                "test_parse_date_fields": [
                    "self"
                ],
                "test_datetime_six_col": [
                    "self"
                ],
                "test_datetime_fractional_seconds": [
                    "self"
                ],
                "test_generic": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_pytables": {
            "safe_remove": [
                "path"
            ],
            "safe_close": [
                "store"
            ],
            "create_tempfile": [
                "path"
            ],
            "ensure_clean_store": [
                "path",
                "mode",
                "complevel",
                "complib",
                "fletcher32"
            ],
            "ensure_clean_path": [
                "path"
            ],
            "_maybe_remove": [
                "store",
                "key"
            ],
            "compat_assert_produces_warning": [
                "w",
                "f"
            ],
            "_test_sort": [
                "obj"
            ],
            "TestHDFStore": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_factory_fun": [
                    "self"
                ],
                "test_conv_read_write": [
                    "self"
                ],
                "test_long_strings": [
                    "self"
                ],
                "test_api": [
                    "self"
                ],
                "test_api_default_format": [
                    "self"
                ],
                "test_keys": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_contains": [
                    "self"
                ],
                "test_versioning": [
                    "self"
                ],
                "test_mode": [
                    "self"
                ],
                "test_reopen_handle": [
                    "self"
                ],
                "test_open_args": [
                    "self"
                ],
                "test_flush": [
                    "self"
                ],
                "test_get": [
                    "self"
                ],
                "test_getattr": [
                    "self"
                ],
                "test_put": [
                    "self"
                ],
                "test_put_string_index": [
                    "self"
                ],
                "test_put_compression": [
                    "self"
                ],
                "test_put_compression_blosc": [
                    "self"
                ],
                "test_put_integer": [
                    "self"
                ],
                "test_put_mixed_type": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_series": [
                    "self"
                ],
                "test_store_index_types": [
                    "self"
                ],
                "test_encoding": [
                    "self"
                ],
                "test_append_some_nans": [
                    "self"
                ],
                "test_append_all_nans": [
                    "self"
                ],
                "test_append_frame_column_oriented": [
                    "self"
                ],
                "test_append_with_different_block_ordering": [
                    "self"
                ],
                "test_ndim_indexables": [
                    "self"
                ],
                "test_append_with_strings": [
                    "self"
                ],
                "test_append_with_data_columns": [
                    "self"
                ],
                "test_create_table_index": [
                    "self"
                ],
                "test_big_table_frame": [
                    "self"
                ],
                "test_big_table2_frame": [
                    "self"
                ],
                "test_big_put_frame": [
                    "self"
                ],
                "test_big_table_panel": [
                    "self"
                ],
                "test_append_diff_item_order": [
                    "self"
                ],
                "test_append_hierarchical": [
                    "self"
                ],
                "test_column_multiindex": [
                    "self"
                ],
                "test_store_multiindex": [
                    "self"
                ],
                "test_select_columns_in_where": [
                    "self"
                ],
                "test_pass_spec_to_storer": [
                    "self"
                ],
                "test_append_misc": [
                    "self"
                ],
                "test_append_raise": [
                    "self"
                ],
                "test_table_index_incompatible_dtypes": [
                    "self"
                ],
                "test_table_values_dtypes_roundtrip": [
                    "self"
                ],
                "test_table_mixed_dtypes": [
                    "self"
                ],
                "test_unimplemented_dtypes_table_columns": [
                    "self"
                ],
                "test_append_with_timezones_pytz": [
                    "self"
                ],
                "test_calendar_roundtrip_issue": [
                    "self"
                ],
                "test_append_with_timezones_dateutil": [
                    "self"
                ],
                "test_store_timezone": [
                    "self"
                ],
                "test_append_with_timedelta": [
                    "self"
                ],
                "test_remove": [
                    "self"
                ],
                "test_remove_where": [
                    "self"
                ],
                "test_remove_startstop": [
                    "self"
                ],
                "test_remove_crit": [
                    "self"
                ],
                "test_invalid_terms": [
                    "self"
                ],
                "test_terms": [
                    "self"
                ],
                "test_term_compat": [
                    "self"
                ],
                "test_backwards_compat_without_term_object": [
                    "self"
                ],
                "test_same_name_scoping": [
                    "self"
                ],
                "test_series": [
                    "self"
                ],
                "test_sparse_series": [
                    "self"
                ],
                "test_sparse_frame": [
                    "self"
                ],
                "test_sparse_panel": [
                    "self"
                ],
                "test_float_index": [
                    "self"
                ],
                "test_tuple_index": [
                    "self"
                ],
                "test_index_types": [
                    "self"
                ],
                "test_timeseries_preepoch": [
                    "self"
                ],
                "test_frame": [
                    "self"
                ],
                "test_empty_series_frame": [
                    "self"
                ],
                "test_empty_series": [
                    "self"
                ],
                "test_can_serialize_dates": [
                    "self"
                ],
                "test_timezones": [
                    "self"
                ],
                "test_fixed_offset_tz": [
                    "self"
                ],
                "test_store_hierarchical": [
                    "self"
                ],
                "test_store_index_name": [
                    "self"
                ],
                "test_store_series_name": [
                    "self"
                ],
                "test_store_mixed": [
                    "self"
                ],
                "test_wide": [
                    "self"
                ],
                "test_wide_table": [
                    "self"
                ],
                "test_select_with_dups": [
                    "self"
                ],
                "test_wide_table_dups": [
                    "self"
                ],
                "test_long": [
                    "self"
                ],
                "test_longpanel": [
                    "self"
                ],
                "test_overwrite_node": [
                    "self"
                ],
                "test_sparse_with_compression": [
                    "self"
                ],
                "test_select": [
                    "self"
                ],
                "test_select_dtypes": [
                    "self"
                ],
                "test_select_with_many_inputs": [
                    "self"
                ],
                "test_select_iterator": [
                    "self"
                ],
                "test_select_iterator_complete_8014": [
                    "self"
                ],
                "test_select_iterator_non_complete_8014": [
                    "self"
                ],
                "test_select_iterator_many_empty_frames": [
                    "self"
                ],
                "test_retain_index_attributes": [
                    "self"
                ],
                "test_retain_index_attributes2": [
                    "self"
                ],
                "test_panel_select": [
                    "self"
                ],
                "test_frame_select": [
                    "self"
                ],
                "test_frame_select_complex": [
                    "self"
                ],
                "test_frame_select_complex2": [
                    "self"
                ],
                "test_invalid_filtering": [
                    "self"
                ],
                "test_string_select": [
                    "self"
                ],
                "test_read_column": [
                    "self"
                ],
                "test_coordinates": [
                    "self"
                ],
                "test_append_to_multiple": [
                    "self"
                ],
                "test_append_to_multiple_dropna": [
                    "self"
                ],
                "test_select_as_multiple": [
                    "self"
                ],
                "test_nan_selection_bug_4858": [
                    "self"
                ],
                "test_start_stop": [
                    "self"
                ],
                "test_select_filter_corner": [
                    "self"
                ],
                "_check_roundtrip": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "_check_double_roundtrip": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "_check_roundtrip_table": [
                    "self",
                    "obj",
                    "comparator",
                    "compression"
                ],
                "test_multiple_open_close": [
                    "self"
                ],
                "test_pytables_native_read": [
                    "self"
                ],
                "test_legacy_read": [
                    "self"
                ],
                "test_legacy_table_read": [
                    "self"
                ],
                "test_legacy_0_10_read": [
                    "self"
                ],
                "test_legacy_0_11_read": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_legacy_table_write": [
                    "self"
                ],
                "test_store_datetime_fractional_secs": [
                    "self"
                ],
                "test_tseries_indices_series": [
                    "self"
                ],
                "test_tseries_indices_frame": [
                    "self"
                ],
                "test_tseries_select_index_column": [
                    "self"
                ],
                "test_unicode_index": [
                    "self"
                ],
                "test_store_datetime_mixed": [
                    "self"
                ],
                "test_append_with_diff_col_name_types_raises_value_error": [
                    "self"
                ],
                "test_query_with_nested_special_character": [
                    "self"
                ],
                "test_categorical": [
                    "self"
                ],
                "test_duplicate_column_name": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_data": {
            "_skip_if_no_lxml": [],
            "assert_n_failed_equals_n_null_columns": [
                "wngs",
                "obj",
                "cls"
            ],
            "TestGoogle": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "test_google": [
                    "self"
                ],
                "test_get_quote_fails": [
                    "self"
                ],
                "test_get_goog_volume": [
                    "self"
                ],
                "test_get_multi1": [
                    "self"
                ],
                "test_get_multi_invalid": [
                    "self"
                ],
                "test_get_multi2": [
                    "self"
                ]
            },
            "TestYahoo": {
                "setUpClass": [
                    "cls"
                ],
                "test_yahoo": [
                    "self"
                ],
                "test_yahoo_fails": [
                    "self"
                ],
                "test_get_quote_series": [
                    "self"
                ],
                "test_get_quote_string": [
                    "self"
                ],
                "test_get_quote_stringlist": [
                    "self"
                ],
                "test_get_components_dow_jones": [
                    "self"
                ],
                "test_get_components_dax": [
                    "self"
                ],
                "test_get_components_nasdaq_100": [
                    "self"
                ],
                "test_get_data_single_symbol": [
                    "self"
                ],
                "test_get_data_multiple_symbols": [
                    "self"
                ],
                "test_get_data_multiple_symbols_two_dates": [
                    "self"
                ],
                "test_get_date_ret_index": [
                    "self"
                ]
            },
            "TestYahooOptions": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "test_get_options_data": [
                    "self"
                ],
                "test_get_near_stock_price": [
                    "self"
                ],
                "test_get_call_data": [
                    "self"
                ],
                "test_get_put_data": [
                    "self"
                ],
                "test_get_expiry_dates": [
                    "self"
                ],
                "test_get_all_data": [
                    "self"
                ],
                "test_get_data_with_list": [
                    "self"
                ],
                "test_get_all_data_calls_only": [
                    "self"
                ],
                "test_sample_page_price_quote_time1": [
                    "self"
                ],
                "test_chop": [
                    "self"
                ],
                "test_chop_out_of_strike_range": [
                    "self"
                ],
                "test_sample_page_price_quote_time2": [
                    "self"
                ],
                "test_sample_page_chg_float": [
                    "self"
                ],
                "test_month_year": [
                    "self"
                ]
            },
            "TestOptionsWarnings": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "test_options_source_warning": [
                    "self"
                ]
            },
            "TestDataReader": {
                "test_is_s3_url": [
                    "self"
                ],
                "test_read_yahoo": [
                    "self"
                ],
                "test_read_google": [
                    "self"
                ],
                "test_read_fred": [
                    "self"
                ],
                "test_read_famafrench": [
                    "self"
                ]
            },
            "TestFred": {
                "test_fred": [
                    "self"
                ],
                "test_fred_nan": [
                    "self"
                ],
                "test_fred_parts": [
                    "self"
                ],
                "test_fred_part2": [
                    "self"
                ],
                "test_invalid_series": [
                    "self"
                ],
                "test_fred_multi": [
                    "self"
                ],
                "test_fred_multi_bad_series": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_stata": {
            "TestStata": {
                "setUp": [
                    "self"
                ],
                "read_dta": [
                    "self",
                    "file"
                ],
                "read_csv": [
                    "self",
                    "file"
                ],
                "test_read_empty_dta": [
                    "self"
                ],
                "test_read_dta1": [
                    "self"
                ],
                "test_read_dta2": [
                    "self"
                ],
                "test_read_dta3": [
                    "self"
                ],
                "test_read_dta4": [
                    "self"
                ],
                "test_read_write_dta5": [
                    "self"
                ],
                "test_write_dta6": [
                    "self"
                ],
                "test_read_dta7": [
                    "self"
                ],
                "test_read_dta8": [
                    "self"
                ],
                "test_read_dta9": [
                    "self"
                ],
                "test_read_write_dta10": [
                    "self"
                ],
                "test_stata_doc_examples": [
                    "self"
                ],
                "test_encoding": [
                    "self"
                ],
                "test_read_write_dta11": [
                    "self"
                ],
                "test_read_write_dta12": [
                    "self"
                ],
                "test_read_write_dta13": [
                    "self"
                ],
                "test_read_write_reread_dta14": [
                    "self"
                ],
                "test_read_write_reread_dta15": [
                    "self"
                ],
                "test_timestamp_and_label": [
                    "self"
                ],
                "test_numeric_column_names": [
                    "self"
                ],
                "test_nan_to_missing_value": [
                    "self"
                ],
                "test_no_index": [
                    "self"
                ],
                "test_string_no_dates": [
                    "self"
                ],
                "test_large_value_conversion": [
                    "self"
                ],
                "test_dates_invalid_column": [
                    "self"
                ],
                "test_date_export_formats": [
                    "self"
                ],
                "test_write_missing_strings": [
                    "self"
                ],
                "test_bool_uint": [
                    "self"
                ],
                "test_variable_labels": [
                    "self"
                ],
                "test_minimal_size_col": [
                    "self"
                ],
                "test_excessively_long_string": [
                    "self"
                ],
                "test_missing_value_generator": [
                    "self"
                ],
                "test_missing_value_conversion": [
                    "self"
                ],
                "test_big_dates": [
                    "self"
                ],
                "test_dtype_conversion": [
                    "self"
                ],
                "test_drop_column": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_ga": {
            "TestGoogle": {
                "test_remove_token_store": [
                    "self"
                ],
                "test_getdata": [
                    "self"
                ],
                "test_iterator": [
                    "self"
                ],
                "test_v2_advanced_segment_format": [
                    "self"
                ],
                "test_v2_dynamic_segment_format": [
                    "self"
                ],
                "test_v3_advanced_segment_common_format": [
                    "self"
                ],
                "test_v3_advanced_segment_weird_format": [
                    "self"
                ],
                "test_v3_advanced_segment_with_underscore_format": [
                    "self"
                ],
                "test_segment": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_json_norm": {
            "_assert_equal_data": [
                "left",
                "right"
            ],
            "TestJSONNormalize": {
                "setUp": [
                    "self"
                ],
                "test_simple_records": [
                    "self"
                ],
                "test_simple_normalize": [
                    "self"
                ],
                "test_more_deeply_nested": [
                    "self"
                ],
                "test_shallow_nested": [
                    "self"
                ],
                "test_meta_name_conflict": [
                    "self"
                ],
                "test_record_prefix": [
                    "self"
                ]
            },
            "TestNestedToRecord": {
                "test_flat_stays_flat": [
                    "self"
                ],
                "test_one_level_deep_flattens": [
                    "self"
                ],
                "test_nested_flattens": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_gbq": {
            "missing_bq": [],
            "test_requirements": [],
            "TestGBQConnectorIntegration": {
                "setUp": [
                    "self"
                ],
                "test_should_be_able_to_make_a_connector": [
                    "self"
                ],
                "test_should_be_able_to_get_valid_credentials": [
                    "self"
                ],
                "test_should_be_able_to_get_a_bigquery_service": [
                    "self"
                ],
                "test_should_be_able_to_get_schema_from_query": [
                    "self"
                ],
                "test_should_be_able_to_get_results_from_query": [
                    "self"
                ]
            },
            "TestReadGBQUnitTests": {
                "setUp": [
                    "self"
                ],
                "test_should_return_bigquery_integers_as_python_floats": [
                    "self"
                ],
                "test_should_return_bigquery_floats_as_python_floats": [
                    "self"
                ],
                "test_should_return_bigquery_timestamps_as_numpy_datetime": [
                    "self"
                ],
                "test_should_return_bigquery_booleans_as_python_booleans": [
                    "self"
                ],
                "test_should_return_bigquery_strings_as_python_strings": [
                    "self"
                ],
                "test_to_gbq_should_fail_if_invalid_table_name_passed": [
                    "self"
                ],
                "test_to_gbq_with_no_project_id_given_should_fail": [
                    "self"
                ],
                "test_read_gbq_with_no_project_id_given_should_fail": [
                    "self"
                ],
                "test_that_parse_data_works_properly": [
                    "self"
                ]
            },
            "TestReadGBQIntegration": {
                "setUp": [
                    "self"
                ],
                "test_should_properly_handle_valid_strings": [
                    "self"
                ],
                "test_should_properly_handle_empty_strings": [
                    "self"
                ],
                "test_should_properly_handle_null_strings": [
                    "self"
                ],
                "test_should_properly_handle_valid_integers": [
                    "self"
                ],
                "test_should_properly_handle_null_integers": [
                    "self"
                ],
                "test_should_properly_handle_valid_floats": [
                    "self"
                ],
                "test_should_properly_handle_null_floats": [
                    "self"
                ],
                "test_should_properly_handle_timestamp_unix_epoch": [
                    "self"
                ],
                "test_should_properly_handle_arbitrary_timestamp": [
                    "self"
                ],
                "test_should_properly_handle_null_timestamp": [
                    "self"
                ],
                "test_should_properly_handle_true_boolean": [
                    "self"
                ],
                "test_should_properly_handle_false_boolean": [
                    "self"
                ],
                "test_should_properly_handle_null_boolean": [
                    "self"
                ],
                "test_unicode_string_conversion_and_normalization": [
                    "self"
                ],
                "test_index_column": [
                    "self"
                ],
                "test_column_order": [
                    "self"
                ],
                "test_column_order_plus_index": [
                    "self"
                ],
                "test_malformed_query": [
                    "self"
                ],
                "test_bad_project_id": [
                    "self"
                ],
                "test_bad_table_name": [
                    "self"
                ],
                "test_download_dataset_larger_than_200k_rows": [
                    "self"
                ]
            },
            "TestToGBQIntegration": {
                "setUp": [
                    "self"
                ],
                "setUpClass": [
                    "cls"
                ],
                "test_upload_data": [
                    "self"
                ],
                "test_google_upload_errors_should_raise_exception": [
                    "self"
                ],
                "tearDownClass": [
                    "cls"
                ]
            }
        },
        "pandas.io.tests.test_parsers": {
            "assert_same_values_and_dtype": [
                "res",
                "exp"
            ],
            "ParserTests": {
                "read_csv": [
                    "self"
                ],
                "read_table": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "test_converters_type_must_be_dict": [
                    "self"
                ],
                "test_multi_character_decimal_marker": [
                    "self"
                ],
                "test_empty_decimal_marker": [
                    "self"
                ],
                "test_empty_thousands_marker": [
                    "self"
                ],
                "test_empty_string": [
                    "self"
                ],
                "test_read_csv": [
                    "self"
                ],
                "test_dialect": [
                    "self"
                ],
                "test_dialect_str": [
                    "self"
                ],
                "test_1000_sep": [
                    "self"
                ],
                "test_1000_sep_with_decimal": [
                    "self"
                ],
                "test_separator_date_conflict": [
                    "self"
                ],
                "test_squeeze": [
                    "self"
                ],
                "test_squeeze_no_view": [
                    "self"
                ],
                "test_inf_parsing": [
                    "self"
                ],
                "test_multiple_date_col": [
                    "self"
                ],
                "test_multiple_date_cols_int_cast": [
                    "self"
                ],
                "test_multiple_date_col_timestamp_parse": [
                    "self"
                ],
                "test_single_line": [
                    "self"
                ],
                "test_multiple_date_cols_with_header": [
                    "self"
                ],
                "test_multiple_date_col_name_collision": [
                    "self"
                ],
                "test_index_col_named": [
                    "self"
                ],
                "test_converter_index_col_bug": [
                    "self"
                ],
                "test_date_parser_int_bug": [
                    "self"
                ],
                "test_multiple_skts_example": [
                    "self"
                ],
                "test_malformed": [
                    "self"
                ],
                "test_passing_dtype": [
                    "self"
                ],
                "test_non_string_na_values": [
                    "self"
                ],
                "test_default_na_values": [
                    "self"
                ],
                "test_custom_na_values": [
                    "self"
                ],
                "test_nat_parse": [
                    "self"
                ],
                "test_skiprows_bug": [
                    "self"
                ],
                "test_deep_skiprows": [
                    "self"
                ],
                "test_detect_string_na": [
                    "self"
                ],
                "test_unnamed_columns": [
                    "self"
                ],
                "test_string_nas": [
                    "self"
                ],
                "test_duplicate_columns": [
                    "self"
                ],
                "test_csv_mixed_type": [
                    "self"
                ],
                "test_csv_custom_parser": [
                    "self"
                ],
                "test_parse_dates_implicit_first_col": [
                    "self"
                ],
                "test_parse_dates_string": [
                    "self"
                ],
                "test_yy_format": [
                    "self"
                ],
                "test_parse_dates_column_list": [
                    "self"
                ],
                "test_no_header": [
                    "self"
                ],
                "test_no_header_prefix": [
                    "self"
                ],
                "test_header_with_index_col": [
                    "self"
                ],
                "test_read_csv_dataframe": [
                    "self"
                ],
                "test_read_csv_no_index_name": [
                    "self"
                ],
                "test_read_table_unicode": [
                    "self"
                ],
                "test_read_table_wrong_num_columns": [
                    "self"
                ],
                "test_read_table_duplicate_index": [
                    "self"
                ],
                "test_read_table_duplicate_index_implicit": [
                    "self"
                ],
                "test_parse_bools": [
                    "self"
                ],
                "test_int_conversion": [
                    "self"
                ],
                "test_infer_index_col": [
                    "self"
                ],
                "test_read_nrows": [
                    "self"
                ],
                "test_read_chunksize": [
                    "self"
                ],
                "test_read_chunksize_named": [
                    "self"
                ],
                "test_get_chunk_passed_chunksize": [
                    "self"
                ],
                "test_read_text_list": [
                    "self"
                ],
                "test_iterator": [
                    "self"
                ],
                "test_header_not_first_line": [
                    "self"
                ],
                "test_header_multi_index": [
                    "self"
                ],
                "test_header_multiindex_common_format": [
                    "self"
                ],
                "test_pass_names_with_index": [
                    "self"
                ],
                "test_multi_index_no_level_names": [
                    "self"
                ],
                "test_multi_index_parse_dates": [
                    "self"
                ],
                "test_skip_footer": [
                    "self"
                ],
                "test_no_unnamed_index": [
                    "self"
                ],
                "test_converters": [
                    "self"
                ],
                "test_converters_no_implicit_conv": [
                    "self"
                ],
                "test_converters_euro_decimal_format": [
                    "self"
                ],
                "test_converter_return_string_bug": [
                    "self"
                ],
                "test_read_table_buglet_4x_multiindex": [
                    "self"
                ],
                "test_line_comment": [
                    "self"
                ],
                "test_comment_skiprows": [
                    "self"
                ],
                "test_comment_header": [
                    "self"
                ],
                "test_comment_skiprows_header": [
                    "self"
                ],
                "test_read_csv_parse_simple_list": [
                    "self"
                ],
                "test_parse_dates_custom_euroformat": [
                    "self"
                ],
                "test_na_value_dict": [
                    "self"
                ],
                "test_url": [
                    "self"
                ],
                "test_file": [
                    "self"
                ],
                "test_parse_tz_aware": [
                    "self"
                ],
                "test_multiple_date_cols_index": [
                    "self"
                ],
                "test_multiple_date_cols_chunked": [
                    "self"
                ],
                "test_multiple_date_col_named_components": [
                    "self"
                ],
                "test_multiple_date_col_multiple_index": [
                    "self"
                ],
                "test_comment": [
                    "self"
                ],
                "test_bool_na_values": [
                    "self"
                ],
                "test_nonexistent_path": [
                    "self"
                ],
                "test_missing_trailing_delimiters": [
                    "self"
                ],
                "test_skipinitialspace": [
                    "self"
                ],
                "test_utf16_bom_skiprows": [
                    "self"
                ],
                "test_utf16_example": [
                    "self"
                ],
                "test_converters_corner_with_nas": [
                    "self"
                ],
                "test_unicode_encoding": [
                    "self"
                ],
                "test_trailing_delimiters": [
                    "self"
                ],
                "test_escapechar": [
                    "self"
                ],
                "test_header_names_backward_compat": [
                    "self"
                ],
                "test_int64_min_issues": [
                    "self"
                ],
                "test_parse_integers_above_fp_precision": [
                    "self"
                ],
                "test_usecols_index_col_conflict": [
                    "self"
                ],
                "test_chunks_have_consistent_numerical_type": [
                    "self"
                ],
                "test_warn_if_chunks_have_mismatched_type": [
                    "self"
                ],
                "test_usecols": [
                    "self"
                ],
                "test_integer_overflow_bug": [
                    "self"
                ],
                "test_catch_too_many_names": [
                    "self"
                ],
                "test_ignore_leading_whitespace": [
                    "self"
                ],
                "test_nrows_and_chunksize_raises_notimplemented": [
                    "self"
                ]
            },
            "TestPythonParser": {
                "test_negative_skipfooter_raises": [
                    "self"
                ],
                "read_csv": [
                    "self"
                ],
                "read_table": [
                    "self"
                ],
                "test_sniff_delimiter": [
                    "self"
                ],
                "test_regex_separator": [
                    "self"
                ],
                "test_1000_fwf": [
                    "self"
                ],
                "test_1000_sep_with_decimal": [
                    "self"
                ],
                "test_comment_fwf": [
                    "self"
                ],
                "test_fwf": [
                    "self"
                ],
                "test_fwf_colspecs_is_list_or_tuple": [
                    "self"
                ],
                "test_fwf_colspecs_is_list_or_tuple_of_two_element_tuples": [
                    "self"
                ],
                "test_fwf_colspecs_None": [
                    "self"
                ],
                "test_fwf_regression": [
                    "self"
                ],
                "test_fwf_compression": [
                    "self"
                ],
                "test_BytesIO_input": [
                    "self"
                ],
                "test_verbose_import": [
                    "self"
                ],
                "test_float_precision_specified": [
                    "self"
                ],
                "test_iteration_open_handle": [
                    "self"
                ],
                "test_iterator": [
                    "self"
                ],
                "test_single_line": [
                    "self"
                ],
                "test_malformed": [
                    "self"
                ],
                "test_skip_footer": [
                    "self"
                ],
                "test_decompression_regex_sep": [
                    "self"
                ],
                "test_read_table_buglet_4x_multiindex": [
                    "self"
                ],
                "test_line_comment": [
                    "self"
                ],
                "test_empty_lines": [
                    "self"
                ],
                "test_whitespace_lines": [
                    "self"
                ]
            },
            "TestFwfColspaceSniffing": {
                "test_full_file": [
                    "self"
                ],
                "test_full_file_with_missing": [
                    "self"
                ],
                "test_full_file_with_spaces": [
                    "self"
                ],
                "test_full_file_with_spaces_and_missing": [
                    "self"
                ],
                "test_messed_up_data": [
                    "self"
                ],
                "test_multiple_delimiters": [
                    "self"
                ],
                "test_variable_width_unicode": [
                    "self"
                ]
            },
            "TestCParserHighMemory": {
                "read_csv": [
                    "self"
                ],
                "read_table": [
                    "self"
                ],
                "test_compact_ints": [
                    "self"
                ],
                "test_parse_dates_empty_string": [
                    "self"
                ],
                "test_usecols": [
                    "self"
                ],
                "test_line_comment": [
                    "self"
                ],
                "test_comment_skiprows": [
                    "self"
                ],
                "test_comment_header": [
                    "self"
                ],
                "test_comment_skiprows_header": [
                    "self"
                ],
                "test_empty_lines": [
                    "self"
                ],
                "test_whitespace_lines": [
                    "self"
                ],
                "test_passing_dtype": [
                    "self"
                ],
                "test_fallback_to_python": [
                    "self"
                ]
            },
            "TestCParserLowMemory": {
                "read_csv": [
                    "self"
                ],
                "read_table": [
                    "self"
                ],
                "test_compact_ints": [
                    "self"
                ],
                "test_precise_conversion": [
                    "self"
                ],
                "test_pass_dtype": [
                    "self"
                ],
                "test_usecols_dtypes": [
                    "self"
                ],
                "test_usecols_implicit_index_col": [
                    "self"
                ],
                "test_usecols_with_whitespace": [
                    "self"
                ],
                "test_usecols_regex_sep": [
                    "self"
                ],
                "test_pure_python_failover": [
                    "self"
                ],
                "test_decompression": [
                    "self"
                ],
                "test_decompression_regex_sep": [
                    "self"
                ],
                "test_memory_map": [
                    "self"
                ],
                "test_disable_bool_parsing": [
                    "self"
                ],
                "test_int64_overflow": [
                    "self"
                ],
                "test_euro_decimal_format": [
                    "self"
                ],
                "test_custom_lineterminator": [
                    "self"
                ],
                "test_raise_on_passed_int_dtype_with_nas": [
                    "self"
                ],
                "test_na_trailing_columns": [
                    "self"
                ],
                "test_parse_ragged_csv": [
                    "self"
                ],
                "test_tokenize_CR_with_quoting": [
                    "self"
                ],
                "test_raise_on_no_columns": [
                    "self"
                ],
                "test_warn_if_chunks_have_mismatched_type": [
                    "self"
                ],
                "test_invalid_c_parser_opts_with_not_c_parser": [
                    "self"
                ],
                "test_passing_dtype": [
                    "self"
                ],
                "test_fallback_to_python": [
                    "self"
                ],
                "test_raise_on_sep_with_delim_whitespace": [
                    "self"
                ]
            },
            "TestMiscellaneous": {
                "test_compare_whitespace_regex": [
                    "self"
                ],
                "test_fallback_to_python": [
                    "self"
                ]
            },
            "TestParseSQL": {
                "test_convert_sql_column_floats": [
                    "self"
                ],
                "test_convert_sql_column_strings": [
                    "self"
                ],
                "test_convert_sql_column_unicode": [
                    "self"
                ],
                "test_convert_sql_column_ints": [
                    "self"
                ],
                "test_convert_sql_column_longs": [
                    "self"
                ],
                "test_convert_sql_column_bools": [
                    "self"
                ],
                "test_convert_sql_column_decimals": [
                    "self"
                ]
            },
            "TestS3": {
                "setUp": [
                    "self"
                ],
                "test_parse_public_s3_bucket": [
                    "self"
                ],
                "test_s3_fails": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_pickle": {
            "TestPickle": {
                "setUp": [
                    "self"
                ],
                "compare_element": [
                    "self",
                    "typ",
                    "result",
                    "expected"
                ],
                "compare": [
                    "self",
                    "vf"
                ],
                "read_pickles": [
                    "self",
                    "version"
                ],
                "test_read_pickles_0_10_1": [
                    "self"
                ],
                "test_read_pickles_0_11_0": [
                    "self"
                ],
                "test_read_pickles_0_12_0": [
                    "self"
                ],
                "test_read_pickles_0_13_0": [
                    "self"
                ],
                "test_read_pickles_0_14_0": [
                    "self"
                ],
                "test_round_trip_current": [
                    "self"
                ],
                "_validate_timeseries": [
                    "self",
                    "pickled",
                    "current"
                ]
            }
        },
        "pandas.io.tests.test_cparser": {
            "assert_array_dicts_equal": [
                "left",
                "right"
            ],
            "TestCParser": {
                "setUp": [
                    "self"
                ],
                "test_file_handle": [
                    "self"
                ],
                "test_string_filename": [
                    "self"
                ],
                "test_file_handle_mmap": [
                    "self"
                ],
                "test_StringIO": [
                    "self"
                ],
                "test_string_factorize": [
                    "self"
                ],
                "test_skipinitialspace": [
                    "self"
                ],
                "test_parse_booleans": [
                    "self"
                ],
                "test_delimit_whitespace": [
                    "self"
                ],
                "test_embedded_newline": [
                    "self"
                ],
                "test_euro_decimal": [
                    "self"
                ],
                "test_integer_thousands": [
                    "self"
                ],
                "test_integer_thousands_alt": [
                    "self"
                ],
                "test_skip_bad_lines": [
                    "self"
                ],
                "test_header_not_enough_lines": [
                    "self"
                ],
                "test_escapechar": [
                    "self"
                ],
                "test_eof_has_eol": [
                    "self"
                ],
                "test_na_substitution": [
                    "self"
                ],
                "test_numpy_string_dtype": [
                    "self"
                ],
                "test_pass_dtype": [
                    "self"
                ],
                "test_usecols": [
                    "self"
                ],
                "test_cr_delimited": [
                    "self"
                ],
                "test_empty_field_eof": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_excel": {
            "_skip_if_no_xlrd": [],
            "_skip_if_no_xlwt": [],
            "_skip_if_no_openpyxl": [],
            "_skip_if_no_xlsxwriter": [],
            "_skip_if_no_excelsuite": [],
            "raise_wrapper": [
                "major_ver"
            ],
            "raise_on_incompat_version": [
                "major_ver"
            ],
            "SharedItems": {
                "setUp": [
                    "self"
                ],
                "read_csv": [
                    "self"
                ]
            },
            "ExcelReaderTests": {
                "test_parse_cols_int": [
                    "self"
                ],
                "test_parse_cols_list": [
                    "self"
                ],
                "test_parse_cols_str": [
                    "self"
                ],
                "test_excel_stop_iterator": [
                    "self"
                ],
                "test_excel_cell_error_na": [
                    "self"
                ],
                "test_excel_passes_na": [
                    "self"
                ],
                "check_excel_table_sheet_by_index": [
                    "self",
                    "filename",
                    "csvfile"
                ],
                "test_excel_table_sheet_by_index": [
                    "self"
                ],
                "test_excel_table": [
                    "self"
                ],
                "test_excel_read_buffer": [
                    "self"
                ],
                "test_read_xlrd_Book": [
                    "self"
                ],
                "test_read_from_http_url": [
                    "self"
                ],
                "test_read_from_file_url": [
                    "self"
                ],
                "test_xlsx_table": [
                    "self"
                ],
                "test_reader_closes_file": [
                    "self"
                ],
                "test_reader_special_dtypes": [
                    "self"
                ],
                "test_reader_seconds": [
                    "self"
                ]
            },
            "ExcelWriterBase": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_excel_sheet_by_name_raise": [
                    "self"
                ],
                "test_excel_deprecated_options": [
                    "self"
                ],
                "test_excelwriter_contextmanager": [
                    "self"
                ],
                "test_roundtrip": [
                    "self"
                ],
                "test_mixed": [
                    "self"
                ],
                "test_tsframe": [
                    "self"
                ],
                "test_basics_with_nan": [
                    "self"
                ],
                "test_int_types": [
                    "self"
                ],
                "test_float_types": [
                    "self"
                ],
                "test_bool_types": [
                    "self"
                ],
                "test_inf_roundtrip": [
                    "self"
                ],
                "test_sheets": [
                    "self"
                ],
                "test_colaliases": [
                    "self"
                ],
                "test_roundtrip_indexlabels": [
                    "self"
                ],
                "test_excel_roundtrip_indexname": [
                    "self"
                ],
                "test_excel_roundtrip_datetime": [
                    "self"
                ],
                "test_excel_date_datetime_format": [
                    "self"
                ],
                "test_to_excel_periodindex": [
                    "self"
                ],
                "test_to_excel_multiindex": [
                    "self"
                ],
                "test_to_excel_multiindex_dates": [
                    "self"
                ],
                "test_to_excel_multiindex_no_write_index": [
                    "self"
                ],
                "test_to_excel_float_format": [
                    "self"
                ],
                "test_to_excel_output_encoding": [
                    "self"
                ],
                "test_to_excel_unicode_filename": [
                    "self"
                ],
                "test_excel_010_hemstring": [
                    "self"
                ],
                "test_duplicated_columns": [
                    "self"
                ],
                "test_swapped_columns": [
                    "self"
                ]
            },
            "OpenpyxlTests": {
                "test_to_excel_styleconverter": [
                    "self"
                ]
            },
            "Openpyxl2Tests": {
                "test_to_excel_styleconverter": [
                    "self"
                ],
                "test_write_cells_merge_styled": [
                    "self"
                ]
            },
            "XlwtTests": {
                "test_to_excel_styleconverter": [
                    "self"
                ]
            },
            "XlsxWriterTests": {},
            "OpenpyxlTests_NoMerge": {},
            "XlwtTests_NoMerge": {},
            "XlsxWriterTests_NoMerge": {},
            "ExcelWriterEngineTests": {
                "test_ExcelWriter_dispatch": [
                    "self"
                ],
                "test_register_writer": [
                    "self"
                ]
            }
        },
        "pandas.io.tests": {
            "setUp": []
        },
        "pandas.io.tests.test_wb": {
            "TestWB": {
                "test_wdi_search": [
                    "self"
                ],
                "test_wdi_download": [
                    "self"
                ],
                "test_wdi_download_w_retired_indicator": [
                    "self"
                ],
                "test_wdi_download_w_crash_inducing_countrycode": [
                    "self"
                ],
                "test_wdi_get_countries": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_html": {
            "_have_module": [
                "module_name"
            ],
            "_skip_if_no": [
                "module_name"
            ],
            "_skip_if_none_of": [
                "module_names"
            ],
            "assert_framelist_equal": [
                "list1",
                "list2"
            ],
            "test_bs4_version_fails": [],
            "_lang_enc": [
                "filename"
            ],
            "test_invalid_flavor": [],
            "get_elements_from_file": [
                "url",
                "element"
            ],
            "test_bs4_finds_tables": [],
            "get_lxml_elements": [
                "url",
                "element"
            ],
            "test_lxml_finds_tables": [],
            "test_lxml_finds_tbody": [],
            "test_same_ordering": [],
            "ReadHtmlMixin": {
                "read_html": [
                    "self"
                ]
            },
            "TestReadHtml": {
                "setUpClass": [
                    "cls"
                ],
                "test_to_html_compat": [
                    "self"
                ],
                "test_banklist_url": [
                    "self"
                ],
                "test_spam_url": [
                    "self"
                ],
                "test_banklist": [
                    "self"
                ],
                "test_spam_no_types": [
                    "self"
                ],
                "test_spam_with_types": [
                    "self"
                ],
                "test_spam_no_match": [
                    "self"
                ],
                "test_banklist_no_match": [
                    "self"
                ],
                "test_spam_header": [
                    "self"
                ],
                "test_skiprows_int": [
                    "self"
                ],
                "test_skiprows_xrange": [
                    "self"
                ],
                "test_skiprows_list": [
                    "self"
                ],
                "test_skiprows_set": [
                    "self"
                ],
                "test_skiprows_slice": [
                    "self"
                ],
                "test_skiprows_slice_short": [
                    "self"
                ],
                "test_skiprows_slice_long": [
                    "self"
                ],
                "test_skiprows_ndarray": [
                    "self"
                ],
                "test_skiprows_invalid": [
                    "self"
                ],
                "test_index": [
                    "self"
                ],
                "test_header_and_index_no_types": [
                    "self"
                ],
                "test_header_and_index_with_types": [
                    "self"
                ],
                "test_infer_types": [
                    "self"
                ],
                "test_string_io": [
                    "self"
                ],
                "test_string": [
                    "self"
                ],
                "test_file_like": [
                    "self"
                ],
                "test_bad_url_protocol": [
                    "self"
                ],
                "test_invalid_url": [
                    "self"
                ],
                "test_file_url": [
                    "self"
                ],
                "test_invalid_table_attrs": [
                    "self"
                ],
                "_bank_data": [
                    "self"
                ],
                "test_multiindex_header": [
                    "self"
                ],
                "test_multiindex_index": [
                    "self"
                ],
                "test_multiindex_header_index": [
                    "self"
                ],
                "test_multiindex_header_skiprows_tuples": [
                    "self"
                ],
                "test_multiindex_header_skiprows": [
                    "self"
                ],
                "test_multiindex_header_index_skiprows": [
                    "self"
                ],
                "test_regex_idempotency": [
                    "self"
                ],
                "test_negative_skiprows": [
                    "self"
                ],
                "test_multiple_matches": [
                    "self"
                ],
                "test_pythonxy_plugins_table": [
                    "self"
                ],
                "test_thousands_macau_stats": [
                    "self"
                ],
                "test_thousands_macau_index_col": [
                    "self"
                ],
                "test_empty_tables": [
                    "self"
                ],
                "test_countries_municipalities": [
                    "self"
                ],
                "test_nyse_wsj_commas_table": [
                    "self"
                ],
                "test_banklist_header": [
                    "self"
                ],
                "test_gold_canyon": [
                    "self"
                ],
                "test_different_number_of_rows": [
                    "self"
                ],
                "test_parse_dates_list": [
                    "self"
                ],
                "test_parse_dates_combine": [
                    "self"
                ],
                "test_computer_sales_page": [
                    "self"
                ],
                "test_wikipedia_states_table": [
                    "self"
                ]
            },
            "TestReadHtmlEncoding": {
                "setUpClass": [
                    "cls"
                ],
                "read_html": [
                    "self"
                ],
                "read_filename": [
                    "self",
                    "f",
                    "encoding"
                ],
                "read_file_like": [
                    "self",
                    "f",
                    "encoding"
                ],
                "read_string": [
                    "self",
                    "f",
                    "encoding"
                ],
                "test_encode": [
                    "self"
                ]
            },
            "TestReadHtmlEncodingLxml": {
                "setUpClass": [
                    "cls"
                ]
            },
            "TestReadHtmlLxml": {
                "setUpClass": [
                    "cls"
                ],
                "test_data_fail": [
                    "self"
                ],
                "test_works_on_valid_markup": [
                    "self"
                ],
                "test_fallback_success": [
                    "self"
                ],
                "test_parse_dates_list": [
                    "self"
                ],
                "test_parse_dates_combine": [
                    "self"
                ],
                "test_computer_sales_page": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_json.test_ujson": {
            "_skip_if_python_ver": [
                "skip_major",
                "skip_minor"
            ],
            "_clean_dict": [
                "d"
            ],
            "UltraJSONTests": {
                "test_encodeDecimal": [
                    "self"
                ],
                "test_encodeStringConversion": [
                    "self"
                ],
                "test_doubleLongIssue": [
                    "self"
                ],
                "test_doubleLongDecimalIssue": [
                    "self"
                ],
                "test_encodeNonCLocale": [
                    "self"
                ],
                "test_encodeDecodeLongDecimal": [
                    "self"
                ],
                "test_decimalDecodeTestPrecise": [
                    "self"
                ],
                "test_encodeDoubleTinyExponential": [
                    "self"
                ],
                "test_encodeDictWithUnicodeKeys": [
                    "self"
                ],
                "test_encodeDoubleConversion": [
                    "self"
                ],
                "test_encodeWithDecimal": [
                    "self"
                ],
                "test_encodeDoubleNegConversion": [
                    "self"
                ],
                "test_encodeArrayOfNestedArrays": [
                    "self"
                ],
                "test_encodeArrayOfDoubles": [
                    "self"
                ],
                "test_doublePrecisionTest": [
                    "self"
                ],
                "test_invalidDoublePrecision": [
                    "self"
                ],
                "test_decodeUnicodeConversion": [
                    "self"
                ],
                "test_encodeUnicodeConversion1": [
                    "self"
                ],
                "test_encodeControlEscaping": [
                    "self"
                ],
                "test_encodeUnicodeConversion2": [
                    "self"
                ],
                "test_encodeUnicodeSurrogatePair": [
                    "self"
                ],
                "test_encodeUnicode4BytesUTF8": [
                    "self"
                ],
                "test_encodeUnicode4BytesUTF8Highest": [
                    "self"
                ],
                "test_encodeArrayInArray": [
                    "self"
                ],
                "test_encodeIntConversion": [
                    "self"
                ],
                "test_encodeIntNegConversion": [
                    "self"
                ],
                "test_encodeLongNegConversion": [
                    "self"
                ],
                "test_encodeListConversion": [
                    "self"
                ],
                "test_encodeDictConversion": [
                    "self"
                ],
                "test_encodeNoneConversion": [
                    "self"
                ],
                "test_encodeTrueConversion": [
                    "self"
                ],
                "test_encodeFalseConversion": [
                    "self"
                ],
                "test_encodeDatetimeConversion": [
                    "self"
                ],
                "test_encodeDateConversion": [
                    "self"
                ],
                "test_encodeTimeConversion": [
                    "self"
                ],
                "test_nat": [
                    "self"
                ],
                "test_npy_nat": [
                    "self"
                ],
                "test_datetime_units": [
                    "self"
                ],
                "test_encodeToUTF8": [
                    "self"
                ],
                "test_decodeFromUnicode": [
                    "self"
                ],
                "test_encodeRecursionMax": [
                    "self"
                ],
                "test_encodeDoubleNan": [
                    "self"
                ],
                "test_encodeDoubleInf": [
                    "self"
                ],
                "test_encodeDoubleNegInf": [
                    "self"
                ],
                "test_decodeJibberish": [
                    "self"
                ],
                "test_decodeBrokenArrayStart": [
                    "self"
                ],
                "test_decodeBrokenObjectStart": [
                    "self"
                ],
                "test_decodeBrokenArrayEnd": [
                    "self"
                ],
                "test_decodeArrayDepthTooBig": [
                    "self"
                ],
                "test_decodeBrokenObjectEnd": [
                    "self"
                ],
                "test_decodeObjectDepthTooBig": [
                    "self"
                ],
                "test_decodeStringUnterminated": [
                    "self"
                ],
                "test_decodeStringUntermEscapeSequence": [
                    "self"
                ],
                "test_decodeStringBadEscape": [
                    "self"
                ],
                "test_decodeTrueBroken": [
                    "self"
                ],
                "test_decodeFalseBroken": [
                    "self"
                ],
                "test_decodeNullBroken": [
                    "self"
                ],
                "test_decodeBrokenDictKeyTypeLeakTest": [
                    "self"
                ],
                "test_decodeBrokenDictLeakTest": [
                    "self"
                ],
                "test_decodeBrokenListLeakTest": [
                    "self"
                ],
                "test_decodeDictWithNoKey": [
                    "self"
                ],
                "test_decodeDictWithNoColonOrValue": [
                    "self"
                ],
                "test_decodeDictWithNoValue": [
                    "self"
                ],
                "test_decodeNumericIntPos": [
                    "self"
                ],
                "test_decodeNumericIntNeg": [
                    "self"
                ],
                "test_encodeUnicode4BytesUTF8Fail": [
                    "self"
                ],
                "test_encodeNullCharacter": [
                    "self"
                ],
                "test_decodeNullCharacter": [
                    "self"
                ],
                "test_encodeListLongConversion": [
                    "self"
                ],
                "test_encodeLongConversion": [
                    "self"
                ],
                "test_numericIntExp": [
                    "self"
                ],
                "test_numericIntFrcExp": [
                    "self"
                ],
                "test_decodeNumericIntExpEPLUS": [
                    "self"
                ],
                "test_decodeNumericIntExpePLUS": [
                    "self"
                ],
                "test_decodeNumericIntExpE": [
                    "self"
                ],
                "test_decodeNumericIntExpe": [
                    "self"
                ],
                "test_decodeNumericIntExpEMinus": [
                    "self"
                ],
                "test_decodeNumericIntExpeMinus": [
                    "self"
                ],
                "test_dumpToFile": [
                    "self"
                ],
                "test_dumpToFileLikeObject": [
                    "self"
                ],
                "test_dumpFileArgsError": [
                    "self"
                ],
                "test_loadFile": [
                    "self"
                ],
                "test_loadFileLikeObject": [
                    "self"
                ],
                "test_loadFileArgsError": [
                    "self"
                ],
                "test_version": [
                    "self"
                ],
                "test_encodeNumericOverflow": [
                    "self"
                ],
                "test_encodeNumericOverflowNested": [
                    "self"
                ],
                "test_decodeNumberWith32bitSignBit": [
                    "self"
                ],
                "test_encodeBigEscape": [
                    "self"
                ],
                "test_decodeBigEscape": [
                    "self"
                ],
                "test_toDict": [
                    "self"
                ],
                "test_defaultHandler": [
                    "self"
                ]
            },
            "NumpyJSONTests": {
                "testBool": [
                    "self"
                ],
                "testBoolArray": [
                    "self"
                ],
                "testInt": [
                    "self"
                ],
                "testIntArray": [
                    "self"
                ],
                "testIntMax": [
                    "self"
                ],
                "testFloat": [
                    "self"
                ],
                "testFloatArray": [
                    "self"
                ],
                "testFloatMax": [
                    "self"
                ],
                "testArrays": [
                    "self"
                ],
                "testArrayNumpyExcept": [
                    "self"
                ],
                "testArrayNumpyLabelled": [
                    "self"
                ]
            },
            "PandasJSONTests": {
                "testDataFrame": [
                    "self"
                ],
                "testDataFrameNumpy": [
                    "self"
                ],
                "testDataFrameNested": [
                    "self"
                ],
                "testDataFrameNumpyLabelled": [
                    "self"
                ],
                "testSeries": [
                    "self"
                ],
                "testSeriesNested": [
                    "self"
                ],
                "testIndex": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ],
                "test_decodeArrayTrailingCommaFail": [
                    "self"
                ],
                "test_decodeArrayLeadingCommaFail": [
                    "self"
                ],
                "test_decodeArrayOnlyCommaFail": [
                    "self"
                ],
                "test_decodeArrayUnmatchedBracketFail": [
                    "self"
                ],
                "test_decodeArrayEmpty": [
                    "self"
                ],
                "test_decodeArrayOneItem": [
                    "self"
                ],
                "test_decodeBigValue": [
                    "self"
                ],
                "test_decodeSmallValue": [
                    "self"
                ],
                "test_decodeTooBigValue": [
                    "self"
                ],
                "test_decodeTooSmallValue": [
                    "self"
                ],
                "test_decodeVeryTooBigValue": [
                    "self"
                ],
                "test_decodeVeryTooSmallValue": [
                    "self"
                ],
                "test_decodeWithTrailingWhitespaces": [
                    "self"
                ],
                "test_decodeWithTrailingNonWhitespaces": [
                    "self"
                ],
                "test_decodeArrayWithBigInt": [
                    "self"
                ],
                "test_decodeArrayFaultyUnicode": [
                    "self"
                ],
                "test_decodeFloatingPointAdditionalTests": [
                    "self"
                ],
                "test_encodeBigSet": [
                    "self"
                ],
                "test_encodeEmptySet": [
                    "self"
                ],
                "test_encodeSet": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_json.test_pandas": {
            "TestPandasContainer": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_frame_double_encoded_labels": [
                    "self"
                ],
                "test_frame_non_unique_index": [
                    "self"
                ],
                "test_frame_non_unique_columns": [
                    "self"
                ],
                "test_frame_from_json_to_json": [
                    "self"
                ],
                "test_frame_from_json_bad_data": [
                    "self"
                ],
                "test_frame_from_json_nones": [
                    "self"
                ],
                "test_frame_to_json_except": [
                    "self"
                ],
                "test_v12_compat": [
                    "self"
                ],
                "test_series_non_unique_index": [
                    "self"
                ],
                "test_series_from_json_to_json": [
                    "self"
                ],
                "test_series_to_json_except": [
                    "self"
                ],
                "test_series_from_json_precise_float": [
                    "self"
                ],
                "test_frame_from_json_precise_float": [
                    "self"
                ],
                "test_typ": [
                    "self"
                ],
                "test_reconstruction_index": [
                    "self"
                ],
                "test_path": [
                    "self"
                ],
                "test_axis_dates": [
                    "self"
                ],
                "test_convert_dates": [
                    "self"
                ],
                "test_date_format_frame": [
                    "self"
                ],
                "test_date_format_series": [
                    "self"
                ],
                "test_date_unit": [
                    "self"
                ],
                "test_weird_nested_json": [
                    "self"
                ],
                "test_doc_example": [
                    "self"
                ],
                "test_misc_example": [
                    "self"
                ],
                "test_round_trip_exception_": [
                    "self"
                ],
                "test_url": [
                    "self"
                ],
                "test_timedelta": [
                    "self"
                ],
                "test_default_handler": [
                    "self"
                ]
            }
        },
        "pandas.io.tests.test_json": {},
        "pandas.sandbox.qtpandas": {
            "testDf": [],
            "DataFrameModel": {
                "__init__": [
                    "self"
                ],
                "setDataFrame": [
                    "self",
                    "dataFrame"
                ],
                "signalUpdate": [
                    "self"
                ],
                "headerData": [
                    "self",
                    "section",
                    "orientation",
                    "role"
                ],
                "data": [
                    "self",
                    "index",
                    "role"
                ],
                "flags": [
                    "self",
                    "index"
                ],
                "setData": [
                    "self",
                    "index",
                    "value",
                    "role"
                ],
                "rowCount": [
                    "self",
                    "index"
                ],
                "columnCount": [
                    "self",
                    "index"
                ]
            },
            "DataFrameWidget": {
                "__init__": [
                    "self",
                    "dataFrame",
                    "parent"
                ],
                "setDataFrame": [
                    "self",
                    "dataFrame"
                ]
            },
            "Form": {
                "__init__": [
                    "self",
                    "parent"
                ]
            }
        },
        "pandas.sandbox": {},
        "pandas.computation.scope": {
            "_ensure_scope": [
                "level",
                "global_dict",
                "local_dict",
                "resolvers",
                "target"
            ],
            "_replacer": [
                "x"
            ],
            "_raw_hex_id": [
                "obj"
            ],
            "_get_pretty_string": [
                "obj"
            ],
            "Scope": {
                "__init__": [
                    "self",
                    "level",
                    "global_dict",
                    "local_dict",
                    "resolvers",
                    "target"
                ],
                "__unicode__": [
                    "self"
                ],
                "has_resolvers": [
                    "self"
                ],
                "resolve": [
                    "self",
                    "key",
                    "is_local"
                ],
                "swapkey": [
                    "self",
                    "old_key",
                    "new_key",
                    "new_value"
                ],
                "_get_vars": [
                    "self",
                    "stack",
                    "scopes"
                ],
                "update": [
                    "self",
                    "level"
                ],
                "add_tmp": [
                    "self",
                    "value"
                ],
                "ntemps": [
                    "self"
                ],
                "full_scope": [
                    "self"
                ]
            }
        },
        "pandas.computation.common": {
            "_ensure_decoded": [
                "s"
            ],
            "_result_type_many": [],
            "NameResolutionError": {}
        },
        "pandas.computation.pytables": {
            "maybe_expression": [
                "s"
            ],
            "Scope": {
                "__init__": [
                    "self",
                    "level",
                    "global_dict",
                    "local_dict",
                    "queryables"
                ]
            },
            "Term": {
                "__new__": [
                    "cls",
                    "name",
                    "env",
                    "side",
                    "encoding"
                ],
                "__init__": [
                    "self",
                    "name",
                    "env",
                    "side",
                    "encoding"
                ],
                "_resolve_name": [
                    "self"
                ],
                "value": [
                    "self"
                ]
            },
            "Constant": {
                "__init__": [
                    "self",
                    "value",
                    "env",
                    "side",
                    "encoding"
                ],
                "_resolve_name": [
                    "self"
                ]
            },
            "BinOp": {
                "__init__": [
                    "self",
                    "op",
                    "lhs",
                    "rhs",
                    "queryables",
                    "encoding"
                ],
                "_disallow_scalar_only_bool_ops": [
                    "self"
                ],
                "prune": [
                    "self",
                    "klass"
                ],
                "conform": [
                    "self",
                    "rhs"
                ],
                "is_valid": [
                    "self"
                ],
                "is_in_table": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "generate": [
                    "self",
                    "v"
                ],
                "convert_value": [
                    "self",
                    "v"
                ],
                "convert_values": [
                    "self"
                ]
            },
            "FilterBinOp": {
                "__unicode__": [
                    "self"
                ],
                "invert": [
                    "self"
                ],
                "format": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ],
                "generate_filter_op": [
                    "self",
                    "invert"
                ]
            },
            "JointFilterBinOp": {
                "format": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ]
            },
            "ConditionBinOp": {
                "__unicode__": [
                    "self"
                ],
                "invert": [
                    "self"
                ],
                "format": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ]
            },
            "JointConditionBinOp": {
                "evaluate": [
                    "self"
                ]
            },
            "UnaryOp": {
                "prune": [
                    "self",
                    "klass"
                ]
            },
            "ExprVisitor": {
                "__init__": [
                    "self",
                    "env",
                    "engine",
                    "parser"
                ],
                "visit_UnaryOp": [
                    "self",
                    "node"
                ],
                "visit_Index": [
                    "self",
                    "node"
                ],
                "visit_Assign": [
                    "self",
                    "node"
                ],
                "visit_Subscript": [
                    "self",
                    "node"
                ],
                "visit_Attribute": [
                    "self",
                    "node"
                ],
                "translate_In": [
                    "self",
                    "op"
                ],
                "_rewrite_membership_op": [
                    "self",
                    "node",
                    "left",
                    "right"
                ]
            },
            "Expr": {
                "__init__": [
                    "self",
                    "where",
                    "op",
                    "value",
                    "queryables",
                    "encoding",
                    "scope_level"
                ],
                "parse_back_compat": [
                    "self",
                    "w",
                    "op",
                    "value"
                ],
                "__unicode__": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ]
            },
            "TermValue": {
                "__init__": [
                    "self",
                    "value",
                    "converted",
                    "kind"
                ],
                "tostring": [
                    "self",
                    "encoding"
                ]
            }
        },
        "pandas.computation.align": {
            "_align_core_single_unary_op": [
                "term"
            ],
            "_zip_axes_from_type": [
                "typ",
                "new_axes"
            ],
            "_any_pandas_objects": [
                "terms"
            ],
            "_filter_special_cases": [
                "f"
            ],
            "_align_core": [
                "terms"
            ],
            "_align": [
                "terms"
            ],
            "_reconstruct_object": [
                "typ",
                "obj",
                "axes",
                "dtype"
            ]
        },
        "pandas.computation.engines": {
            "_check_ne_builtin_clash": [
                "expr"
            ],
            "NumExprClobberingError": {},
            "AbstractEngine": {
                "__init__": [
                    "self",
                    "expr"
                ],
                "convert": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ],
                "_is_aligned": [
                    "self"
                ],
                "_evaluate": [
                    "self"
                ]
            },
            "NumExprEngine": {
                "__init__": [
                    "self",
                    "expr"
                ],
                "convert": [
                    "self"
                ],
                "_evaluate": [
                    "self"
                ]
            },
            "PythonEngine": {
                "__init__": [
                    "self",
                    "expr"
                ],
                "evaluate": [
                    "self"
                ],
                "_evaluate": [
                    "self"
                ]
            }
        },
        "pandas.computation.expressions": {
            "set_use_numexpr": [
                "v"
            ],
            "set_numexpr_threads": [
                "n"
            ],
            "_evaluate_standard": [
                "op",
                "op_str",
                "a",
                "b",
                "raise_on_error"
            ],
            "_can_use_numexpr": [
                "op",
                "op_str",
                "a",
                "b",
                "dtype_check"
            ],
            "_evaluate_numexpr": [
                "op",
                "op_str",
                "a",
                "b",
                "raise_on_error",
                "truediv",
                "reversed"
            ],
            "_where_standard": [
                "cond",
                "a",
                "b",
                "raise_on_error"
            ],
            "_where_numexpr": [
                "cond",
                "a",
                "b",
                "raise_on_error"
            ],
            "_has_bool_dtype": [
                "x"
            ],
            "_bool_arith_check": [
                "op_str",
                "a",
                "b",
                "not_allowed",
                "unsupported"
            ],
            "evaluate": [
                "op",
                "op_str",
                "a",
                "b",
                "raise_on_error",
                "use_numexpr"
            ],
            "where": [
                "cond",
                "a",
                "b",
                "raise_on_error",
                "use_numexpr"
            ],
            "set_test_mode": [
                "v"
            ],
            "_store_test_result": [
                "used_numexpr"
            ],
            "get_test_result": []
        },
        "pandas.computation.ops": {
            "_in": [
                "x",
                "y"
            ],
            "_not_in": [
                "x",
                "y"
            ],
            "_cast_inplace": [
                "terms",
                "dtype"
            ],
            "is_term": [
                "obj"
            ],
            "isnumeric": [
                "dtype"
            ],
            "UndefinedVariableError": {
                "__init__": [
                    "self",
                    "name",
                    "is_local"
                ]
            },
            "Term": {
                "__new__": [
                    "cls",
                    "name",
                    "env",
                    "side",
                    "encoding"
                ],
                "__init__": [
                    "self",
                    "name",
                    "env",
                    "side",
                    "encoding"
                ],
                "local_name": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__call__": [
                    "self"
                ],
                "evaluate": [
                    "self"
                ],
                "_resolve_name": [
                    "self"
                ],
                "update": [
                    "self",
                    "value"
                ],
                "isscalar": [
                    "self"
                ],
                "type": [
                    "self"
                ],
                "raw": [
                    "self"
                ],
                "is_datetime": [
                    "self"
                ],
                "value": [
                    "self",
                    "new_value"
                ],
                "name": [
                    "self",
                    "new_name"
                ],
                "ndim": [
                    "self"
                ]
            },
            "Constant": {
                "__init__": [
                    "self",
                    "value",
                    "env",
                    "side",
                    "encoding"
                ],
                "_resolve_name": [
                    "self"
                ],
                "name": [
                    "self"
                ]
            },
            "Op": {
                "__init__": [
                    "self",
                    "op",
                    "operands"
                ],
                "__iter__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "return_type": [
                    "self"
                ],
                "has_invalid_return_type": [
                    "self"
                ],
                "operand_types": [
                    "self"
                ],
                "isscalar": [
                    "self"
                ],
                "is_datetime": [
                    "self"
                ]
            },
            "BinOp": {
                "__init__": [
                    "self",
                    "op",
                    "lhs",
                    "rhs"
                ],
                "__call__": [
                    "self",
                    "env"
                ],
                "evaluate": [
                    "self",
                    "env",
                    "engine",
                    "parser",
                    "term_type",
                    "eval_in_python"
                ],
                "convert_values": [
                    "self"
                ],
                "_disallow_scalar_only_bool_ops": [
                    "self"
                ]
            },
            "Div": {
                "__init__": [
                    "self",
                    "lhs",
                    "rhs",
                    "truediv"
                ]
            },
            "UnaryOp": {
                "__init__": [
                    "self",
                    "op",
                    "operand"
                ],
                "__call__": [
                    "self",
                    "env"
                ],
                "__unicode__": [
                    "self"
                ],
                "return_type": [
                    "self"
                ]
            }
        },
        "pandas.computation.expr": {
            "tokenize_string": [
                "source"
            ],
            "_rewrite_assign": [
                "tok"
            ],
            "_replace_booleans": [
                "tok"
            ],
            "_replace_locals": [
                "tok"
            ],
            "_preparse": [
                "source",
                "f"
            ],
            "_is_type": [
                "t"
            ],
            "_filter_nodes": [
                "superclass",
                "all_nodes"
            ],
            "_node_not_implemented": [
                "node_name",
                "cls"
            ],
            "disallow": [
                "nodes"
            ],
            "_op_maker": [
                "op_class",
                "op_symbol"
            ],
            "add_ops": [
                "op_classes"
            ],
            "BaseExprVisitor": {
                "__init__": [
                    "self",
                    "env",
                    "engine",
                    "parser",
                    "preparser"
                ],
                "visit": [
                    "self",
                    "node"
                ],
                "visit_Module": [
                    "self",
                    "node"
                ],
                "visit_Expr": [
                    "self",
                    "node"
                ],
                "_rewrite_membership_op": [
                    "self",
                    "node",
                    "left",
                    "right"
                ],
                "_possibly_transform_eq_ne": [
                    "self",
                    "node",
                    "left",
                    "right"
                ],
                "_possibly_eval": [
                    "self",
                    "binop",
                    "eval_in_python"
                ],
                "_possibly_evaluate_binop": [
                    "self",
                    "op",
                    "op_class",
                    "lhs",
                    "rhs",
                    "eval_in_python",
                    "maybe_eval_in_python"
                ],
                "visit_BinOp": [
                    "self",
                    "node"
                ],
                "visit_Div": [
                    "self",
                    "node"
                ],
                "visit_UnaryOp": [
                    "self",
                    "node"
                ],
                "visit_Name": [
                    "self",
                    "node"
                ],
                "visit_NameConstant": [
                    "self",
                    "node"
                ],
                "visit_Num": [
                    "self",
                    "node"
                ],
                "visit_Str": [
                    "self",
                    "node"
                ],
                "visit_List": [
                    "self",
                    "node"
                ],
                "visit_Index": [
                    "self",
                    "node"
                ],
                "visit_Subscript": [
                    "self",
                    "node"
                ],
                "visit_Slice": [
                    "self",
                    "node"
                ],
                "visit_Assign": [
                    "self",
                    "node"
                ],
                "visit_Attribute": [
                    "self",
                    "node"
                ],
                "visit_Call": [
                    "self",
                    "node",
                    "side"
                ],
                "translate_In": [
                    "self",
                    "op"
                ],
                "visit_Compare": [
                    "self",
                    "node"
                ],
                "_try_visit_binop": [
                    "self",
                    "bop"
                ],
                "visit_BoolOp": [
                    "self",
                    "node"
                ]
            },
            "PandasExprVisitor": {
                "__init__": [
                    "self",
                    "env",
                    "engine",
                    "parser",
                    "preparser"
                ]
            },
            "PythonExprVisitor": {
                "__init__": [
                    "self",
                    "env",
                    "engine",
                    "parser",
                    "preparser"
                ]
            },
            "Expr": {
                "__init__": [
                    "self",
                    "expr",
                    "engine",
                    "parser",
                    "env",
                    "truediv",
                    "level"
                ],
                "assigner": [
                    "self"
                ],
                "__call__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "parse": [
                    "self"
                ],
                "names": [
                    "self"
                ]
            }
        },
        "pandas.computation.eval": {
            "_check_engine": [
                "engine"
            ],
            "_check_parser": [
                "parser"
            ],
            "_check_resolvers": [
                "resolvers"
            ],
            "_check_expression": [
                "expr"
            ],
            "_convert_expression": [
                "expr"
            ],
            "_check_for_locals": [
                "expr",
                "stack_level",
                "parser"
            ],
            "eval": [
                "expr",
                "parser",
                "engine",
                "truediv",
                "local_dict",
                "global_dict",
                "resolvers",
                "level",
                "target"
            ]
        },
        "pandas.computation.api": {},
        "pandas.computation": {},
        "pandas.computation.tests.test_eval": {
            "engine_has_neg_frac": [
                "engine"
            ],
            "_eval_single_bin": [
                "lhs",
                "cmp1",
                "rhs",
                "engine"
            ],
            "_series_and_2d_ndarray": [
                "lhs",
                "rhs"
            ],
            "_series_and_frame": [
                "lhs",
                "rhs"
            ],
            "_bool_and_frame": [
                "lhs",
                "rhs"
            ],
            "_is_py3_complex_incompat": [
                "result",
                "expected"
            ],
            "_is_datetime": [
                "x"
            ],
            "should_warn": [],
            "test_invalid_engine": [],
            "test_invalid_parser": [],
            "check_disallowed_nodes": [
                "engine",
                "parser"
            ],
            "test_disallowed_nodes": [],
            "check_syntax_error_exprs": [
                "engine",
                "parser"
            ],
            "test_syntax_error_exprs": [],
            "check_name_error_exprs": [
                "engine",
                "parser"
            ],
            "test_name_error_exprs": [],
            "check_invalid_numexpr_version": [
                "engine",
                "parser"
            ],
            "test_invalid_numexpr_version": [],
            "check_invalid_local_variable_reference": [
                "engine",
                "parser"
            ],
            "test_invalid_local_variable_reference": [],
            "check_numexpr_builtin_raises": [
                "engine",
                "parser"
            ],
            "test_numexpr_builtin_raises": [],
            "check_bad_resolver_raises": [
                "engine",
                "parser"
            ],
            "test_bad_resolver_raises": [],
            "check_more_than_one_expression_raises": [
                "engine",
                "parser"
            ],
            "test_more_than_one_expression_raises": [],
            "check_bool_ops_fails_on_scalars": [
                "gen",
                "lhs",
                "cmp",
                "rhs",
                "engine",
                "parser"
            ],
            "test_bool_ops_fails_on_scalars": [],
            "check_inf": [
                "engine",
                "parser"
            ],
            "test_inf": [],
            "check_negate_lt_eq_le": [
                "engine",
                "parser"
            ],
            "test_negate_lt_eq_le": [],
            "TestEvalNumexprPandas": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "setup_data": [
                    "self"
                ],
                "setup_ops": [
                    "self"
                ],
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_complex_cmp_ops": [
                    "self"
                ],
                "test_simple_cmp_ops": [
                    "self"
                ],
                "test_binary_arith_ops": [
                    "self"
                ],
                "test_modulus": [
                    "self"
                ],
                "test_floor_division": [
                    "self"
                ],
                "test_pow": [
                    "self"
                ],
                "test_single_invert_op": [
                    "self"
                ],
                "test_compound_invert_op": [
                    "self"
                ],
                "test_chained_cmp_op": [
                    "self"
                ],
                "check_complex_cmp_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "rhs",
                    "binop",
                    "cmp2"
                ],
                "check_chained_cmp_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "mid",
                    "cmp2",
                    "rhs"
                ],
                "check_simple_cmp_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "rhs"
                ],
                "check_binary_arith_op": [
                    "self",
                    "lhs",
                    "arith1",
                    "rhs"
                ],
                "check_alignment": [
                    "self",
                    "result",
                    "nlhs",
                    "ghs",
                    "op"
                ],
                "check_modulus": [
                    "self",
                    "lhs",
                    "arith1",
                    "rhs"
                ],
                "check_floor_division": [
                    "self",
                    "lhs",
                    "arith1",
                    "rhs"
                ],
                "get_expected_pow_result": [
                    "self",
                    "lhs",
                    "rhs"
                ],
                "check_pow": [
                    "self",
                    "lhs",
                    "arith1",
                    "rhs"
                ],
                "check_single_invert_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "rhs"
                ],
                "check_compound_invert_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "rhs"
                ],
                "ex": [
                    "self",
                    "op",
                    "var_name"
                ],
                "test_frame_invert": [
                    "self"
                ],
                "test_series_invert": [
                    "self"
                ],
                "test_frame_negate": [
                    "self"
                ],
                "test_series_negate": [
                    "self"
                ],
                "test_frame_pos": [
                    "self"
                ],
                "test_series_pos": [
                    "self"
                ],
                "test_scalar_unary": [
                    "self"
                ],
                "test_disallow_scalar_bool_ops": [
                    "self"
                ]
            },
            "TestEvalNumexprPython": {
                "setUpClass": [
                    "cls"
                ],
                "setup_ops": [
                    "self"
                ],
                "check_chained_cmp_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "mid",
                    "cmp2",
                    "rhs"
                ]
            },
            "TestEvalPythonPython": {
                "setUpClass": [
                    "cls"
                ],
                "check_modulus": [
                    "self",
                    "lhs",
                    "arith1",
                    "rhs"
                ],
                "check_alignment": [
                    "self",
                    "result",
                    "nlhs",
                    "ghs",
                    "op"
                ]
            },
            "TestEvalPythonPandas": {
                "setUpClass": [
                    "cls"
                ],
                "check_chained_cmp_op": [
                    "self",
                    "lhs",
                    "cmp1",
                    "mid",
                    "cmp2",
                    "rhs"
                ]
            },
            "TestAlignment": {
                "check_align_nested_unary_op": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_align_nested_unary_op": [
                    "self"
                ],
                "check_basic_frame_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_basic_frame_alignment": [
                    "self"
                ],
                "check_frame_comparison": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_frame_comparison": [
                    "self"
                ],
                "check_medium_complex_frame_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_medium_complex_frame_alignment": [
                    "self"
                ],
                "check_basic_frame_series_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_basic_frame_series_alignment": [
                    "self"
                ],
                "check_basic_series_frame_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_basic_series_frame_alignment": [
                    "self"
                ],
                "check_series_frame_commutativity": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_series_frame_commutativity": [
                    "self"
                ],
                "check_complex_series_frame_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_complex_series_frame_alignment": [
                    "self"
                ],
                "check_performance_warning_for_poor_alignment": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_performance_warning_for_poor_alignment": [
                    "self"
                ]
            },
            "TestOperationsNumExprPandas": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "eval": [
                    "self"
                ],
                "test_simple_arith_ops": [
                    "self"
                ],
                "test_simple_bool_ops": [
                    "self"
                ],
                "test_bool_ops_with_constants": [
                    "self"
                ],
                "test_panel_fails": [
                    "self"
                ],
                "test_4d_ndarray_fails": [
                    "self"
                ],
                "test_constant": [
                    "self"
                ],
                "test_single_variable": [
                    "self"
                ],
                "test_truediv": [
                    "self"
                ],
                "test_failing_subscript_with_name_error": [
                    "self"
                ],
                "test_lhs_expression_subscript": [
                    "self"
                ],
                "test_attr_expression": [
                    "self"
                ],
                "test_assignment_fails": [
                    "self"
                ],
                "test_assignment_column": [
                    "self"
                ],
                "test_basic_period_index_boolean_expression": [
                    "self"
                ],
                "test_basic_period_index_subscript_expression": [
                    "self"
                ],
                "test_nested_period_index_subscript_expression": [
                    "self"
                ],
                "test_date_boolean": [
                    "self"
                ],
                "test_simple_in_ops": [
                    "self"
                ]
            },
            "TestOperationsNumExprPython": {
                "setUpClass": [
                    "cls"
                ],
                "test_check_many_exprs": [
                    "self"
                ],
                "test_fails_and": [
                    "self"
                ],
                "test_fails_or": [
                    "self"
                ],
                "test_fails_not": [
                    "self"
                ],
                "test_fails_ampersand": [
                    "self"
                ],
                "test_fails_pipe": [
                    "self"
                ],
                "test_bool_ops_with_constants": [
                    "self"
                ],
                "test_simple_bool_ops": [
                    "self"
                ]
            },
            "TestOperationsPythonPython": {
                "setUpClass": [
                    "cls"
                ]
            },
            "TestOperationsPythonPandas": {
                "setUpClass": [
                    "cls"
                ]
            },
            "TestScope": {
                "check_global_scope": [
                    "self",
                    "e",
                    "engine",
                    "parser"
                ],
                "test_global_scope": [
                    "self"
                ],
                "check_no_new_locals": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_no_new_locals": [
                    "self"
                ],
                "check_no_new_globals": [
                    "self",
                    "engine",
                    "parser"
                ],
                "test_no_new_globals": [
                    "self"
                ]
            }
        },
        "pandas.computation.tests": {},
        "pandas.tseries.converter": {
            "register": [],
            "_to_ordinalf": [
                "tm"
            ],
            "time2num": [
                "d"
            ],
            "get_datevalue": [
                "date",
                "freq"
            ],
            "_dt_to_float_ordinal": [
                "dt"
            ],
            "_from_ordinal": [
                "x",
                "tz"
            ],
            "_get_default_annual_spacing": [
                "nyears"
            ],
            "period_break": [
                "dates",
                "period"
            ],
            "has_level_label": [
                "label_flags",
                "vmin"
            ],
            "_daily_finder": [
                "vmin",
                "vmax",
                "freq"
            ],
            "_monthly_finder": [
                "vmin",
                "vmax",
                "freq"
            ],
            "_quarterly_finder": [
                "vmin",
                "vmax",
                "freq"
            ],
            "_annual_finder": [
                "vmin",
                "vmax",
                "freq"
            ],
            "get_finder": [
                "freq"
            ],
            "TimeConverter": {
                "convert": [
                    "value",
                    "unit",
                    "axis"
                ],
                "axisinfo": [
                    "unit",
                    "axis"
                ],
                "default_units": [
                    "x",
                    "axis"
                ]
            },
            "TimeFormatter": {
                "__init__": [
                    "self",
                    "locs"
                ],
                "__call__": [
                    "self",
                    "x",
                    "pos"
                ]
            },
            "PeriodConverter": {
                "convert": [
                    "values",
                    "units",
                    "axis"
                ]
            },
            "DatetimeConverter": {
                "convert": [
                    "values",
                    "unit",
                    "axis"
                ],
                "axisinfo": [
                    "unit",
                    "axis"
                ]
            },
            "PandasAutoDateFormatter": {
                "__init__": [
                    "self",
                    "locator",
                    "tz",
                    "defaultfmt"
                ],
                "_get_fmt": [
                    "self",
                    "x"
                ],
                "__call__": [
                    "self",
                    "x",
                    "pos"
                ]
            },
            "PandasAutoDateLocator": {
                "get_locator": [
                    "self",
                    "dmin",
                    "dmax"
                ],
                "_get_unit": [
                    "self"
                ]
            },
            "MilliSecondLocator": {
                "__init__": [
                    "self",
                    "tz"
                ],
                "_get_unit": [
                    "self"
                ],
                "get_unit_generic": [
                    "freq"
                ],
                "__call__": [
                    "self"
                ],
                "_get_interval": [
                    "self"
                ],
                "autoscale": [
                    "self"
                ]
            },
            "TimeSeries_DateLocator": {
                "__init__": [
                    "self",
                    "freq",
                    "minor_locator",
                    "dynamic_mode",
                    "base",
                    "quarter",
                    "month",
                    "day",
                    "plot_obj"
                ],
                "_get_default_locs": [
                    "self",
                    "vmin",
                    "vmax"
                ],
                "__call__": [
                    "self"
                ],
                "autoscale": [
                    "self"
                ]
            },
            "TimeSeries_DateFormatter": {
                "__init__": [
                    "self",
                    "freq",
                    "minor_locator",
                    "dynamic_mode",
                    "plot_obj"
                ],
                "_set_default_format": [
                    "self",
                    "vmin",
                    "vmax"
                ],
                "set_locs": [
                    "self",
                    "locs"
                ],
                "__call__": [
                    "self",
                    "x",
                    "pos"
                ]
            }
        },
        "pandas.tseries.plotting": {
            "tsplot": [
                "series",
                "plotf"
            ],
            "_maybe_resample": [
                "series",
                "ax",
                "freq",
                "plotf",
                "kwargs"
            ],
            "_get_ax_freq": [
                "ax"
            ],
            "_is_sub": [
                "f1",
                "f2"
            ],
            "_is_sup": [
                "f1",
                "f2"
            ],
            "_upsample_others": [
                "ax",
                "freq",
                "plotf",
                "kwargs"
            ],
            "_replot_ax": [
                "ax",
                "freq",
                "kwargs"
            ],
            "_decorate_axes": [
                "ax",
                "freq",
                "kwargs"
            ],
            "_get_freq": [
                "ax",
                "series"
            ],
            "format_dateaxis": [
                "subplot",
                "freq"
            ]
        },
        "pandas.tseries.resample": {
            "_take_new_index": [
                "obj",
                "indexer",
                "new_index",
                "axis"
            ],
            "_get_range_edges": [
                "first",
                "last",
                "offset",
                "closed",
                "base"
            ],
            "_adjust_dates_anchored": [
                "first",
                "last",
                "offset",
                "closed",
                "base"
            ],
            "asfreq": [
                "obj",
                "freq",
                "method",
                "how",
                "normalize"
            ],
            "TimeGrouper": {
                "__init__": [
                    "self",
                    "freq",
                    "closed",
                    "label",
                    "how",
                    "nperiods",
                    "axis",
                    "fill_method",
                    "limit",
                    "loffset",
                    "kind",
                    "convention",
                    "base"
                ],
                "resample": [
                    "self",
                    "obj"
                ],
                "_get_grouper": [
                    "self",
                    "obj"
                ],
                "_get_binner_for_resample": [
                    "self",
                    "kind"
                ],
                "_get_binner_for_grouping": [
                    "self",
                    "obj"
                ],
                "_get_time_bins": [
                    "self",
                    "ax"
                ],
                "_adjust_bin_edges": [
                    "self",
                    "binner",
                    "ax_values"
                ],
                "_get_time_delta_bins": [
                    "self",
                    "ax"
                ],
                "_get_time_period_bins": [
                    "self",
                    "ax"
                ],
                "_agg_method": [
                    "self"
                ],
                "_resample_timestamps": [
                    "self",
                    "kind"
                ],
                "_resample_periods": [
                    "self"
                ]
            }
        },
        "pandas.tseries.frequencies": {
            "get_reso_string": [
                "reso"
            ],
            "get_to_timestamp_base": [
                "base"
            ],
            "get_freq_group": [
                "freq"
            ],
            "get_freq": [
                "freq"
            ],
            "get_freq_code": [
                "freqstr"
            ],
            "_get_freq_str": [
                "base",
                "mult"
            ],
            "get_period_alias": [
                "offset_str"
            ],
            "to_offset": [
                "freqstr"
            ],
            "_base_and_stride": [
                "freqstr"
            ],
            "get_base_alias": [
                "freqstr"
            ],
            "get_offset": [
                "name"
            ],
            "get_offset_name": [
                "offset"
            ],
            "get_legacy_offset_name": [
                "offset"
            ],
            "get_standard_freq": [
                "freq"
            ],
            "_period_alias_dictionary": [],
            "_infer_period_group": [
                "freqstr"
            ],
            "_period_group": [
                "freqstr"
            ],
            "_period_str_to_code": [
                "freqstr"
            ],
            "infer_freq": [
                "index",
                "warn"
            ],
            "_maybe_add_count": [
                "base",
                "count"
            ],
            "is_subperiod": [
                "source",
                "target"
            ],
            "is_superperiod": [
                "source",
                "target"
            ],
            "_get_rule_month": [
                "source",
                "default"
            ],
            "_is_annual": [
                "rule"
            ],
            "_quarter_months_conform": [
                "source",
                "target"
            ],
            "_is_quarterly": [
                "rule"
            ],
            "_is_weekly": [
                "rule"
            ],
            "_is_multiple": [
                "us",
                "mult"
            ],
            "FreqGroup": {},
            "Resolution": {
                "get_str": [
                    "cls",
                    "reso"
                ],
                "get_reso": [
                    "cls",
                    "resostr"
                ],
                "get_freq": [
                    "cls",
                    "resostr"
                ],
                "get_str_from_freq": [
                    "cls",
                    "freq"
                ],
                "get_reso_from_freq": [
                    "cls",
                    "freq"
                ]
            },
            "_FrequencyInferer": {
                "__init__": [
                    "self",
                    "index",
                    "warn"
                ],
                "deltas": [
                    "self"
                ],
                "is_unique": [
                    "self"
                ],
                "get_freq": [
                    "self"
                ],
                "day_deltas": [
                    "self"
                ],
                "fields": [
                    "self"
                ],
                "rep_stamp": [
                    "self"
                ],
                "month_position_check": [
                    "self"
                ],
                "mdiffs": [
                    "self"
                ],
                "ydiffs": [
                    "self"
                ],
                "_infer_daily_rule": [
                    "self"
                ],
                "_get_annual_rule": [
                    "self"
                ],
                "_get_quarterly_rule": [
                    "self"
                ],
                "_get_monthly_rule": [
                    "self"
                ],
                "_get_wom_rule": [
                    "self"
                ]
            },
            "_TimedeltaFrequencyInferer": {
                "_infer_daily_rule": [
                    "self"
                ]
            }
        },
        "pandas.tseries.interval": {
            "Interval": {
                "__init__": [
                    "self",
                    "start",
                    "end"
                ]
            },
            "PeriodInterval": {
                "__init__": [
                    "self",
                    "start",
                    "end"
                ]
            },
            "IntervalIndex": {
                "__new__": [
                    "self",
                    "starts",
                    "ends"
                ],
                "dtype": [
                    "self"
                ]
            }
        },
        "pandas.tseries.common": {
            "is_datetimelike": [
                "data"
            ],
            "maybe_to_datetimelike": [
                "data",
                "copy"
            ],
            "Properties": {
                "__init__": [
                    "self",
                    "values",
                    "index"
                ],
                "_delegate_property_get": [
                    "self",
                    "name"
                ],
                "_delegate_property_set": [
                    "self",
                    "name",
                    "value"
                ],
                "_delegate_method": [
                    "self",
                    "name"
                ]
            },
            "DatetimeProperties": {
                "to_pydatetime": [
                    "self"
                ]
            },
            "TimedeltaProperties": {
                "to_pytimedelta": [
                    "self"
                ],
                "components": [
                    "self"
                ]
            },
            "PeriodProperties": {}
        },
        "pandas.tseries.tdi": {
            "_td_index_cmp": [
                "opname",
                "nat_result"
            ],
            "_is_convertible_to_index": [
                "other"
            ],
            "_is_convertible_to_td": [
                "key"
            ],
            "_to_m8": [
                "key"
            ],
            "_generate_regular_range": [
                "start",
                "end",
                "periods",
                "offset"
            ],
            "timedelta_range": [
                "start",
                "end",
                "periods",
                "freq",
                "name",
                "closed"
            ],
            "TimedeltaIndex": {
                "_join_i8_wrapper": [
                    "joinf"
                ],
                "__new__": [
                    "cls",
                    "data",
                    "unit",
                    "freq",
                    "start",
                    "end",
                    "periods",
                    "copy",
                    "name",
                    "closed",
                    "verify_integrity"
                ],
                "_generate": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "name",
                    "offset",
                    "closed"
                ],
                "_box_func": [
                    "self"
                ],
                "_simple_new": [
                    "cls",
                    "values",
                    "name",
                    "freq"
                ],
                "_formatter_func": [
                    "self"
                ],
                "_format_footer": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "_add_delta": [
                    "self",
                    "delta"
                ],
                "_evaluate_with_timedelta_like": [
                    "self",
                    "other",
                    "op",
                    "opstr"
                ],
                "_add_datelike": [
                    "self",
                    "other"
                ],
                "_sub_datelike": [
                    "self",
                    "other"
                ],
                "_format_native_types": [
                    "self",
                    "na_rep",
                    "date_format"
                ],
                "_get_field": [
                    "self",
                    "m"
                ],
                "days": [
                    "self"
                ],
                "hours": [
                    "self"
                ],
                "minutes": [
                    "self"
                ],
                "seconds": [
                    "self"
                ],
                "milliseconds": [
                    "self"
                ],
                "microseconds": [
                    "self"
                ],
                "nanoseconds": [
                    "self"
                ],
                "components": [
                    "self"
                ],
                "summary": [
                    "self",
                    "name"
                ],
                "to_pytimedelta": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "union": [
                    "self",
                    "other"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ],
                "_can_fast_union": [
                    "self",
                    "other"
                ],
                "_fast_union": [
                    "self",
                    "other"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "_wrap_union_result": [
                    "self",
                    "other",
                    "result"
                ],
                "intersection": [
                    "self",
                    "other"
                ],
                "_possibly_promote": [
                    "self",
                    "other"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_value_maybe_box": [
                    "self",
                    "series",
                    "key"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "_get_string_slice": [
                    "self",
                    "key",
                    "use_lhs",
                    "use_rhs"
                ],
                "_partial_td_slice": [
                    "self",
                    "key",
                    "freq",
                    "use_lhs",
                    "use_rhs"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "freqstr": [
                    "self"
                ],
                "searchsorted": [
                    "self",
                    "key",
                    "side"
                ],
                "is_type_compatible": [
                    "self",
                    "typ"
                ],
                "inferred_type": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "is_all_dates": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item"
                ],
                "delete": [
                    "self",
                    "loc"
                ]
            }
        },
        "pandas.tseries.holiday": {
            "next_monday": [
                "dt"
            ],
            "next_monday_or_tuesday": [
                "dt"
            ],
            "previous_friday": [
                "dt"
            ],
            "sunday_to_monday": [
                "dt"
            ],
            "weekend_to_monday": [
                "dt"
            ],
            "nearest_workday": [
                "dt"
            ],
            "next_workday": [
                "dt"
            ],
            "previous_workday": [
                "dt"
            ],
            "before_nearest_workday": [
                "dt"
            ],
            "after_nearest_workday": [
                "dt"
            ],
            "register": [
                "cls"
            ],
            "get_calendar": [
                "name"
            ],
            "HolidayCalendarFactory": [
                "name",
                "base",
                "other",
                "base_class"
            ],
            "Holiday": {
                "__init__": [
                    "self",
                    "name",
                    "year",
                    "month",
                    "day",
                    "offset",
                    "observance",
                    "start_date",
                    "end_date",
                    "days_of_week"
                ],
                "__repr__": [
                    "self"
                ],
                "dates": [
                    "self",
                    "start_date",
                    "end_date",
                    "return_name"
                ],
                "_apply_rule": [
                    "self",
                    "dates"
                ]
            },
            "HolidayCalendarMetaClass": {
                "__new__": [
                    "cls",
                    "clsname",
                    "bases",
                    "attrs"
                ]
            },
            "AbstractHolidayCalendar": {
                "__init__": [
                    "self",
                    "name",
                    "rules"
                ],
                "holidays": [
                    "self",
                    "start",
                    "end",
                    "return_name"
                ],
                "_cache": [
                    "self",
                    "values"
                ],
                "merge_class": [
                    "base",
                    "other"
                ],
                "merge": [
                    "self",
                    "other",
                    "inplace"
                ]
            },
            "USFederalHolidayCalendar": {}
        },
        "pandas.tseries.timedeltas": {
            "to_timedelta": [
                "arg",
                "unit",
                "box",
                "coerce"
            ],
            "_validate_timedelta_unit": [
                "arg"
            ],
            "_coerce_scalar_to_timedelta_type": [
                "r",
                "unit",
                "box",
                "coerce"
            ],
            "_get_string_converter": [
                "r",
                "unit"
            ]
        },
        "pandas.tseries.offsets": {
            "as_timestamp": [
                "obj"
            ],
            "as_datetime": [
                "obj"
            ],
            "apply_wraps": [
                "func"
            ],
            "_is_normalized": [
                "dt"
            ],
            "_tick_comp": [
                "op"
            ],
            "_delta_to_tick": [
                "delta"
            ],
            "_get_firstbday": [
                "wkday"
            ],
            "generate_range": [
                "start",
                "end",
                "periods",
                "offset",
                "time_rule"
            ],
            "_make_offset": [
                "key"
            ],
            "ApplyTypeError": {},
            "CacheableOffset": {},
            "DateOffset": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "_determine_offset": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "isAnchored": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "_should_cache": [
                    "self"
                ],
                "_params": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "name": [
                    "self"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__call__": [
                    "self",
                    "other"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__radd__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "__rsub__": [
                    "self",
                    "other"
                ],
                "__mul__": [
                    "self",
                    "someInt"
                ],
                "__rmul__": [
                    "self",
                    "someInt"
                ],
                "__neg__": [
                    "self"
                ],
                "rollback": [
                    "self",
                    "dt"
                ],
                "rollforward": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "_prefix": [
                    "self"
                ],
                "rule_code": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ]
            },
            "SingleConstructorOffset": {
                "_from_name": [
                    "cls",
                    "suffix"
                ]
            },
            "BusinessMixin": {
                "__repr__": [
                    "self"
                ]
            },
            "BusinessDay": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "freqstr": [
                    "self"
                ],
                "_offset_str": [
                    "self"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "CustomBusinessDay": {
                "__init__": [
                    "self",
                    "n",
                    "normalize",
                    "weekmask",
                    "holidays",
                    "calendar"
                ],
                "get_calendar": [
                    "self",
                    "weekmask",
                    "holidays",
                    "calendar"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "_to_dt64": [
                    "dt",
                    "dtype"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "MonthOffset": {
                "name": [
                    "self"
                ]
            },
            "MonthEnd": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "MonthBegin": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "BusinessMonthEnd": {
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ]
            },
            "BusinessMonthBegin": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "CustomBusinessMonthEnd": {
                "__init__": [
                    "self",
                    "n",
                    "normalize",
                    "weekmask",
                    "holidays",
                    "calendar"
                ],
                "apply": [
                    "self",
                    "other"
                ]
            },
            "CustomBusinessMonthBegin": {
                "__init__": [
                    "self",
                    "n",
                    "normalize",
                    "weekmask",
                    "holidays",
                    "calendar"
                ],
                "apply": [
                    "self",
                    "other"
                ]
            },
            "Week": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "_from_name": [
                    "cls",
                    "suffix"
                ]
            },
            "WeekDay": {},
            "WeekOfMonth": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "getOffsetOfMonth": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "_from_name": [
                    "cls",
                    "suffix"
                ]
            },
            "LastWeekOfMonth": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "getOffsetOfMonth": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "_from_name": [
                    "cls",
                    "suffix"
                ]
            },
            "QuarterOffset": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "isAnchored": [
                    "self"
                ],
                "_from_name": [
                    "cls",
                    "suffix"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BQuarterEnd": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "BQuarterBegin": {
                "apply": [
                    "self",
                    "other"
                ]
            },
            "QuarterEnd": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "QuarterBegin": {
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ]
            },
            "YearOffset": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "_from_name": [
                    "cls",
                    "suffix"
                ],
                "rule_code": [
                    "self"
                ]
            },
            "BYearEnd": {
                "apply": [
                    "self",
                    "other"
                ]
            },
            "BYearBegin": {
                "apply": [
                    "self",
                    "other"
                ]
            },
            "YearEnd": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "YearBegin": {
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "FY5253": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "isAnchored": [
                    "self"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "get_year_end": [
                    "self",
                    "dt"
                ],
                "get_target_month_end": [
                    "self",
                    "dt"
                ],
                "_get_year_end_nearest": [
                    "self",
                    "dt"
                ],
                "_get_year_end_last": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "_get_prefix": [
                    "self"
                ],
                "_get_suffix_prefix": [
                    "self"
                ],
                "get_rule_code_suffix": [
                    "self"
                ],
                "_parse_suffix": [
                    "cls",
                    "varion_code",
                    "startingMonth_code",
                    "weekday_code"
                ],
                "_from_name": [
                    "cls"
                ]
            },
            "FY5253Quarter": {
                "__init__": [
                    "self",
                    "n",
                    "normalize"
                ],
                "isAnchored": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "get_weeks": [
                    "self",
                    "dt"
                ],
                "year_has_extra_week": [
                    "self",
                    "dt"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ],
                "rule_code": [
                    "self"
                ],
                "_from_name": [
                    "cls"
                ]
            },
            "Easter": {
                "__init__": [
                    "self",
                    "n"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "onOffset": [
                    "self",
                    "dt"
                ]
            },
            "Tick": {
                "__add__": [
                    "self",
                    "other"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "delta": [
                    "self"
                ],
                "nanos": [
                    "self"
                ],
                "apply": [
                    "self",
                    "other"
                ],
                "isAnchored": [
                    "self"
                ]
            },
            "Day": {},
            "Hour": {},
            "Minute": {},
            "Second": {},
            "Milli": {},
            "Micro": {},
            "Nano": {}
        },
        "pandas.tseries.util": {
            "pivot_annual": [
                "series",
                "freq"
            ],
            "isleapyear": [
                "year"
            ]
        },
        "pandas.tseries.period": {
            "_period_field_accessor": [
                "name",
                "alias"
            ],
            "_field_accessor": [
                "name",
                "alias",
                "docstring"
            ],
            "_get_ordinals": [
                "data",
                "freq"
            ],
            "dt64arr_to_periodarr": [
                "data",
                "freq",
                "tz"
            ],
            "_period_index_cmp": [
                "opname",
                "nat_result"
            ],
            "_get_ordinal_range": [
                "start",
                "end",
                "periods",
                "freq"
            ],
            "_range_from_fields": [
                "year",
                "month",
                "quarter",
                "day",
                "hour",
                "minute",
                "second",
                "freq"
            ],
            "_make_field_arrays": [],
            "_ordinal_from_fields": [
                "year",
                "month",
                "quarter",
                "day",
                "hour",
                "minute",
                "second",
                "freq"
            ],
            "_quarter_to_myear": [
                "year",
                "quarter",
                "freq"
            ],
            "_validate_end_alias": [
                "how"
            ],
            "pnow": [
                "freq"
            ],
            "period_range": [
                "start",
                "end",
                "periods",
                "freq",
                "name"
            ],
            "Period": {
                "_from_ordinal": [
                    "cls",
                    "ordinal",
                    "freq"
                ],
                "__init__": [
                    "self",
                    "value",
                    "freq",
                    "ordinal",
                    "year",
                    "month",
                    "quarter",
                    "day",
                    "hour",
                    "minute",
                    "second"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "__hash__": [
                    "self"
                ],
                "_add_delta": [
                    "self",
                    "other"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "_comp_method": [
                    "func",
                    "name"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "how"
                ],
                "start_time": [
                    "self"
                ],
                "end_time": [
                    "self"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how",
                    "tz"
                ],
                "now": [
                    "cls",
                    "freq"
                ],
                "__repr__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "strftime": [
                    "self",
                    "fmt"
                ]
            },
            "PeriodIndex": {
                "__new__": [
                    "cls",
                    "data",
                    "ordinal",
                    "freq",
                    "start",
                    "end",
                    "periods",
                    "copy",
                    "name",
                    "tz"
                ],
                "_generate_range": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "freq",
                    "fields"
                ],
                "_from_arraylike": [
                    "cls",
                    "data",
                    "freq",
                    "tz"
                ],
                "_simple_new": [
                    "cls",
                    "values",
                    "name",
                    "freq"
                ],
                "_na_value": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "_box_func": [
                    "self"
                ],
                "_to_embed": [
                    "self",
                    "keep_tz"
                ],
                "asof_locs": [
                    "self",
                    "where",
                    "mask"
                ],
                "_array_values": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "searchsorted": [
                    "self",
                    "key",
                    "side"
                ],
                "is_all_dates": [
                    "self"
                ],
                "is_full": [
                    "self"
                ],
                "freqstr": [
                    "self"
                ],
                "asfreq": [
                    "self",
                    "freq",
                    "how"
                ],
                "to_datetime": [
                    "self",
                    "dayfirst"
                ],
                "_get_object_array": [
                    "self"
                ],
                "_mpl_repr": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "to_timestamp": [
                    "self",
                    "freq",
                    "how"
                ],
                "_add_delta": [
                    "self",
                    "other"
                ],
                "shift": [
                    "self",
                    "n"
                ],
                "inferred_type": [
                    "self"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end"
                ],
                "_get_string_slice": [
                    "self",
                    "key"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_assert_can_do_setop": [
                    "self",
                    "other"
                ],
                "_wrap_union_result": [
                    "self",
                    "other",
                    "result"
                ],
                "_apply_meta": [
                    "self",
                    "rawarr"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_format_native_types": [
                    "self",
                    "na_rep"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "_format_footer": [
                    "self"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "tz_convert": [
                    "self",
                    "tz"
                ],
                "tz_localize": [
                    "self",
                    "tz",
                    "infer_dst"
                ]
            }
        },
        "pandas.tseries.tools": {
            "_infer_tzinfo": [
                "start",
                "end"
            ],
            "_guess_datetime_format": [
                "dt_str",
                "dayfirst",
                "dt_str_parse",
                "dt_str_split"
            ],
            "_guess_datetime_format_for_array": [
                "arr"
            ],
            "to_datetime": [
                "arg",
                "errors",
                "dayfirst",
                "utc",
                "box",
                "format",
                "coerce",
                "unit",
                "infer_datetime_format"
            ],
            "_attempt_YYYYMMDD": [
                "arg",
                "coerce"
            ],
            "parse_time_string": [
                "arg",
                "freq",
                "dayfirst",
                "yearfirst"
            ],
            "dateutil_parse": [
                "timestr",
                "default",
                "ignoretz",
                "tzinfos"
            ],
            "_attempt_monthly": [
                "val"
            ],
            "_try_parse_monthly": [
                "arg"
            ],
            "format": [
                "dt"
            ],
            "ole2datetime": [
                "oledt"
            ],
            "DateParseError": {}
        },
        "pandas.tseries.base": {
            "DatetimeIndexOpsMixin": {
                "__iter__": [
                    "self"
                ],
                "_join_i8_wrapper": [
                    "joinf",
                    "dtype",
                    "with_indexers"
                ],
                "_box_func": [
                    "self"
                ],
                "_box_values": [
                    "self",
                    "values"
                ],
                "groupby": [
                    "self",
                    "f"
                ],
                "_format_with_header": [
                    "self",
                    "header"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "inferred_freq": [
                    "self"
                ],
                "map": [
                    "self",
                    "f"
                ],
                "order": [
                    "self",
                    "return_indexer",
                    "ascending"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "slice_locs": [
                    "self",
                    "start",
                    "end"
                ],
                "get_duplicates": [
                    "self"
                ],
                "hasnans": [
                    "self"
                ],
                "asobject": [
                    "self"
                ],
                "_maybe_mask_results": [
                    "self",
                    "result",
                    "fill_value",
                    "convert"
                ],
                "tolist": [
                    "self"
                ],
                "min": [
                    "self",
                    "axis"
                ],
                "argmin": [
                    "self",
                    "axis"
                ],
                "max": [
                    "self",
                    "axis"
                ],
                "argmax": [
                    "self",
                    "axis"
                ],
                "_formatter_func": [
                    "self"
                ],
                "_format_footer": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "_resolution": [
                    "self"
                ],
                "resolution": [
                    "self"
                ],
                "_add_datelike": [
                    "self",
                    "other"
                ],
                "_sub_datelike": [
                    "self",
                    "other"
                ],
                "_add_datetimelike_methods": [
                    "cls"
                ],
                "_add_delta": [
                    "self",
                    "other"
                ],
                "_add_delta_td": [
                    "self",
                    "other"
                ],
                "_add_delta_tdi": [
                    "self",
                    "other"
                ],
                "isin": [
                    "self",
                    "values"
                ],
                "shift": [
                    "self",
                    "n",
                    "freq"
                ],
                "unique": [
                    "self"
                ],
                "repeat": [
                    "self",
                    "repeats",
                    "axis"
                ]
            }
        },
        "pandas.tseries.api": {},
        "pandas.tseries": {},
        "pandas.tseries.index": {
            "_utc": [],
            "_field_accessor": [
                "name",
                "field",
                "docstring"
            ],
            "_dt_index_cmp": [
                "opname",
                "nat_result"
            ],
            "_ensure_datetime64": [
                "other"
            ],
            "_new_DatetimeIndex": [
                "cls",
                "d"
            ],
            "_generate_regular_range": [
                "start",
                "end",
                "periods",
                "offset"
            ],
            "date_range": [
                "start",
                "end",
                "periods",
                "freq",
                "tz",
                "normalize",
                "name",
                "closed"
            ],
            "bdate_range": [
                "start",
                "end",
                "periods",
                "freq",
                "tz",
                "normalize",
                "name",
                "closed"
            ],
            "cdate_range": [
                "start",
                "end",
                "periods",
                "freq",
                "tz",
                "normalize",
                "name",
                "closed"
            ],
            "_to_m8": [
                "key",
                "tz"
            ],
            "_str_to_dt_array": [
                "arr",
                "offset",
                "dayfirst",
                "yearfirst"
            ],
            "_naive_in_cache_range": [
                "start",
                "end"
            ],
            "_in_range": [
                "start",
                "end",
                "rng_start",
                "rng_end"
            ],
            "_use_cached_range": [
                "offset",
                "_normalized",
                "start",
                "end"
            ],
            "_time_to_micros": [
                "time"
            ],
            "_process_concat_data": [
                "to_concat",
                "name"
            ],
            "DatetimeIndex": {
                "_join_i8_wrapper": [
                    "joinf"
                ],
                "__new__": [
                    "cls",
                    "data",
                    "freq",
                    "start",
                    "end",
                    "periods",
                    "copy",
                    "name",
                    "tz",
                    "verify_integrity",
                    "normalize",
                    "closed",
                    "ambiguous"
                ],
                "_generate": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "name",
                    "offset",
                    "tz",
                    "normalize",
                    "ambiguous",
                    "closed"
                ],
                "_box_func": [
                    "self"
                ],
                "_local_timestamps": [
                    "self"
                ],
                "_simple_new": [
                    "cls",
                    "values",
                    "name",
                    "freq",
                    "tz"
                ],
                "tzinfo": [
                    "self"
                ],
                "_cached_range": [
                    "cls",
                    "start",
                    "end",
                    "periods",
                    "offset",
                    "name"
                ],
                "_mpl_repr": [
                    "self"
                ],
                "_is_dates_only": [
                    "self"
                ],
                "_formatter_func": [
                    "self"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "_sub_datelike": [
                    "self",
                    "other"
                ],
                "_add_delta": [
                    "self",
                    "delta"
                ],
                "_format_native_types": [
                    "self",
                    "na_rep",
                    "date_format"
                ],
                "to_datetime": [
                    "self",
                    "dayfirst"
                ],
                "summary": [
                    "self",
                    "name"
                ],
                "_format_footer": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "_get_time_micros": [
                    "self"
                ],
                "to_series": [
                    "self",
                    "keep_tz"
                ],
                "_to_embed": [
                    "self",
                    "keep_tz"
                ],
                "to_pydatetime": [
                    "self"
                ],
                "to_period": [
                    "self",
                    "freq"
                ],
                "snap": [
                    "self",
                    "freq"
                ],
                "union": [
                    "self",
                    "other"
                ],
                "union_many": [
                    "self",
                    "others"
                ],
                "append": [
                    "self",
                    "other"
                ],
                "join": [
                    "self",
                    "other",
                    "how",
                    "level",
                    "return_indexers"
                ],
                "_maybe_utc_convert": [
                    "self",
                    "other"
                ],
                "_wrap_joined_index": [
                    "self",
                    "joined",
                    "other"
                ],
                "_can_fast_union": [
                    "self",
                    "other"
                ],
                "_fast_union": [
                    "self",
                    "other"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "__iter__": [
                    "self"
                ],
                "_wrap_union_result": [
                    "self",
                    "other",
                    "result"
                ],
                "intersection": [
                    "self",
                    "other"
                ],
                "_partial_date_slice": [
                    "self",
                    "reso",
                    "parsed",
                    "use_lhs",
                    "use_rhs"
                ],
                "_possibly_promote": [
                    "self",
                    "other"
                ],
                "get_value": [
                    "self",
                    "series",
                    "key"
                ],
                "get_value_maybe_box": [
                    "self",
                    "series",
                    "key"
                ],
                "get_loc": [
                    "self",
                    "key"
                ],
                "_get_string_slice": [
                    "self",
                    "key",
                    "use_lhs",
                    "use_rhs"
                ],
                "slice_indexer": [
                    "self",
                    "start",
                    "end",
                    "step"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_get_freq": [
                    "self"
                ],
                "_set_freq": [
                    "self",
                    "value"
                ],
                "freqstr": [
                    "self"
                ],
                "time": [
                    "self"
                ],
                "date": [
                    "self"
                ],
                "normalize": [
                    "self"
                ],
                "searchsorted": [
                    "self",
                    "key",
                    "side"
                ],
                "is_type_compatible": [
                    "self",
                    "typ"
                ],
                "inferred_type": [
                    "self"
                ],
                "dtype": [
                    "self"
                ],
                "is_all_dates": [
                    "self"
                ],
                "is_normalized": [
                    "self"
                ],
                "_resolution": [
                    "self"
                ],
                "equals": [
                    "self",
                    "other"
                ],
                "insert": [
                    "self",
                    "loc",
                    "item"
                ],
                "delete": [
                    "self",
                    "loc"
                ],
                "tz_convert": [
                    "self",
                    "tz"
                ],
                "tz_localize": [
                    "self",
                    "tz",
                    "ambiguous"
                ],
                "indexer_at_time": [
                    "self",
                    "time",
                    "asof"
                ],
                "indexer_between_time": [
                    "self",
                    "start_time",
                    "end_time",
                    "include_start",
                    "include_end"
                ],
                "to_julian_date": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_timeseries": {
            "_skip_if_has_locale": [],
            "_skip_if_windows_python_3": [],
            "_skip_if_not_windows_python_3": [],
            "assert_range_equal": [
                "left",
                "right"
            ],
            "_simple_ts": [
                "start",
                "end",
                "freq"
            ],
            "TestTimeSeriesDuplicates": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_is_unique_monotonic": [
                    "self"
                ],
                "test_index_unique": [
                    "self"
                ],
                "test_index_dupes_contains": [
                    "self"
                ],
                "test_duplicate_dates_indexing": [
                    "self"
                ],
                "test_range_slice": [
                    "self"
                ],
                "test_groupby_average_dup_values": [
                    "self"
                ],
                "test_indexing_over_size_cutoff": [
                    "self"
                ],
                "test_indexing_unordered": [
                    "self"
                ],
                "test_indexing": [
                    "self"
                ],
                "test_recreate_from_data": [
                    "self"
                ]
            },
            "TestTimeSeries": {
                "test_is_": [
                    "self"
                ],
                "test_dti_slicing": [
                    "self"
                ],
                "test_pass_datetimeindex_to_index": [
                    "self"
                ],
                "test_contiguous_boolean_preserve_freq": [
                    "self"
                ],
                "test_getitem_median_slice_bug": [
                    "self"
                ],
                "test_series_box_timestamp": [
                    "self"
                ],
                "test_date_range_ambiguous_arguments": [
                    "self"
                ],
                "test_timestamp_to_datetime": [
                    "self"
                ],
                "test_timestamp_to_datetime_dateutil": [
                    "self"
                ],
                "test_timestamp_to_datetime_explicit_pytz": [
                    "self"
                ],
                "test_timestamp_to_datetime_explicit_dateutil": [
                    "self"
                ],
                "test_index_convert_to_datetime_array": [
                    "self"
                ],
                "test_index_convert_to_datetime_array_explicit_pytz": [
                    "self"
                ],
                "test_index_convert_to_datetime_array_dateutil": [
                    "self"
                ],
                "test_ctor_str_intraday": [
                    "self"
                ],
                "test_series_ctor_plus_datetimeindex": [
                    "self"
                ],
                "test_series_pad_backfill_limit": [
                    "self"
                ],
                "test_series_fillna_limit": [
                    "self"
                ],
                "test_frame_pad_backfill_limit": [
                    "self"
                ],
                "test_frame_fillna_limit": [
                    "self"
                ],
                "test_frame_setitem_timestamp": [
                    "self"
                ],
                "test_sparse_series_fillna_limit": [
                    "self"
                ],
                "test_sparse_series_pad_backfill_limit": [
                    "self"
                ],
                "test_sparse_frame_pad_backfill_limit": [
                    "self"
                ],
                "test_sparse_frame_fillna_limit": [
                    "self"
                ],
                "test_pad_require_monotonicity": [
                    "self"
                ],
                "test_frame_ctor_datetime64_column": [
                    "self"
                ],
                "test_frame_add_datetime64_column": [
                    "self"
                ],
                "test_frame_datetime64_pre1900_repr": [
                    "self"
                ],
                "test_frame_add_datetime64_col_other_units": [
                    "self"
                ],
                "test_to_datetime_unit": [
                    "self"
                ],
                "test_series_ctor_datetime64": [
                    "self"
                ],
                "test_index_cast_datetime64_other_units": [
                    "self"
                ],
                "test_reindex_series_add_nat": [
                    "self"
                ],
                "test_reindex_frame_add_nat": [
                    "self"
                ],
                "test_series_repr_nat": [
                    "self"
                ],
                "test_fillna_nat": [
                    "self"
                ],
                "test_string_na_nat_conversion": [
                    "self"
                ],
                "test_to_datetime_iso8601": [
                    "self"
                ],
                "test_to_datetime_default": [
                    "self"
                ],
                "test_to_datetime_on_datetime64_series": [
                    "self"
                ],
                "test_to_datetime_with_apply": [
                    "self"
                ],
                "test_nat_vector_field_access": [
                    "self"
                ],
                "test_nat_scalar_field_access": [
                    "self"
                ],
                "test_to_datetime_types": [
                    "self"
                ],
                "test_to_datetime_unprocessable_input": [
                    "self"
                ],
                "test_to_datetime_other_datetime64_units": [
                    "self"
                ],
                "test_to_datetime_list_of_integers": [
                    "self"
                ],
                "test_to_datetime_dt64s": [
                    "self"
                ],
                "test_to_datetime_array_of_dt64s": [
                    "self"
                ],
                "test_index_to_datetime": [
                    "self"
                ],
                "test_to_datetime_freq": [
                    "self"
                ],
                "test_range_misspecified": [
                    "self"
                ],
                "test_reasonable_keyerror": [
                    "self"
                ],
                "test_reindex_with_datetimes": [
                    "self"
                ],
                "test_promote_datetime_date": [
                    "self"
                ],
                "test_asfreq_normalize": [
                    "self"
                ],
                "test_date_range_gen_error": [
                    "self"
                ],
                "test_first_subset": [
                    "self"
                ],
                "test_last_subset": [
                    "self"
                ],
                "test_format_pre_1900_dates": [
                    "self"
                ],
                "test_repeat": [
                    "self"
                ],
                "test_at_time": [
                    "self"
                ],
                "test_at_time_frame": [
                    "self"
                ],
                "test_between_time": [
                    "self"
                ],
                "test_between_time_frame": [
                    "self"
                ],
                "test_dti_constructor_preserve_dti_freq": [
                    "self"
                ],
                "test_normalize": [
                    "self"
                ],
                "test_to_period": [
                    "self"
                ],
                "create_dt64_based_index": [
                    "self"
                ],
                "test_to_period_millisecond": [
                    "self"
                ],
                "test_to_period_microsecond": [
                    "self"
                ],
                "test_to_period_tz_pytz": [
                    "self"
                ],
                "test_to_period_tz_explicit_pytz": [
                    "self"
                ],
                "test_to_period_tz_dateutil": [
                    "self"
                ],
                "test_frame_to_period": [
                    "self"
                ],
                "test_timestamp_fields": [
                    "self"
                ],
                "test_woy_boundary": [
                    "self"
                ],
                "test_timestamp_date_out_of_range": [
                    "self"
                ],
                "test_timestamp_repr": [
                    "self"
                ],
                "test_timestamp_from_ordinal": [
                    "self"
                ],
                "test_datetimeindex_integers_shift": [
                    "self"
                ],
                "test_astype_object": [
                    "self"
                ],
                "test_catch_infinite_loop": [
                    "self"
                ],
                "test_append_concat": [
                    "self"
                ],
                "test_append_concat_tz": [
                    "self"
                ],
                "test_append_concat_tz_explicit_pytz": [
                    "self"
                ],
                "test_append_concat_tz_dateutil": [
                    "self"
                ],
                "test_set_dataframe_column_ns_dtype": [
                    "self"
                ],
                "test_groupby_count_dateparseerror": [
                    "self"
                ],
                "test_datetimeindex_repr_short": [
                    "self"
                ],
                "test_constructor_int64_nocopy": [
                    "self"
                ],
                "test_series_interpolate_method_values": [
                    "self"
                ],
                "test_frame_datetime64_handling_groupby": [
                    "self"
                ],
                "test_series_interpolate_intraday": [
                    "self"
                ],
                "test_frame_dict_constructor_datetime64_1680": [
                    "self"
                ],
                "test_frame_datetime64_mixed_index_ctor_1681": [
                    "self"
                ],
                "test_frame_timeseries_to_records": [
                    "self"
                ],
                "test_frame_datetime64_duplicated": [
                    "self"
                ],
                "test_timestamp_compare_with_early_datetime": [
                    "self"
                ],
                "test_to_html_timestamp": [
                    "self"
                ],
                "test_to_csv_numpy_16_bug": [
                    "self"
                ],
                "test_series_map_box_timestamps": [
                    "self"
                ],
                "test_concat_datetime_datetime64_frame": [
                    "self"
                ],
                "test_period_resample": [
                    "self"
                ],
                "test_period_resample_with_local_timezone_pytz": [
                    "self"
                ],
                "test_period_resample_with_local_timezone_dateutil": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ]
            },
            "TestDatetimeIndex": {
                "test_hash_error": [
                    "self"
                ],
                "test_stringified_slice_with_tz": [
                    "self"
                ],
                "test_append_join_nondatetimeindex": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_to_period_nofreq": [
                    "self"
                ],
                "test_000constructor_resolution": [
                    "self"
                ],
                "test_constructor_coverage": [
                    "self"
                ],
                "test_constructor_datetime64_tzformat": [
                    "self"
                ],
                "test_constructor_name": [
                    "self"
                ],
                "test_comparisons_coverage": [
                    "self"
                ],
                "test_comparisons_nat": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_misc_coverage": [
                    "self"
                ],
                "test_union_coverage": [
                    "self"
                ],
                "test_union_bug_1730": [
                    "self"
                ],
                "test_union_bug_1745": [
                    "self"
                ],
                "test_union_bug_4564": [
                    "self"
                ],
                "test_intersection_bug_1708": [
                    "self"
                ],
                "test_get_duplicates": [
                    "self"
                ],
                "test_argmin_argmax": [
                    "self"
                ],
                "test_order": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delete": [
                    "self"
                ],
                "test_delete_slice": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_map_bug_1677": [
                    "self"
                ],
                "test_groupby_function_tuple_1677": [
                    "self"
                ],
                "test_append_numpy_bug_1681": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_union_with_DatetimeIndex": [
                    "self"
                ],
                "test_time": [
                    "self"
                ],
                "test_date": [
                    "self"
                ],
                "test_does_not_convert_mixed_integer": [
                    "self"
                ],
                "test_slice_keeps_name": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "assert_index_parameters": [
                    "self",
                    "index"
                ],
                "test_ns_index": [
                    "self"
                ],
                "test_join_with_period_index": [
                    "self"
                ],
                "test_factorize": [
                    "self"
                ]
            },
            "TestDatetime64": {
                "setUp": [
                    "self"
                ],
                "test_datetimeindex_accessors": [
                    "self"
                ],
                "test_nanosecond_field": [
                    "self"
                ],
                "test_datetimeindex_diff": [
                    "self"
                ],
                "test_fancy_getitem": [
                    "self"
                ],
                "test_fancy_setitem": [
                    "self"
                ],
                "test_datetimeindex_constructor": [
                    "self"
                ],
                "test_dayfirst": [
                    "self"
                ],
                "test_dti_snap": [
                    "self"
                ],
                "test_dti_reset_index_round_trip": [
                    "self"
                ],
                "test_dti_set_index_reindex": [
                    "self"
                ],
                "test_datetimeindex_union_join_empty": [
                    "self"
                ],
                "test_series_set_value": [
                    "self"
                ],
                "test_slice_locs_indexerror": [
                    "self"
                ],
                "test_slicing_datetimes": [
                    "self"
                ]
            },
            "TestSeriesDatetime64": {
                "setUp": [
                    "self"
                ],
                "test_auto_conversion": [
                    "self"
                ],
                "test_constructor_cant_cast_datetime64": [
                    "self"
                ],
                "test_series_comparison_scalars": [
                    "self"
                ],
                "test_between": [
                    "self"
                ],
                "test_NaT_scalar": [
                    "self"
                ],
                "test_set_none_nan": [
                    "self"
                ],
                "test_intercept_astype_object": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_date_range_bms_bug": [
                    "self"
                ],
                "test_string_index_series_name_converted": [
                    "self"
                ]
            },
            "TestTimestamp": {
                "test_class_ops_pytz": [
                    "self"
                ],
                "test_class_ops_dateutil": [
                    "self"
                ],
                "test_basics_nanos": [
                    "self"
                ],
                "test_unit": [
                    "self"
                ],
                "test_roundtrip": [
                    "self"
                ],
                "test_comparison": [
                    "self"
                ],
                "test_compare_invalid": [
                    "self"
                ],
                "test_cant_compare_tz_naive_w_aware": [
                    "self"
                ],
                "test_cant_compare_tz_naive_w_aware_explicit_pytz": [
                    "self"
                ],
                "test_cant_compare_tz_naive_w_aware_dateutil": [
                    "self"
                ],
                "test_delta_preserve_nanos": [
                    "self"
                ],
                "test_frequency_misc": [
                    "self"
                ],
                "test_hash_equivalent": [
                    "self"
                ],
                "test_timestamp_compare_scalars": [
                    "self"
                ],
                "test_timestamp_compare_series": [
                    "self"
                ]
            },
            "TestSlicing": {
                "test_slice_year": [
                    "self"
                ],
                "test_slice_quarter": [
                    "self"
                ],
                "test_slice_month": [
                    "self"
                ],
                "test_partial_slice": [
                    "self"
                ],
                "test_partial_slice_daily": [
                    "self"
                ],
                "test_partial_slice_hourly": [
                    "self"
                ],
                "test_partial_slice_minutely": [
                    "self"
                ],
                "test_partial_slicing_with_multiindex": [
                    "self"
                ],
                "test_date_range_normalize": [
                    "self"
                ],
                "test_timedelta": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_setops_preserve_freq": [
                    "self"
                ],
                "test_min_max": [
                    "self"
                ],
                "test_min_max_series": [
                    "self"
                ],
                "test_from_M8_structured": [
                    "self"
                ],
                "test_get_level_values_box": [
                    "self"
                ],
                "test_frame_apply_dont_convert_datetime64": [
                    "self"
                ],
                "test_date_range_fy5252": [
                    "self"
                ]
            },
            "TimeConversionFormats": {
                "test_to_datetime_format": [
                    "self"
                ],
                "test_to_datetime_format_YYYYMMDD": [
                    "self"
                ],
                "test_to_datetime_format_microsecond": [
                    "self"
                ],
                "test_to_datetime_format_time": [
                    "self"
                ],
                "test_to_datetime_format_weeks": [
                    "self"
                ]
            },
            "TestToDatetimeInferFormat": {
                "test_to_datetime_infer_datetime_format_consistent_format": [
                    "self"
                ],
                "test_to_datetime_infer_datetime_format_inconsistent_format": [
                    "self"
                ],
                "test_to_datetime_infer_datetime_format_series_with_nans": [
                    "self"
                ],
                "test_to_datetime_infer_datetime_format_series_starting_with_nans": [
                    "self"
                ]
            },
            "TestGuessDatetimeFormat": {
                "test_guess_datetime_format_with_parseable_formats": [
                    "self"
                ],
                "test_guess_datetime_format_with_dayfirst": [
                    "self"
                ],
                "test_guess_datetime_format_with_locale_specific_formats": [
                    "self"
                ],
                "test_guess_datetime_format_invalid_inputs": [
                    "self"
                ],
                "test_guess_datetime_format_for_array": [
                    "self"
                ]
            },
            "TestTimestampToJulianDate": {
                "test_compare_1700": [
                    "self"
                ],
                "test_compare_2000": [
                    "self"
                ],
                "test_compare_2100": [
                    "self"
                ],
                "test_compare_hour01": [
                    "self"
                ],
                "test_compare_hour13": [
                    "self"
                ]
            },
            "TestDateTimeIndexToJulianDate": {
                "test_1700": [
                    "self"
                ],
                "test_2000": [
                    "self"
                ],
                "test_hour": [
                    "self"
                ],
                "test_minute": [
                    "self"
                ],
                "test_second": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_util": {
            "test_normalize_date": [],
            "TestPivotAnnual": {
                "test_daily": [
                    "self"
                ],
                "test_hourly": [
                    "self"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_period_monthly": [
                    "self"
                ],
                "test_period_daily": [
                    "self"
                ],
                "test_period_weekly": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_base": {
            "TestDatetimeIndexOps": {
                "setUp": [
                    "self"
                ],
                "test_ops_properties": [
                    "self"
                ],
                "test_ops_properties_basic": [
                    "self"
                ],
                "test_asobject_tolist": [
                    "self"
                ],
                "test_minmax": [
                    "self"
                ],
                "test_representation": [
                    "self"
                ],
                "test_resolution": [
                    "self"
                ],
                "test_add_iadd": [
                    "self"
                ],
                "test_sub_isub": [
                    "self"
                ],
                "test_value_counts_unique": [
                    "self"
                ]
            },
            "TestTimedeltaIndexOps": {
                "setUp": [
                    "self"
                ],
                "test_ops_properties": [
                    "self"
                ],
                "test_asobject_tolist": [
                    "self"
                ],
                "test_minmax": [
                    "self"
                ],
                "test_representation": [
                    "self"
                ],
                "test_add_iadd": [
                    "self"
                ],
                "test_sub_isub": [
                    "self"
                ],
                "test_ops_compat": [
                    "self"
                ],
                "test_subtraction_ops": [
                    "self"
                ],
                "test_dti_tdi_numeric_ops": [
                    "self"
                ],
                "test_addition_ops": [
                    "self"
                ],
                "test_value_counts_unique": [
                    "self"
                ]
            },
            "TestPeriodIndexOps": {
                "setUp": [
                    "self"
                ],
                "test_ops_properties": [
                    "self"
                ],
                "test_asobject_tolist": [
                    "self"
                ],
                "test_minmax": [
                    "self"
                ],
                "test_representation": [
                    "self"
                ],
                "test_resolution": [
                    "self"
                ],
                "test_add_iadd": [
                    "self"
                ],
                "test_sub_isub": [
                    "self"
                ],
                "test_value_counts_unique": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_period": {
            "noWrap": [
                "item"
            ],
            "_permute": [
                "obj"
            ],
            "TestPeriodProperties": {
                "test_quarterly_negative_ordinals": [
                    "self"
                ],
                "test_period_cons_quarterly": [
                    "self"
                ],
                "test_period_cons_annual": [
                    "self"
                ],
                "test_period_cons_weekly": [
                    "self"
                ],
                "test_period_cons_nat": [
                    "self"
                ],
                "test_timestamp_tz_arg": [
                    "self"
                ],
                "test_timestamp_tz_arg_dateutil": [
                    "self"
                ],
                "test_timestamp_tz_arg_dateutil_from_string": [
                    "self"
                ],
                "test_timestamp_nat_tz": [
                    "self"
                ],
                "test_period_constructor": [
                    "self"
                ],
                "test_freq_str": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_repr_nat": [
                    "self"
                ],
                "test_millisecond_repr": [
                    "self"
                ],
                "test_microsecond_repr": [
                    "self"
                ],
                "test_strftime": [
                    "self"
                ],
                "test_sub_delta": [
                    "self"
                ],
                "test_to_timestamp": [
                    "self"
                ],
                "test_start_time": [
                    "self"
                ],
                "test_end_time": [
                    "self"
                ],
                "test_anchor_week_end_time": [
                    "self"
                ],
                "test_properties_annually": [
                    "self"
                ],
                "test_properties_quarterly": [
                    "self"
                ],
                "test_properties_monthly": [
                    "self"
                ],
                "test_properties_weekly": [
                    "self"
                ],
                "test_properties_daily": [
                    "self"
                ],
                "test_properties_hourly": [
                    "self"
                ],
                "test_properties_minutely": [
                    "self"
                ],
                "test_properties_secondly": [
                    "self"
                ],
                "test_properties_nat": [
                    "self"
                ],
                "test_pnow": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_infer_freq": [
                    "self"
                ],
                "test_asfreq_MS": [
                    "self"
                ]
            },
            "TestFreqConversion": {
                "test_asfreq_corner": [
                    "self"
                ],
                "test_conv_annual": [
                    "self"
                ],
                "test_conv_quarterly": [
                    "self"
                ],
                "test_conv_monthly": [
                    "self"
                ],
                "test_conv_weekly": [
                    "self"
                ],
                "test_conv_business": [
                    "self"
                ],
                "test_conv_daily": [
                    "self"
                ],
                "test_conv_hourly": [
                    "self"
                ],
                "test_conv_minutely": [
                    "self"
                ],
                "test_conv_secondly": [
                    "self"
                ],
                "test_asfreq_nat": [
                    "self"
                ]
            },
            "TestPeriodIndex": {
                "setUp": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_make_time_series": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_constructor_use_start_freq": [
                    "self"
                ],
                "test_constructor_field_arrays": [
                    "self"
                ],
                "test_constructor_U": [
                    "self"
                ],
                "test_constructor_arrays_negative_year": [
                    "self"
                ],
                "test_constructor_invalid_quarters": [
                    "self"
                ],
                "test_constructor_corner": [
                    "self"
                ],
                "test_constructor_fromarraylike": [
                    "self"
                ],
                "test_constructor_datetime64arr": [
                    "self"
                ],
                "test_constructor_simple_new": [
                    "self"
                ],
                "test_constructor_nat": [
                    "self"
                ],
                "test_constructor_year_and_quarter": [
                    "self"
                ],
                "test_is_": [
                    "self"
                ],
                "test_comp_period": [
                    "self"
                ],
                "test_getitem_ndim2": [
                    "self"
                ],
                "test_getitem_partial": [
                    "self"
                ],
                "test_getitem_datetime": [
                    "self"
                ],
                "test_sub": [
                    "self"
                ],
                "test_periods_number_check": [
                    "self"
                ],
                "test_tolist": [
                    "self"
                ],
                "test_to_timestamp": [
                    "self"
                ],
                "test_to_timestamp_quarterly_bug": [
                    "self"
                ],
                "test_to_timestamp_preserve_name": [
                    "self"
                ],
                "test_to_timestamp_repr_is_code": [
                    "self"
                ],
                "test_to_timestamp_period_nat": [
                    "self"
                ],
                "test_as_frame_columns": [
                    "self"
                ],
                "test_indexing": [
                    "self"
                ],
                "test_frame_setitem": [
                    "self"
                ],
                "test_period_set_index_reindex": [
                    "self"
                ],
                "test_nested_dict_frame_constructor": [
                    "self"
                ],
                "test_frame_to_time_stamp": [
                    "self"
                ],
                "test_index_duplicate_periods": [
                    "self"
                ],
                "test_index_unique": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_shift_nat": [
                    "self"
                ],
                "test_asfreq": [
                    "self"
                ],
                "test_asfreq_nat": [
                    "self"
                ],
                "test_period_index_length": [
                    "self"
                ],
                "test_frame_index_to_string": [
                    "self"
                ],
                "test_asfreq_ts": [
                    "self"
                ],
                "test_badinput": [
                    "self"
                ],
                "test_negative_ordinals": [
                    "self"
                ],
                "test_dti_to_period": [
                    "self"
                ],
                "test_pindex_slice_index": [
                    "self"
                ],
                "test_getitem_day": [
                    "self"
                ],
                "test_range_slice_day": [
                    "self"
                ],
                "test_getitem_seconds": [
                    "self"
                ],
                "test_range_slice_seconds": [
                    "self"
                ],
                "test_range_slice_outofbounds": [
                    "self"
                ],
                "test_pindex_fieldaccessor_nat": [
                    "self"
                ],
                "test_pindex_qaccess": [
                    "self"
                ],
                "test_period_dt64_round_trip": [
                    "self"
                ],
                "test_to_period_quarterly": [
                    "self"
                ],
                "test_to_period_quarterlyish": [
                    "self"
                ],
                "test_to_period_annualish": [
                    "self"
                ],
                "test_to_period_monthish": [
                    "self"
                ],
                "test_no_multiples": [
                    "self"
                ],
                "test_iteration": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_joins": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "test_join_does_not_recur": [
                    "self"
                ],
                "test_align_series": [
                    "self"
                ],
                "test_align_frame": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_fields": [
                    "self"
                ],
                "_check_all_fields": [
                    "self",
                    "periodindex"
                ],
                "test_is_full": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_map_with_string_constructor": [
                    "self"
                ],
                "test_convert_array_of_periods": [
                    "self"
                ],
                "test_with_multi_index": [
                    "self"
                ],
                "test_to_datetime_1703": [
                    "self"
                ],
                "test_get_loc_msg": [
                    "self"
                ],
                "test_append_concat": [
                    "self"
                ],
                "test_pickle_freq": [
                    "self"
                ],
                "test_slice_keep_name": [
                    "self"
                ],
                "test_factorize": [
                    "self"
                ],
                "test_recreate_from_data": [
                    "self"
                ],
                "test_combine_first": [
                    "self"
                ]
            },
            "TestMethods": {
                "test_add": [
                    "self"
                ],
                "test_add_offset": [
                    "self"
                ],
                "test_add_offset_nat": [
                    "self"
                ],
                "test_sub_offset": [
                    "self"
                ],
                "test_sub_offset_nat": [
                    "self"
                ],
                "test_nat_ops": [
                    "self"
                ],
                "test_pi_ops_nat": [
                    "self"
                ]
            },
            "TestPeriodRepresentation": {
                "test_annual": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_daily": [
                    "self"
                ],
                "test_business_daily": [
                    "self"
                ],
                "test_hourly": [
                    "self"
                ],
                "test_minutely": [
                    "self"
                ],
                "test_secondly": [
                    "self"
                ],
                "test_millisecondly": [
                    "self"
                ],
                "test_microsecondly": [
                    "self"
                ],
                "test_nanosecondly": [
                    "self"
                ],
                "_check_freq": [
                    "self",
                    "freq",
                    "base_date"
                ],
                "test_negone_ordinals": [
                    "self"
                ]
            },
            "TestComparisons": {
                "setUp": [
                    "self"
                ],
                "test_equal": [
                    "self"
                ],
                "test_equal_Raises_Value": [
                    "self"
                ],
                "test_notEqual": [
                    "self"
                ],
                "test_greater": [
                    "self"
                ],
                "test_greater_Raises_Value": [
                    "self"
                ],
                "test_greater_Raises_Type": [
                    "self"
                ],
                "test_greaterEqual": [
                    "self"
                ],
                "test_greaterEqual_Raises_Value": [
                    "self"
                ],
                "test_smallerEqual": [
                    "self"
                ],
                "test_smallerEqual_Raises_Value": [
                    "self"
                ],
                "test_smallerEqual_Raises_Type": [
                    "self"
                ],
                "test_smaller": [
                    "self"
                ],
                "test_smaller_Raises_Value": [
                    "self"
                ],
                "test_smaller_Raises_Type": [
                    "self"
                ],
                "test_sort": [
                    "self"
                ],
                "test_period_nat_comp": [
                    "self"
                ],
                "test_pi_nat_comp": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_frequencies": {
            "test_to_offset_multiple": [],
            "test_to_offset_negative": [],
            "test_to_offset_leading_zero": [],
            "test_anchored_shortcuts": [],
            "test_is_superperiod_subperiod": [],
            "TestFrequencyInference": {
                "test_raise_if_period_index": [
                    "self"
                ],
                "test_raise_if_too_few": [
                    "self"
                ],
                "test_business_daily": [
                    "self"
                ],
                "test_day": [
                    "self"
                ],
                "test_day_corner": [
                    "self"
                ],
                "test_non_datetimeindex": [
                    "self"
                ],
                "test_hour": [
                    "self"
                ],
                "test_minute": [
                    "self"
                ],
                "test_second": [
                    "self"
                ],
                "test_millisecond": [
                    "self"
                ],
                "test_microsecond": [
                    "self"
                ],
                "test_nanosecond": [
                    "self"
                ],
                "_check_tick": [
                    "self",
                    "base_delta",
                    "code"
                ],
                "test_weekly": [
                    "self"
                ],
                "test_week_of_month": [
                    "self"
                ],
                "test_week_of_month_fake": [
                    "self"
                ],
                "test_monthly": [
                    "self"
                ],
                "test_monthly_ambiguous": [
                    "self"
                ],
                "test_business_monthly": [
                    "self"
                ],
                "test_business_start_monthly": [
                    "self"
                ],
                "test_quarterly": [
                    "self"
                ],
                "test_annual": [
                    "self"
                ],
                "test_business_annual": [
                    "self"
                ],
                "test_annual_ambiguous": [
                    "self"
                ],
                "_check_generated_range": [
                    "self",
                    "start",
                    "freq"
                ],
                "test_infer_freq": [
                    "self"
                ],
                "test_infer_freq_tz": [
                    "self"
                ],
                "test_not_monotonic": [
                    "self"
                ],
                "test_invalid_index_types": [
                    "self"
                ],
                "test_string_datetimelike_compat": [
                    "self"
                ],
                "test_series": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_timedeltas": {
            "TestTimedeltas": {
                "setUp": [
                    "self"
                ],
                "test_construction": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_identity": [
                    "self"
                ],
                "test_conversion": [
                    "self"
                ],
                "test_ops": [
                    "self"
                ],
                "test_freq_conversion": [
                    "self"
                ],
                "test_fields": [
                    "self"
                ],
                "test_timedelta_range": [
                    "self"
                ],
                "test_numeric_conversions": [
                    "self"
                ],
                "test_timedelta_conversions": [
                    "self"
                ],
                "test_short_format_converters": [
                    "self"
                ],
                "test_full_format_converters": [
                    "self"
                ],
                "test_nat_converters": [
                    "self"
                ],
                "test_to_timedelta": [
                    "self"
                ],
                "test_to_timedelta_via_apply": [
                    "self"
                ],
                "test_timedelta_ops": [
                    "self"
                ],
                "test_timedelta_ops_scalar": [
                    "self"
                ],
                "test_to_timedelta_on_missing_values": [
                    "self"
                ],
                "test_timedelta_ops_with_missing_values": [
                    "self"
                ],
                "test_apply_to_timedelta": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ]
            },
            "TestTimedeltaIndex": {
                "test_pass_TimedeltaIndex_to_index": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_hash_error": [
                    "self"
                ],
                "test_append_join_nondatetimeindex": [
                    "self"
                ],
                "test_append_numpy_bug_1681": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_fields": [
                    "self"
                ],
                "test_components": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_coverage": [
                    "self"
                ],
                "test_constructor_name": [
                    "self"
                ],
                "test_freq_conversion": [
                    "self"
                ],
                "test_comparisons_coverage": [
                    "self"
                ],
                "test_comparisons_nat": [
                    "self"
                ],
                "test_map": [
                    "self"
                ],
                "test_misc_coverage": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_union_coverage": [
                    "self"
                ],
                "test_union_bug_1730": [
                    "self"
                ],
                "test_union_bug_1745": [
                    "self"
                ],
                "test_union_bug_4564": [
                    "self"
                ],
                "test_intersection_bug_1708": [
                    "self"
                ],
                "test_get_duplicates": [
                    "self"
                ],
                "test_argmin_argmax": [
                    "self"
                ],
                "test_order": [
                    "self"
                ],
                "test_insert": [
                    "self"
                ],
                "test_delete": [
                    "self"
                ],
                "test_delete_slice": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_does_not_convert_mixed_integer": [
                    "self"
                ],
                "test_slice_keeps_name": [
                    "self"
                ],
                "test_join_self": [
                    "self"
                ],
                "test_factorize": [
                    "self"
                ]
            },
            "TestSlicing": {
                "test_partial_slice": [
                    "self"
                ],
                "test_partial_slice_high_reso": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_timezones": {
            "FixedOffset": {
                "__init__": [
                    "self",
                    "offset",
                    "name"
                ],
                "utcoffset": [
                    "self",
                    "dt"
                ],
                "tzname": [
                    "self",
                    "dt"
                ],
                "dst": [
                    "self",
                    "dt"
                ]
            },
            "TestTimeZoneSupportPytz": {
                "setUp": [
                    "self"
                ],
                "tz": [
                    "self",
                    "tz"
                ],
                "tzstr": [
                    "self",
                    "tz"
                ],
                "localize": [
                    "self",
                    "tz",
                    "x"
                ],
                "cmptz": [
                    "self",
                    "tz1",
                    "tz2"
                ],
                "test_utc_to_local_no_modify": [
                    "self"
                ],
                "test_utc_to_local_no_modify_explicit": [
                    "self"
                ],
                "test_localize_utc_conversion": [
                    "self"
                ],
                "test_localize_utc_conversion_explicit": [
                    "self"
                ],
                "test_timestamp_tz_localize": [
                    "self"
                ],
                "test_timestamp_tz_localize_explicit": [
                    "self"
                ],
                "test_timestamp_constructed_by_date_and_tz": [
                    "self"
                ],
                "test_timestamp_constructed_by_date_and_tz_explicit": [
                    "self"
                ],
                "test_timestamp_to_datetime_tzoffset": [
                    "self"
                ],
                "test_timedelta_push_over_dst_boundary": [
                    "self"
                ],
                "test_timedelta_push_over_dst_boundary_explicit": [
                    "self"
                ],
                "test_tz_localize_dti": [
                    "self"
                ],
                "test_tz_localize_empty_series": [
                    "self"
                ],
                "test_astimezone": [
                    "self"
                ],
                "test_create_with_tz": [
                    "self"
                ],
                "test_create_with_fixed_tz": [
                    "self"
                ],
                "test_create_with_fixedoffset_noname": [
                    "self"
                ],
                "test_date_range_localize": [
                    "self"
                ],
                "test_utc_box_timestamp_and_localize": [
                    "self"
                ],
                "test_timestamp_tz_convert": [
                    "self"
                ],
                "test_pass_dates_localize_to_utc": [
                    "self"
                ],
                "test_field_access_localize": [
                    "self"
                ],
                "test_with_tz": [
                    "self"
                ],
                "test_tz_localize": [
                    "self"
                ],
                "test_with_tz_ambiguous_times": [
                    "self"
                ],
                "test_ambiguous_infer": [
                    "self"
                ],
                "test_ambiguous_flags": [
                    "self"
                ],
                "test_ambiguous_nat": [
                    "self"
                ],
                "test_infer_tz": [
                    "self"
                ],
                "test_tz_string": [
                    "self"
                ],
                "test_take_dont_lose_meta": [
                    "self"
                ],
                "test_index_with_timezone_repr": [
                    "self"
                ],
                "test_index_astype_asobject_tzinfos": [
                    "self"
                ],
                "test_localized_at_time_between_time": [
                    "self"
                ],
                "test_string_index_alias_tz_aware": [
                    "self"
                ],
                "test_fixed_offset": [
                    "self"
                ],
                "test_fixedtz_topydatetime": [
                    "self"
                ],
                "test_convert_tz_aware_datetime_datetime": [
                    "self"
                ],
                "test_to_datetime_utc": [
                    "self"
                ],
                "test_to_datetime_tzlocal": [
                    "self"
                ],
                "test_frame_no_datetime64_dtype": [
                    "self"
                ],
                "test_hongkong_tz_convert": [
                    "self"
                ],
                "test_tz_convert_unsorted": [
                    "self"
                ],
                "test_shift_localized": [
                    "self"
                ],
                "test_tz_aware_asfreq": [
                    "self"
                ],
                "test_static_tzinfo": [
                    "self"
                ],
                "test_tzaware_datetime_to_index": [
                    "self"
                ],
                "test_date_range_span_dst_transition": [
                    "self"
                ],
                "test_convert_datetime_list": [
                    "self"
                ],
                "test_frame_from_records_utc": [
                    "self"
                ],
                "test_frame_reset_index": [
                    "self"
                ],
                "test_dateutil_tzoffset_support": [
                    "self"
                ],
                "test_getitem_pydatetime_tz": [
                    "self"
                ],
                "test_index_drop_dont_lose_tz": [
                    "self"
                ],
                "test_datetimeindex_tz": [
                    "self"
                ],
                "test_datetimeindex_tz_nat": [
                    "self"
                ]
            },
            "TestTimeZoneSupportDateutil": {
                "setUp": [
                    "self"
                ],
                "tz": [
                    "self",
                    "tz"
                ],
                "tzstr": [
                    "self",
                    "tz"
                ],
                "cmptz": [
                    "self",
                    "tz1",
                    "tz2"
                ],
                "localize": [
                    "self",
                    "tz",
                    "x"
                ],
                "test_utc_with_system_utc": [
                    "self"
                ],
                "test_tslib_tz_convert_trans_pos_plus_1__bug": [
                    "self"
                ],
                "test_tslib_tz_convert_dst": [
                    "self"
                ]
            },
            "TestTimeZoneCacheKey": {
                "test_cache_keys_are_distinct_for_pytz_vs_dateutil": [
                    "self"
                ]
            },
            "TestTimeZones": {
                "setUp": [
                    "self"
                ],
                "test_index_equals_with_tz": [
                    "self"
                ],
                "test_tz_localize_naive": [
                    "self"
                ],
                "test_tz_localize_roundtrip": [
                    "self"
                ],
                "test_series_frame_tz_localize": [
                    "self"
                ],
                "test_series_frame_tz_convert": [
                    "self"
                ],
                "test_tz_convert_roundtrip": [
                    "self"
                ],
                "test_join_utc_convert": [
                    "self"
                ],
                "test_join_aware": [
                    "self"
                ],
                "test_align_aware": [
                    "self"
                ],
                "test_append_aware": [
                    "self"
                ],
                "test_append_aware_naive": [
                    "self"
                ],
                "test_equal_join_ensure_utc": [
                    "self"
                ],
                "test_arith_utc_convert": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_timestamp_equality_different_timezones": [
                    "self"
                ],
                "test_datetimeindex_tz": [
                    "self"
                ],
                "test_normalize_tz": [
                    "self"
                ],
                "test_tzaware_offset": [
                    "self"
                ],
                "test_nat": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_resample": {
            "_simple_ts": [
                "start",
                "end",
                "freq"
            ],
            "_simple_pts": [
                "start",
                "end",
                "freq"
            ],
            "TestResample": {
                "setUp": [
                    "self"
                ],
                "test_custom_grouper": [
                    "self"
                ],
                "test_resample_basic": [
                    "self"
                ],
                "test_resample_how": [
                    "self"
                ],
                "test_resample_how_callables": [
                    "self"
                ],
                "test_resample_with_timedeltas": [
                    "self"
                ],
                "test_resample_rounding": [
                    "self"
                ],
                "test_resample_basic_from_daily": [
                    "self"
                ],
                "test_resample_upsampling_picked_but_not_correct": [
                    "self"
                ],
                "test_resample_frame_basic": [
                    "self"
                ],
                "test_resample_loffset": [
                    "self"
                ],
                "test_resample_upsample": [
                    "self"
                ],
                "test_upsample_with_limit": [
                    "self"
                ],
                "test_resample_ohlc": [
                    "self"
                ],
                "test_resample_ohlc_dataframe": [
                    "self"
                ],
                "test_resample_dup_index": [
                    "self"
                ],
                "test_resample_reresample": [
                    "self"
                ],
                "test_resample_timestamp_to_period": [
                    "self"
                ],
                "test_ohlc_5min": [
                    "self"
                ],
                "test_downsample_non_unique": [
                    "self"
                ],
                "test_asfreq_non_unique": [
                    "self"
                ],
                "test_resample_axis1": [
                    "self"
                ],
                "test_resample_panel": [
                    "self"
                ],
                "test_resample_panel_numpy": [
                    "self"
                ],
                "test_resample_anchored_ticks": [
                    "self"
                ],
                "test_resample_single_group": [
                    "self"
                ],
                "test_resample_base": [
                    "self"
                ],
                "test_resample_daily_anchored": [
                    "self"
                ],
                "test_resample_to_period_monthly_buglet": [
                    "self"
                ],
                "test_resample_empty": [
                    "self"
                ],
                "test_weekly_resample_buglet": [
                    "self"
                ],
                "test_monthly_resample_error": [
                    "self"
                ],
                "test_resample_anchored_intraday": [
                    "self"
                ],
                "test_resample_anchored_monthstart": [
                    "self"
                ],
                "test_corner_cases": [
                    "self"
                ],
                "test_anchored_lowercase_buglet": [
                    "self"
                ],
                "test_upsample_apply_functions": [
                    "self"
                ],
                "test_resample_not_monotonic": [
                    "self"
                ],
                "test_resample_median_bug_1688": [
                    "self"
                ],
                "test_how_lambda_functions": [
                    "self"
                ],
                "test_resample_unequal_times": [
                    "self"
                ],
                "test_resample_consistency": [
                    "self"
                ],
                "test_resample_timegrouper": [
                    "self"
                ]
            },
            "TestResamplePeriodIndex": {
                "test_annual_upsample_D_s_f": [
                    "self"
                ],
                "test_annual_upsample_D_e_f": [
                    "self"
                ],
                "test_annual_upsample_D_s_b": [
                    "self"
                ],
                "test_annual_upsample_D_e_b": [
                    "self"
                ],
                "test_annual_upsample_B_s_f": [
                    "self"
                ],
                "test_annual_upsample_B_e_f": [
                    "self"
                ],
                "test_annual_upsample_B_s_b": [
                    "self"
                ],
                "test_annual_upsample_B_e_b": [
                    "self"
                ],
                "test_annual_upsample_M_s_f": [
                    "self"
                ],
                "test_annual_upsample_M_e_f": [
                    "self"
                ],
                "test_annual_upsample_M_s_b": [
                    "self"
                ],
                "test_annual_upsample_M_e_b": [
                    "self"
                ],
                "_check_annual_upsample_cases": [
                    "self",
                    "targ",
                    "conv",
                    "meth",
                    "end"
                ],
                "test_basic_downsample": [
                    "self"
                ],
                "test_not_subperiod": [
                    "self"
                ],
                "test_basic_upsample": [
                    "self"
                ],
                "test_upsample_with_limit": [
                    "self"
                ],
                "test_annual_upsample": [
                    "self"
                ],
                "test_quarterly_upsample": [
                    "self"
                ],
                "test_monthly_upsample": [
                    "self"
                ],
                "test_fill_method_and_how_upsample": [
                    "self"
                ],
                "test_weekly_upsample": [
                    "self"
                ],
                "test_resample_to_timestamps": [
                    "self"
                ],
                "test_resample_to_quarterly": [
                    "self"
                ],
                "test_resample_fill_missing": [
                    "self"
                ],
                "test_cant_fill_missing_dups": [
                    "self"
                ],
                "test_resample_5minute": [
                    "self"
                ],
                "test_upsample_daily_business_daily": [
                    "self"
                ],
                "test_resample_empty": [
                    "self"
                ],
                "test_resample_irregular_sparse": [
                    "self"
                ],
                "test_resample_weekly_all_na": [
                    "self"
                ],
                "test_resample_tz_localized": [
                    "self"
                ],
                "test_closed_left_corner": [
                    "self"
                ],
                "test_quarterly_resampling": [
                    "self"
                ],
                "test_resample_weekly_bug_1726": [
                    "self"
                ],
                "test_resample_bms_2752": [
                    "self"
                ],
                "test_default_right_closed_label": [
                    "self"
                ],
                "test_default_left_closed_label": [
                    "self"
                ],
                "test_all_values_single_bin": [
                    "self"
                ],
                "test_evenly_divisible_with_no_extra_bins": [
                    "self"
                ]
            },
            "TestTimeGrouper": {
                "setUp": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_numpy_reduction": [
                    "self"
                ],
                "test_apply_iteration": [
                    "self"
                ],
                "test_panel_aggregation": [
                    "self"
                ],
                "test_fails_on_no_datetime_index": [
                    "self"
                ],
                "test_aggregate_normal": [
                    "self"
                ],
                "test_aggregate_with_nat": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_timeseries_legacy": {
            "LegacySupport": {
                "setUpClass": [
                    "cls"
                ],
                "test_pass_offset_warn": [
                    "self"
                ],
                "test_unpickle_legacy_frame": [
                    "self"
                ],
                "test_unpickle_legacy_series": [
                    "self"
                ],
                "test_unpickle_legacy_len0_daterange": [
                    "self"
                ],
                "test_arithmetic_interaction": [
                    "self"
                ],
                "test_join_interaction": [
                    "self"
                ],
                "test_join_nonunique": [
                    "self"
                ],
                "test_unpickle_daterange": [
                    "self"
                ],
                "test_setops": [
                    "self"
                ],
                "test_index_conversion": [
                    "self"
                ],
                "test_tolist": [
                    "self"
                ],
                "test_object_convert_fail": [
                    "self"
                ],
                "test_setops_conversion_fail": [
                    "self"
                ],
                "test_legacy_time_rules": [
                    "self"
                ],
                "test_ms_vs_MS": [
                    "self"
                ],
                "test_rule_aliases": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_holiday": {
            "TestCalendar": {
                "setUp": [
                    "self"
                ],
                "test_calendar": [
                    "self"
                ]
            },
            "TestHoliday": {
                "setUp": [
                    "self"
                ],
                "test_usmemorialday": [
                    "self"
                ],
                "test_non_observed_holiday": [
                    "self"
                ],
                "test_easter": [
                    "self"
                ],
                "test_usthanksgivingday": [
                    "self"
                ],
                "test_argument_types": [
                    "self"
                ],
                "test_special_holidays": [
                    "self"
                ],
                "test_get_calendar": [
                    "self"
                ],
                "test_factory": [
                    "self"
                ]
            },
            "TestObservanceRules": {
                "setUp": [
                    "self"
                ],
                "test_next_monday": [
                    "self"
                ],
                "test_next_monday_or_tuesday": [
                    "self"
                ],
                "test_previous_friday": [
                    "self"
                ],
                "test_sunday_to_monday": [
                    "self"
                ],
                "test_nearest_workday": [
                    "self"
                ],
                "test_weekend_to_monday": [
                    "self"
                ],
                "test_next_workday": [
                    "self"
                ],
                "test_previous_workday": [
                    "self"
                ],
                "test_before_nearest_workday": [
                    "self"
                ],
                "test_after_nearest_workday": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_plotting": {
            "_check_plot_works": [
                "f",
                "freq",
                "series"
            ],
            "TestTSPlot": {
                "setUp": [
                    "self"
                ],
                "tearDown": [
                    "self"
                ],
                "test_ts_plot_with_tz": [
                    "self"
                ],
                "test_frame_inferred": [
                    "self"
                ],
                "test_nonnumeric_exclude": [
                    "self"
                ],
                "test_tsplot": [
                    "self"
                ],
                "test_both_style_and_color": [
                    "self"
                ],
                "test_high_freq": [
                    "self"
                ],
                "test_get_datevalue": [
                    "self"
                ],
                "test_ts_plot_format_coord": [
                    "self"
                ],
                "test_line_plot_period_series": [
                    "self"
                ],
                "test_line_plot_datetime_series": [
                    "self"
                ],
                "test_line_plot_period_frame": [
                    "self"
                ],
                "test_line_plot_datetime_frame": [
                    "self"
                ],
                "test_line_plot_inferred_freq": [
                    "self"
                ],
                "test_fake_inferred_business": [
                    "self"
                ],
                "test_plot_offset_freq": [
                    "self"
                ],
                "test_plot_multiple_inferred_freq": [
                    "self"
                ],
                "test_uhf": [
                    "self"
                ],
                "test_irreg_hf": [
                    "self"
                ],
                "test_irregular_datetime64_repr_bug": [
                    "self"
                ],
                "test_business_freq": [
                    "self"
                ],
                "test_business_freq_convert": [
                    "self"
                ],
                "test_nonzero_base": [
                    "self"
                ],
                "test_dataframe": [
                    "self"
                ],
                "test_axis_limits": [
                    "self"
                ],
                "test_get_finder": [
                    "self"
                ],
                "test_finder_daily": [
                    "self"
                ],
                "test_finder_quarterly": [
                    "self"
                ],
                "test_finder_monthly": [
                    "self"
                ],
                "test_finder_monthly_long": [
                    "self"
                ],
                "test_finder_annual": [
                    "self"
                ],
                "test_finder_minutely": [
                    "self"
                ],
                "test_finder_hourly": [
                    "self"
                ],
                "test_gaps": [
                    "self"
                ],
                "test_gap_upsample": [
                    "self"
                ],
                "test_secondary_y": [
                    "self"
                ],
                "test_secondary_y_ts": [
                    "self"
                ],
                "test_secondary_kde": [
                    "self"
                ],
                "test_secondary_bar": [
                    "self"
                ],
                "test_secondary_frame": [
                    "self"
                ],
                "test_secondary_bar_frame": [
                    "self"
                ],
                "test_mixed_freq_regular_first": [
                    "self"
                ],
                "test_mixed_freq_irregular_first": [
                    "self"
                ],
                "test_mixed_freq_hf_first": [
                    "self"
                ],
                "test_mixed_freq_alignment": [
                    "self"
                ],
                "test_mixed_freq_lf_first": [
                    "self"
                ],
                "test_mixed_freq_irreg_period": [
                    "self"
                ],
                "test_to_weekly_resampling": [
                    "self"
                ],
                "test_from_weekly_resampling": [
                    "self"
                ],
                "test_from_resampling_area_line_mixed": [
                    "self"
                ],
                "test_mixed_freq_second_millisecond": [
                    "self"
                ],
                "test_irreg_dtypes": [
                    "self"
                ],
                "test_time": [
                    "self"
                ],
                "test_time_musec": [
                    "self"
                ],
                "test_secondary_upsample": [
                    "self"
                ],
                "test_secondary_legend": [
                    "self"
                ],
                "test_format_date_axis": [
                    "self"
                ],
                "test_ax_plot": [
                    "self"
                ],
                "test_mpl_nopandas": [
                    "self"
                ],
                "test_irregular_ts_shared_ax_xlim": [
                    "self"
                ],
                "test_secondary_y_non_ts_xlim": [
                    "self"
                ],
                "test_secondary_y_regular_ts_xlim": [
                    "self"
                ],
                "test_secondary_y_mixed_freq_ts_xlim": [
                    "self"
                ],
                "test_secondary_y_irregular_ts_xlim": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_converter": {
            "test_timtetonum_accepts_unicode": [],
            "TestDateTimeConverter": {
                "setUp": [
                    "self"
                ],
                "test_convert_accepts_unicode": [
                    "self"
                ],
                "test_conversion": [
                    "self"
                ],
                "test_conversion_float": [
                    "self"
                ],
                "test_time_formatter": [
                    "self"
                ],
                "test_dateindex_conversion": [
                    "self"
                ],
                "test_resolution": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_tslib": {
            "TestTimestamp": {
                "test_constructor": [
                    "self"
                ],
                "test_constructor_with_stringoffset": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_bounds_with_different_units": [
                    "self"
                ],
                "test_tz": [
                    "self"
                ],
                "test_tz_localize_ambiguous": [
                    "self"
                ],
                "test_tz_localize_roundtrip": [
                    "self"
                ],
                "test_tz_convert_roundtrip": [
                    "self"
                ],
                "test_barely_oob_dts": [
                    "self"
                ]
            },
            "TestDatetimeParsingWrappers": {
                "test_does_not_convert_mixed_integer": [
                    "self"
                ]
            },
            "TestArrayToDatetime": {
                "test_parsing_valid_dates": [
                    "self"
                ],
                "test_number_looking_strings_not_into_datetime": [
                    "self"
                ],
                "test_coercing_dates_outside_of_datetime64_ns_bounds": [
                    "self"
                ],
                "test_coerce_of_invalid_datetimes": [
                    "self"
                ],
                "test_parsing_timezone_offsets": [
                    "self"
                ]
            },
            "TestTimestampNsOperations": {
                "setUp": [
                    "self"
                ],
                "assert_ns_timedelta": [
                    "self",
                    "modified_timestamp",
                    "expected_value"
                ],
                "test_timedelta_ns_arithmetic": [
                    "self"
                ],
                "test_timedelta_ns_based_arithmetic": [
                    "self"
                ],
                "test_timedelta_us_arithmetic": [
                    "self"
                ],
                "test_timedelta_ms_arithmetic": [
                    "self"
                ],
                "test_nanosecond_string_parsing": [
                    "self"
                ],
                "test_nanosecond_timestamp": [
                    "self"
                ],
                "test_nat_arithmetic": [
                    "self"
                ]
            },
            "TestTslib": {
                "test_intraday_conversion_factors": [
                    "self"
                ],
                "test_period_ordinal_start_values": [
                    "self"
                ],
                "test_period_ordinal_week": [
                    "self"
                ],
                "test_period_ordinal_business_day": [
                    "self"
                ],
                "test_tslib_tz_convert": [
                    "self"
                ]
            },
            "TestTimestampOps": {
                "test_timestamp_and_datetime": [
                    "self"
                ],
                "test_timestamp_and_series": [
                    "self"
                ],
                "test_addition_subtraction_types": [
                    "self"
                ],
                "test_addition_subtraction_preserve_frequency": [
                    "self"
                ],
                "test_resolution": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_offsets": {
            "test_monthrange": [],
            "test_format": [],
            "test_ole2datetime": [],
            "test_to_datetime1": [],
            "test_normalize_date": [],
            "test_to_m8": [],
            "assertOnOffset": [
                "offset",
                "date",
                "expected"
            ],
            "makeFY5253LastOfMonthQuarter": [],
            "makeFY5253NearestEndMonthQuarter": [],
            "makeFY5253NearestEndMonth": [],
            "makeFY5253LastOfMonth": [],
            "assertEq": [
                "offset",
                "base",
                "expected"
            ],
            "test_Easter": [],
            "test_Hour": [],
            "test_Minute": [],
            "test_Second": [],
            "test_Millisecond": [],
            "test_MillisecondTimestampArithmetic": [],
            "test_Microsecond": [],
            "test_NanosecondGeneric": [],
            "test_Nanosecond": [],
            "test_tick_offset": [],
            "test_compare_ticks": [],
            "test_get_offset": [],
            "test_parse_time_string": [],
            "test_get_standard_freq": [],
            "test_quarterly_dont_normalize": [],
            "test_apply_ticks": [],
            "test_delta_to_tick": [],
            "test_dateoffset_misc": [],
            "test_freq_offsets": [],
            "get_all_subclasses": [
                "cls"
            ],
            "get_utc_offset_hours": [
                "ts"
            ],
            "Base": {
                "offset_types": [
                    "self"
                ],
                "_get_offset": [
                    "self",
                    "klass",
                    "value",
                    "normalize"
                ],
                "test_apply_out_of_range": [
                    "self"
                ]
            },
            "TestCommon": {
                "setUp": [
                    "self"
                ],
                "test_return_type": [
                    "self"
                ],
                "_check_offsetfunc_works": [
                    "self",
                    "offset",
                    "funcname",
                    "dt",
                    "expected",
                    "normalize"
                ],
                "test_apply": [
                    "self"
                ],
                "test_rollforward": [
                    "self"
                ],
                "test_rollback": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_add": [
                    "self"
                ]
            },
            "TestDateOffset": {
                "setUp": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_eq": [
                    "self"
                ]
            },
            "TestBusinessDay": {
                "setUp": [
                    "self"
                ],
                "test_different_normalize_equals": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_with_offset": [
                    "self"
                ],
                "testEQ": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_hash": [
                    "self"
                ],
                "testCall": [
                    "self"
                ],
                "testRAdd": [
                    "self"
                ],
                "testSub": [
                    "self"
                ],
                "testRSub": [
                    "self"
                ],
                "testMult1": [
                    "self"
                ],
                "testMult2": [
                    "self"
                ],
                "testRollback1": [
                    "self"
                ],
                "testRollback2": [
                    "self"
                ],
                "testRollforward1": [
                    "self"
                ],
                "testRollforward2": [
                    "self"
                ],
                "test_roll_date_object": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_large_n": [
                    "self"
                ],
                "test_apply_corner": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestCustomBusinessDay": {
                "setUp": [
                    "self"
                ],
                "test_different_normalize_equals": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_with_offset": [
                    "self"
                ],
                "testEQ": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_hash": [
                    "self"
                ],
                "testCall": [
                    "self"
                ],
                "testRAdd": [
                    "self"
                ],
                "testSub": [
                    "self"
                ],
                "testRSub": [
                    "self"
                ],
                "testMult1": [
                    "self"
                ],
                "testMult2": [
                    "self"
                ],
                "testRollback1": [
                    "self"
                ],
                "testRollback2": [
                    "self"
                ],
                "testRollforward1": [
                    "self"
                ],
                "testRollforward2": [
                    "self"
                ],
                "test_roll_date_object": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_large_n": [
                    "self"
                ],
                "test_apply_corner": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ],
                "test_holidays": [
                    "self"
                ],
                "test_weekmask": [
                    "self"
                ],
                "test_weekmask_and_holidays": [
                    "self"
                ],
                "test_calendar": [
                    "self"
                ],
                "test_roundtrip_pickle": [
                    "self"
                ],
                "test_pickle_compat_0_14_1": [
                    "self"
                ]
            },
            "CustomBusinessMonthBase": {
                "setUp": [
                    "self"
                ],
                "testEQ": [
                    "self"
                ],
                "test_mul": [
                    "self"
                ],
                "test_hash": [
                    "self"
                ],
                "testRAdd": [
                    "self"
                ],
                "testSub": [
                    "self"
                ],
                "testRSub": [
                    "self"
                ],
                "testMult1": [
                    "self"
                ],
                "testMult2": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ],
                "test_roundtrip_pickle": [
                    "self"
                ]
            },
            "TestCustomBusinessMonthEnd": {
                "test_different_normalize_equals": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "testCall": [
                    "self"
                ],
                "testRollback1": [
                    "self"
                ],
                "testRollback2": [
                    "self"
                ],
                "testRollforward1": [
                    "self"
                ],
                "test_roll_date_object": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_large_n": [
                    "self"
                ],
                "test_holidays": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ]
            },
            "TestCustomBusinessMonthBegin": {
                "test_different_normalize_equals": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "testCall": [
                    "self"
                ],
                "testRollback1": [
                    "self"
                ],
                "testRollback2": [
                    "self"
                ],
                "testRollforward1": [
                    "self"
                ],
                "test_roll_date_object": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_large_n": [
                    "self"
                ],
                "test_holidays": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ]
            },
            "TestWeek": {
                "test_repr": [
                    "self"
                ],
                "test_corner": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestWeekOfMonth": {
                "test_constructor": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestLastWeekOfMonth": {
                "test_constructor": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBMonthBegin": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestBMonthEnd": {
                "test_offset": [
                    "self"
                ],
                "test_normalize": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_offsets_compare_equal": [
                    "self"
                ]
            },
            "TestMonthBegin": {
                "test_offset": [
                    "self"
                ]
            },
            "TestMonthEnd": {
                "test_offset": [
                    "self"
                ],
                "test_normalize": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBQuarterBegin": {
                "test_repr": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestBQuarterEnd": {
                "test_repr": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestFY5253LastOfMonth": {
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ]
            },
            "TestFY5253NearestEndMonth": {
                "test_get_target_month_end": [
                    "self"
                ],
                "test_get_year_end": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ]
            },
            "TestFY5253LastOfMonthQuarter": {
                "test_isAnchored": [
                    "self"
                ],
                "test_equality": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ],
                "test_year_has_extra_week": [
                    "self"
                ],
                "test_get_weeks": [
                    "self"
                ]
            },
            "TestFY5253NearestEndMonthQuarter": {
                "test_onOffset": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestQuarterBegin": {
                "test_repr": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestQuarterEnd": {
                "test_repr": [
                    "self"
                ],
                "test_isAnchored": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearBegin": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ]
            },
            "TestYearBegin": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearEndLagged": {
                "test_bad_month_fail": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_roll": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestBYearEnd": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestYearEnd": {
                "test_misspecified": [
                    "self"
                ],
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestYearEndDiffMonth": {
                "test_offset": [
                    "self"
                ],
                "test_onOffset": [
                    "self"
                ]
            },
            "TestOffsetNames": {
                "test_get_offset_name": [
                    "self"
                ]
            },
            "TestOffsetAliases": {
                "setUp": [
                    "self"
                ],
                "test_alias_equality": [
                    "self"
                ],
                "test_rule_code": [
                    "self"
                ]
            },
            "TestCaching": {
                "setUp": [
                    "self"
                ],
                "run_X_index_creation": [
                    "self",
                    "cls"
                ],
                "test_should_cache_month_end": [
                    "self"
                ],
                "test_should_cache_bmonth_end": [
                    "self"
                ],
                "test_should_cache_week_month": [
                    "self"
                ],
                "test_all_cacheableoffsets": [
                    "self"
                ],
                "test_month_end_index_creation": [
                    "self"
                ],
                "test_bmonth_end_index_creation": [
                    "self"
                ],
                "test_week_of_month_index_creation": [
                    "self"
                ]
            },
            "TestReprNames": {
                "test_str_for_named_is_name": [
                    "self"
                ]
            },
            "TestDST": {
                "_test_all_offsets": [
                    "self",
                    "n"
                ],
                "_test_offset": [
                    "self",
                    "offset_name",
                    "offset_n",
                    "tstart",
                    "expected_utc_offset"
                ],
                "_make_timestamp": [
                    "self",
                    "string",
                    "hrs_offset",
                    "tz"
                ],
                "test_fallback_plural": [
                    "self"
                ],
                "test_springforward_plural": [
                    "self"
                ],
                "test_fallback_singular": [
                    "self"
                ],
                "test_springforward_singular": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests.test_daterange": {
            "_skip_if_windows_python_3": [],
            "eq_gen_range": [
                "kwargs",
                "expected"
            ],
            "TestGenRangeGeneration": {
                "test_generate": [
                    "self"
                ],
                "test_generate_cday": [
                    "self"
                ],
                "test_1": [
                    "self"
                ],
                "test_2": [
                    "self"
                ],
                "test_3": [
                    "self"
                ]
            },
            "TestDateRange": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_naive_aware_conflicts": [
                    "self"
                ],
                "test_cached_range": [
                    "self"
                ],
                "test_cached_range_bug": [
                    "self"
                ],
                "test_timezone_comparaison_bug": [
                    "self"
                ],
                "test_timezone_comparaison_assert": [
                    "self"
                ],
                "test_comparison": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getitem_matplotlib_hackaround": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_pickle_unpickle": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_outer_join": [
                    "self"
                ],
                "test_union_not_cacheable": [
                    "self"
                ],
                "test_intersection": [
                    "self"
                ],
                "test_intersection_bug": [
                    "self"
                ],
                "test_summary": [
                    "self"
                ],
                "test_summary_pytz": [
                    "self"
                ],
                "test_summary_dateutil": [
                    "self"
                ],
                "test_misc": [
                    "self"
                ],
                "test_date_parse_failure": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_identical": [
                    "self"
                ],
                "test_daterange_bug_456": [
                    "self"
                ],
                "test_error_with_zero_monthends": [
                    "self"
                ],
                "test_range_bug": [
                    "self"
                ],
                "test_range_tz_pytz": [
                    "self"
                ],
                "test_range_tz_dst_straddle_pytz": [
                    "self"
                ],
                "test_range_tz_dateutil": [
                    "self"
                ],
                "test_month_range_union_tz_pytz": [
                    "self"
                ],
                "test_month_range_union_tz_dateutil": [
                    "self"
                ],
                "test_range_closed": [
                    "self"
                ],
                "test_years_only": [
                    "self"
                ]
            },
            "TestCustomDateRange": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_cached_range": [
                    "self"
                ],
                "test_comparison": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getitem_matplotlib_hackaround": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_pickle_unpickle": [
                    "self"
                ],
                "test_union": [
                    "self"
                ],
                "test_outer_join": [
                    "self"
                ],
                "test_intersection_bug": [
                    "self"
                ],
                "test_summary": [
                    "self"
                ],
                "test_summary_pytz": [
                    "self"
                ],
                "test_summary_dateutil": [
                    "self"
                ],
                "test_misc": [
                    "self"
                ],
                "test_date_parse_failure": [
                    "self"
                ],
                "test_equals": [
                    "self"
                ],
                "test_daterange_bug_456": [
                    "self"
                ],
                "test_cdaterange": [
                    "self"
                ],
                "test_cdaterange_weekmask": [
                    "self"
                ],
                "test_cdaterange_holidays": [
                    "self"
                ],
                "test_cdaterange_weekmask_and_holidays": [
                    "self"
                ]
            }
        },
        "pandas.tseries.tests": {},
        "pandas.sparse.list": {
            "_concat_sparse_indexes": [
                "indexes"
            ],
            "SparseList": {
                "__init__": [
                    "self",
                    "data",
                    "fill_value"
                ],
                "__unicode__": [
                    "self"
                ],
                "__len__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "i"
                ],
                "__setitem__": [
                    "self",
                    "i",
                    "value"
                ],
                "nchunks": [
                    "self"
                ],
                "is_consolidated": [
                    "self"
                ],
                "consolidate": [
                    "self",
                    "inplace"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "to_array": [
                    "self"
                ],
                "append": [
                    "self",
                    "value"
                ]
            }
        },
        "pandas.sparse.frame": {
            "dict_to_manager": [
                "sdict",
                "columns",
                "index"
            ],
            "stack_sparse_frame": [
                "frame"
            ],
            "homogenize": [
                "series_dict"
            ],
            "SparseDataFrame": {
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "default_kind",
                    "default_fill_value",
                    "dtype",
                    "copy"
                ],
                "_constructor": [
                    "self"
                ],
                "_init_dict": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype"
                ],
                "_init_matrix": [
                    "self",
                    "data",
                    "index",
                    "columns",
                    "dtype"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "__getstate__": [
                    "self"
                ],
                "_unpickle_sparse_frame_compat": [
                    "self",
                    "state"
                ],
                "to_dense": [
                    "self"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "default_fill_value": [
                    "self"
                ],
                "default_kind": [
                    "self"
                ],
                "density": [
                    "self"
                ],
                "fillna": [
                    "self",
                    "value",
                    "method",
                    "axis",
                    "inplace",
                    "limit",
                    "downcast"
                ],
                "_sanitize_column": [
                    "self",
                    "key",
                    "value"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "get_value": [
                    "self",
                    "index",
                    "col",
                    "takeable"
                ],
                "set_value": [
                    "self",
                    "index",
                    "col",
                    "value",
                    "takeable"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis",
                    "typ"
                ],
                "xs": [
                    "self",
                    "key",
                    "axis",
                    "copy"
                ],
                "_combine_frame": [
                    "self",
                    "other",
                    "func",
                    "fill_value",
                    "level"
                ],
                "_combine_match_index": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "_combine_match_columns": [
                    "self",
                    "other",
                    "func",
                    "level",
                    "fill_value"
                ],
                "_combine_const": [
                    "self",
                    "other",
                    "func"
                ],
                "_reindex_index": [
                    "self",
                    "index",
                    "method",
                    "copy",
                    "level",
                    "fill_value",
                    "limit",
                    "takeable"
                ],
                "_reindex_columns": [
                    "self",
                    "columns",
                    "copy",
                    "level",
                    "fill_value",
                    "limit",
                    "takeable"
                ],
                "_reindex_with_indexers": [
                    "self",
                    "reindexers",
                    "method",
                    "fill_value",
                    "limit",
                    "copy",
                    "allow_dups"
                ],
                "_join_compat": [
                    "self",
                    "other",
                    "on",
                    "how",
                    "lsuffix",
                    "rsuffix",
                    "sort"
                ],
                "_join_index": [
                    "self",
                    "other",
                    "how",
                    "lsuffix",
                    "rsuffix"
                ],
                "_maybe_rename_join": [
                    "self",
                    "other",
                    "lsuffix",
                    "rsuffix"
                ],
                "transpose": [
                    "self"
                ],
                "count": [
                    "self",
                    "axis"
                ],
                "cumsum": [
                    "self",
                    "axis"
                ],
                "apply": [
                    "self",
                    "func",
                    "axis",
                    "broadcast",
                    "reduce"
                ],
                "applymap": [
                    "self",
                    "func"
                ]
            }
        },
        "pandas.sparse.panel": {
            "_convert_frames": [
                "frames",
                "index",
                "columns",
                "fill_value",
                "kind"
            ],
            "_stack_sparse_info": [
                "frame"
            ],
            "SparsePanelAxis": {
                "__init__": [
                    "self",
                    "cache_field",
                    "frame_attr"
                ],
                "__get__": [
                    "self",
                    "obj",
                    "type"
                ],
                "__set__": [
                    "self",
                    "obj",
                    "value"
                ]
            },
            "SparsePanel": {
                "__init__": [
                    "self",
                    "frames",
                    "items",
                    "major_axis",
                    "minor_axis",
                    "default_fill_value",
                    "default_kind",
                    "copy"
                ],
                "_consolidate_inplace": [
                    "self"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "from_dict": [
                    "cls",
                    "data"
                ],
                "to_dense": [
                    "self"
                ],
                "as_matrix": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "_get_items": [
                    "self"
                ],
                "_set_items": [
                    "self",
                    "new_items"
                ],
                "_ixs": [
                    "self",
                    "i",
                    "axis"
                ],
                "_slice": [
                    "self",
                    "slobj",
                    "axis",
                    "typ"
                ],
                "_get_item_cache": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "set_value": [
                    "self",
                    "item",
                    "major",
                    "minor",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "__getstate__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "to_frame": [
                    "self",
                    "filter_observations"
                ],
                "reindex": [
                    "self",
                    "major",
                    "items",
                    "minor",
                    "major_axis",
                    "minor_axis",
                    "copy"
                ],
                "_combine": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_combineFrame": [
                    "self",
                    "other",
                    "func",
                    "axis"
                ],
                "_new_like": [
                    "self",
                    "new_frames"
                ],
                "_combinePanel": [
                    "self",
                    "other",
                    "func"
                ],
                "major_xs": [
                    "self",
                    "key"
                ],
                "minor_xs": [
                    "self",
                    "key"
                ],
                "pow": [
                    "self",
                    "val"
                ],
                "mod": [
                    "self",
                    "val"
                ]
            }
        },
        "pandas.sparse.api": {},
        "pandas.sparse.series": {
            "_arith_method": [
                "op",
                "name",
                "str_rep",
                "default_axis",
                "fill_zeros"
            ],
            "_sparse_series_op": [
                "left",
                "right",
                "op",
                "name"
            ],
            "SparseSeries": {
                "__init__": [
                    "self",
                    "data",
                    "index",
                    "sparse_index",
                    "kind",
                    "fill_value",
                    "name",
                    "dtype",
                    "copy",
                    "fastpath"
                ],
                "values": [
                    "self"
                ],
                "__array__": [
                    "self",
                    "result"
                ],
                "get_values": [
                    "self"
                ],
                "block": [
                    "self"
                ],
                "fill_value": [
                    "self",
                    "v"
                ],
                "sp_index": [
                    "self"
                ],
                "sp_values": [
                    "self"
                ],
                "npoints": [
                    "self"
                ],
                "from_array": [
                    "cls",
                    "arr",
                    "index",
                    "name",
                    "copy",
                    "fill_value",
                    "fastpath"
                ],
                "_constructor": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "as_sparse_array": [
                    "self",
                    "kind",
                    "fill_value",
                    "copy"
                ],
                "__len__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "__array_wrap__": [
                    "self",
                    "result"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "_reduce": [
                    "self",
                    "op",
                    "name",
                    "axis",
                    "skipna",
                    "numeric_only",
                    "filter_type"
                ],
                "__getstate__": [
                    "self"
                ],
                "_unpickle_series_compat": [
                    "self",
                    "state"
                ],
                "__iter__": [
                    "self"
                ],
                "_set_subtyp": [
                    "self",
                    "is_all_dates"
                ],
                "_get_val_at": [
                    "self",
                    "loc"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "_set_with_engine": [
                    "self",
                    "key",
                    "value"
                ],
                "abs": [
                    "self"
                ],
                "get": [
                    "self",
                    "label",
                    "default"
                ],
                "get_value": [
                    "self",
                    "label",
                    "takeable"
                ],
                "set_value": [
                    "self",
                    "label",
                    "value",
                    "takeable"
                ],
                "_set_values": [
                    "self",
                    "key",
                    "value"
                ],
                "to_dense": [
                    "self",
                    "sparse_only"
                ],
                "density": [
                    "self"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "reindex": [
                    "self",
                    "index",
                    "method",
                    "copy",
                    "limit"
                ],
                "sparse_reindex": [
                    "self",
                    "new_index"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis",
                    "convert"
                ],
                "cumsum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "dropna": [
                    "self",
                    "axis",
                    "inplace"
                ],
                "shift": [
                    "self",
                    "periods",
                    "freq"
                ],
                "combine_first": [
                    "self",
                    "other"
                ]
            }
        },
        "pandas.sparse": {},
        "pandas.sparse.array": {
            "_arith_method": [
                "op",
                "name",
                "str_rep",
                "default_axis",
                "fill_zeros"
            ],
            "_sparse_array_op": [
                "left",
                "right",
                "op",
                "name"
            ],
            "_sparse_nanop": [
                "this",
                "other",
                "name"
            ],
            "_sparse_fillop": [
                "this",
                "other",
                "name"
            ],
            "_maybe_to_dense": [
                "obj"
            ],
            "_maybe_to_sparse": [
                "array"
            ],
            "make_sparse": [
                "arr",
                "kind",
                "fill_value"
            ],
            "SparseArray": {
                "__new__": [
                    "cls",
                    "data",
                    "sparse_index",
                    "index",
                    "kind",
                    "fill_value",
                    "dtype",
                    "copy"
                ],
                "_constructor": [
                    "self"
                ],
                "kind": [
                    "self"
                ],
                "__array_finalize__": [
                    "self",
                    "obj"
                ],
                "__reduce__": [
                    "self"
                ],
                "__setstate__": [
                    "self",
                    "state"
                ],
                "__len__": [
                    "self"
                ],
                "__unicode__": [
                    "self"
                ],
                "disable": [
                    "self",
                    "other"
                ],
                "values": [
                    "self"
                ],
                "sp_values": [
                    "self"
                ],
                "get_values": [
                    "self",
                    "fill"
                ],
                "to_dense": [
                    "self",
                    "fill"
                ],
                "__iter__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__getslice__": [
                    "self",
                    "i",
                    "j"
                ],
                "_get_val_at": [
                    "self",
                    "loc"
                ],
                "take": [
                    "self",
                    "indices",
                    "axis"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__setslice__": [
                    "self",
                    "i",
                    "j",
                    "value"
                ],
                "astype": [
                    "self",
                    "dtype"
                ],
                "copy": [
                    "self",
                    "deep"
                ],
                "count": [
                    "self"
                ],
                "_null_fill_value": [
                    "self"
                ],
                "_valid_sp_values": [
                    "self"
                ],
                "sum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "cumsum": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ],
                "mean": [
                    "self",
                    "axis",
                    "dtype",
                    "out"
                ]
            }
        },
        "pandas.sparse.tests.test_list": {
            "assert_sp_list_equal": [
                "left",
                "right"
            ],
            "TestSparseList": {
                "setUp": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_len": [
                    "self"
                ],
                "test_append_na": [
                    "self"
                ],
                "test_append_zero": [
                    "self"
                ],
                "test_consolidate": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests.test_array": {
            "assert_sp_array_equal": [
                "left",
                "right"
            ],
            "TestSparseArray": {
                "setUp": [
                    "self"
                ],
                "test_get_item": [
                    "self"
                ],
                "test_bad_take": [
                    "self"
                ],
                "test_set_item": [
                    "self"
                ],
                "test_constructor_from_sparse": [
                    "self"
                ],
                "test_constructor_copy": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_copy_shallow": [
                    "self"
                ],
                "test_values_asarray": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_getslice": [
                    "self"
                ],
                "test_binary_operators": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests.test_libsparse": {
            "check_cases": [
                "_check_case"
            ],
            "test_index_make_union": [],
            "test_lookup": [],
            "test_intersect": [],
            "make_nanoptestf": [
                "op"
            ],
            "make_optestf": [
                "op"
            ],
            "TestBlockIndex": {
                "test_equals": [
                    "self"
                ],
                "test_check_integrity": [
                    "self"
                ],
                "test_to_int_index": [
                    "self"
                ],
                "test_to_block_index": [
                    "self"
                ]
            },
            "TestIntIndex": {
                "test_equals": [
                    "self"
                ],
                "test_to_block_index": [
                    "self"
                ],
                "test_to_int_index": [
                    "self"
                ]
            },
            "TestSparseOperators": {
                "_nan_op_tests": [
                    "self",
                    "sparse_op",
                    "python_op"
                ],
                "_op_tests": [
                    "self",
                    "sparse_op",
                    "python_op"
                ]
            }
        },
        "pandas.sparse.tests.test_sparse": {
            "_test_data1": [],
            "_test_data2": [],
            "_test_data1_zero": [],
            "_test_data2_zero": [],
            "assert_sp_series_equal": [
                "a",
                "b",
                "exact_indices"
            ],
            "assert_sp_frame_equal": [
                "left",
                "right",
                "exact_indices"
            ],
            "assert_sp_panel_equal": [
                "left",
                "right",
                "exact_indices"
            ],
            "_dense_series_compare": [
                "s",
                "f"
            ],
            "_dense_frame_compare": [
                "frame",
                "f"
            ],
            "panel_data1": [],
            "panel_data2": [],
            "panel_data3": [],
            "TestSparseSeries": {
                "setUp": [
                    "self"
                ],
                "test_iteration_and_str": [
                    "self"
                ],
                "test_construct_DataFrame_with_sp_series": [
                    "self"
                ],
                "test_series_density": [
                    "self"
                ],
                "test_sparse_to_dense": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_to_dense_preserve_name": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_scalar": [
                    "self"
                ],
                "test_constructor_ndarray": [
                    "self"
                ],
                "test_constructor_nonnan": [
                    "self"
                ],
                "test_copy_astype": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_kind": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "_check_all": [
                    "self",
                    "check_func"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_get_get_value": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_getitem_slice": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setslice": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_operators_corner2": [
                    "self"
                ],
                "test_binary_operators": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_sparse_reindex": [
                    "self"
                ],
                "test_repr": [
                    "self"
                ],
                "test_iter": [
                    "self"
                ],
                "test_truncate": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_groupby": [
                    "self"
                ],
                "test_reductions": [
                    "self"
                ],
                "test_dropna": [
                    "self"
                ],
                "test_homogenize": [
                    "self"
                ],
                "test_fill_value_corner": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "test_combine_first": [
                    "self"
                ]
            },
            "TestSparseTimeSeries": {},
            "TestSparseDataFrame": {
                "setUp": [
                    "self"
                ],
                "test_as_matrix": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_constructor_ndarray": [
                    "self"
                ],
                "test_constructor_empty": [
                    "self"
                ],
                "test_constructor_dataframe": [
                    "self"
                ],
                "test_constructor_convert_index_once": [
                    "self"
                ],
                "test_constructor_from_series": [
                    "self"
                ],
                "test_dtypes": [
                    "self"
                ],
                "test_str": [
                    "self"
                ],
                "test_array_interface": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_density": [
                    "self"
                ],
                "test_sparse_to_dense": [
                    "self"
                ],
                "test_sparse_series_ops": [
                    "self"
                ],
                "test_sparse_series_ops_i": [
                    "self"
                ],
                "test_sparse_series_ops_z": [
                    "self"
                ],
                "test_sparse_series_ops_fill": [
                    "self"
                ],
                "_check_frame_ops": [
                    "self",
                    "frame"
                ],
                "test_op_corners": [
                    "self"
                ],
                "test_scalar_ops": [
                    "self"
                ],
                "test_getitem": [
                    "self"
                ],
                "test_icol": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_fancy_index_misc": [
                    "self"
                ],
                "test_getitem_overload": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_setitem_corner": [
                    "self"
                ],
                "test_setitem_array": [
                    "self"
                ],
                "test_delitem": [
                    "self"
                ],
                "test_set_columns": [
                    "self"
                ],
                "test_set_index": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_apply": [
                    "self"
                ],
                "test_apply_nonuq": [
                    "self"
                ],
                "test_applymap": [
                    "self"
                ],
                "test_astype": [
                    "self"
                ],
                "test_fillna": [
                    "self"
                ],
                "test_rename": [
                    "self"
                ],
                "test_corr": [
                    "self"
                ],
                "test_describe": [
                    "self"
                ],
                "test_join": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_reindex_fill_value": [
                    "self"
                ],
                "test_take": [
                    "self"
                ],
                "test_to_dense": [
                    "self"
                ],
                "test_stack_sparse_frame": [
                    "self"
                ],
                "test_transpose": [
                    "self"
                ],
                "test_shift": [
                    "self"
                ],
                "test_count": [
                    "self"
                ],
                "test_cumsum": [
                    "self"
                ],
                "_check_all": [
                    "self",
                    "check_func"
                ],
                "test_combine_first": [
                    "self"
                ],
                "test_combine_add": [
                    "self"
                ],
                "test_isin": [
                    "self"
                ],
                "test_sparse_pow_issue": [
                    "self"
                ],
                "test_as_blocks": [
                    "self"
                ]
            },
            "TestSparsePanel": {
                "assert_panel_equal": [
                    "cls",
                    "x",
                    "y"
                ],
                "setUp": [
                    "self"
                ],
                "_test_op": [
                    "panel",
                    "op"
                ],
                "test_constructor": [
                    "self"
                ],
                "test_from_dict": [
                    "self"
                ],
                "test_pickle": [
                    "self"
                ],
                "test_dense_to_sparse": [
                    "self"
                ],
                "test_to_dense": [
                    "self"
                ],
                "test_to_frame": [
                    "self"
                ],
                "test_long_to_wide_sparse": [
                    "self"
                ],
                "test_values": [
                    "self"
                ],
                "test_setitem": [
                    "self"
                ],
                "test_set_value": [
                    "self"
                ],
                "test_delitem_pop": [
                    "self"
                ],
                "test_copy": [
                    "self"
                ],
                "test_reindex": [
                    "self"
                ],
                "test_operators": [
                    "self"
                ],
                "test_major_xs": [
                    "self"
                ],
                "test_minor_xs": [
                    "self"
                ]
            }
        },
        "pandas.sparse.tests": {},
        "pandas.util.misc": {
            "is_little_endian": [],
            "exclusive": []
        },
        "pandas.util.testing": {
            "set_testing_mode": [],
            "reset_testing_mode": [],
            "randbool": [
                "size",
                "p"
            ],
            "rands_array": [
                "nchars",
                "size",
                "dtype"
            ],
            "randu_array": [
                "nchars",
                "size",
                "dtype"
            ],
            "rands": [
                "nchars"
            ],
            "randu": [
                "nchars"
            ],
            "choice": [
                "x",
                "size"
            ],
            "close": [
                "fignum"
            ],
            "mplskip": [
                "cls"
            ],
            "_skip_if_no_scipy": [],
            "_skip_if_no_pytz": [],
            "_skip_if_no_dateutil": [],
            "_skip_if_no_cday": [],
            "check_output": [],
            "_default_locale_getter": [],
            "get_locales": [
                "prefix",
                "normalize",
                "locale_getter"
            ],
            "set_locale": [
                "new_locale",
                "lc_var"
            ],
            "_can_set_locale": [
                "lc"
            ],
            "_valid_locales": [
                "locales",
                "normalize"
            ],
            "debug": [
                "f"
            ],
            "pudebug": [
                "f"
            ],
            "set_trace": [],
            "ensure_clean": [
                "filename",
                "return_filelike"
            ],
            "get_data_path": [
                "f"
            ],
            "equalContents": [
                "arr1",
                "arr2"
            ],
            "assert_isinstance": [
                "obj",
                "class_type_or_tuple",
                "msg"
            ],
            "assert_equal": [
                "a",
                "b",
                "msg"
            ],
            "assert_index_equal": [
                "left",
                "right"
            ],
            "assert_attr_equal": [
                "attr",
                "left",
                "right"
            ],
            "isiterable": [
                "obj"
            ],
            "is_sorted": [
                "seq"
            ],
            "assert_series_equal": [
                "left",
                "right",
                "check_dtype",
                "check_index_type",
                "check_series_type",
                "check_less_precise",
                "check_exact"
            ],
            "assert_frame_equal": [
                "left",
                "right",
                "check_dtype",
                "check_index_type",
                "check_column_type",
                "check_frame_type",
                "check_less_precise",
                "check_names",
                "by_blocks",
                "check_exact"
            ],
            "assert_panelnd_equal": [
                "left",
                "right",
                "check_panel_type",
                "check_less_precise",
                "assert_func"
            ],
            "assert_contains_all": [
                "iterable",
                "dic"
            ],
            "assert_copy": [
                "iter1",
                "iter2"
            ],
            "getCols": [
                "k"
            ],
            "getArangeMat": [],
            "makeStringIndex": [
                "k"
            ],
            "makeUnicodeIndex": [
                "k"
            ],
            "makeBoolIndex": [
                "k"
            ],
            "makeIntIndex": [
                "k"
            ],
            "makeFloatIndex": [
                "k"
            ],
            "makeDateIndex": [
                "k",
                "freq"
            ],
            "makeTimedeltaIndex": [
                "k",
                "freq"
            ],
            "makePeriodIndex": [
                "k"
            ],
            "makeFloatSeries": [],
            "makeStringSeries": [],
            "makeObjectSeries": [],
            "getSeriesData": [],
            "makeTimeSeries": [
                "nper",
                "freq"
            ],
            "makePeriodSeries": [
                "nper"
            ],
            "getTimeSeriesData": [
                "nper",
                "freq"
            ],
            "getPeriodData": [
                "nper"
            ],
            "makeTimeDataFrame": [
                "nper",
                "freq"
            ],
            "makeDataFrame": [],
            "getMixedTypeDict": [],
            "makeMixedDataFrame": [],
            "makePeriodFrame": [
                "nper"
            ],
            "makePanel": [
                "nper"
            ],
            "makePeriodPanel": [
                "nper"
            ],
            "makePanel4D": [
                "nper"
            ],
            "makeCustomIndex": [
                "nentries",
                "nlevels",
                "prefix",
                "names",
                "ndupe_l",
                "idx_type"
            ],
            "makeCustomDataframe": [
                "nrows",
                "ncols",
                "c_idx_names",
                "r_idx_names",
                "c_idx_nlevels",
                "r_idx_nlevels",
                "data_gen_f",
                "c_ndupe_l",
                "r_ndupe_l",
                "dtype",
                "c_idx_type",
                "r_idx_type"
            ],
            "_create_missing_idx": [
                "nrows",
                "ncols",
                "density",
                "random_state"
            ],
            "makeMissingCustomDataframe": [
                "nrows",
                "ncols",
                "density",
                "random_state",
                "c_idx_names",
                "r_idx_names",
                "c_idx_nlevels",
                "r_idx_nlevels",
                "data_gen_f",
                "c_ndupe_l",
                "r_ndupe_l",
                "dtype",
                "c_idx_type",
                "r_idx_type"
            ],
            "makeMissingDataframe": [
                "density",
                "random_state"
            ],
            "add_nans": [
                "panel"
            ],
            "add_nans_panel4d": [
                "panel4d"
            ],
            "package_check": [
                "pkg_name",
                "version",
                "app",
                "checker",
                "exc_failed_import",
                "exc_failed_check"
            ],
            "skip_if_no_package": [],
            "optional_args": [
                "decorator"
            ],
            "can_connect": [
                "url",
                "error_classes"
            ],
            "network": [
                "t",
                "url",
                "raise_on_error",
                "check_before_test",
                "error_classes",
                "skip_errnos",
                "_skip_on_messages"
            ],
            "stdin_encoding": [
                "encoding"
            ],
            "assertRaises": [
                "_exception",
                "_callable"
            ],
            "assertRaisesRegexp": [
                "_exception",
                "_regexp",
                "_callable"
            ],
            "assert_produces_warning": [
                "expected_warning",
                "filter_level"
            ],
            "skip_if_no_ne": [
                "engine"
            ],
            "disabled": [
                "t"
            ],
            "use_numexpr": [
                "use",
                "min_elements"
            ],
            "TestCase": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "reset_display_options": [
                    "self"
                ],
                "assert_numpy_array_equal": [
                    "self",
                    "np_array",
                    "assert_equal"
                ],
                "round_trip_pickle": [
                    "self",
                    "obj",
                    "path"
                ],
                "assert_numpy_array_equivalent": [
                    "self",
                    "np_array",
                    "assert_equal",
                    "strict_nan"
                ],
                "assert_categorical_equal": [
                    "self",
                    "res",
                    "exp"
                ],
                "assertIs": [
                    "self",
                    "first",
                    "second",
                    "msg"
                ],
                "assertIsNot": [
                    "self",
                    "first",
                    "second",
                    "msg"
                ],
                "assertIsNone": [
                    "self",
                    "expr",
                    "msg"
                ],
                "assertIsNotNone": [
                    "self",
                    "expr",
                    "msg"
                ],
                "assertIn": [
                    "self",
                    "first",
                    "second",
                    "msg"
                ],
                "assertNotIn": [
                    "self",
                    "first",
                    "second",
                    "msg"
                ],
                "assertIsInstance": [
                    "self",
                    "obj",
                    "cls",
                    "msg"
                ],
                "assertNotIsInstance": [
                    "self",
                    "obj",
                    "cls",
                    "msg"
                ],
                "assertRaises": [
                    "self",
                    "_exception",
                    "_callable"
                ],
                "assertRaisesRegexp": [
                    "self",
                    "_exception",
                    "_regexp",
                    "_callable"
                ]
            },
            "TestSubDict": {
                "__init__": [
                    "self"
                ]
            },
            "SimpleMock": {
                "__init__": [
                    "self",
                    "obj"
                ],
                "__getattribute__": [
                    "self",
                    "name"
                ]
            },
            "_AssertRaisesContextmanager": {
                "__init__": [
                    "self",
                    "exception",
                    "regexp"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ],
                "handle_failure": [],
                "handle_success": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ]
            },
            "RNGContext": {
                "__init__": [
                    "self",
                    "seed"
                ],
                "__enter__": [
                    "self"
                ],
                "__exit__": [
                    "self",
                    "exc_type",
                    "exc_value",
                    "traceback"
                ]
            }
        },
        "pandas.util.terminal": {
            "get_terminal_size": [],
            "_get_terminal_size_windows": [],
            "_get_terminal_size_tput": [],
            "_get_terminal_size_linux": []
        },
        "pandas.util.print_versions": {
            "get_sys_info": [],
            "show_versions": [
                "as_json"
            ],
            "main": []
        },
        "pandas.util.decorators": {
            "deprecate": [
                "name",
                "alternative",
                "alt_name"
            ],
            "deprecate_kwarg": [
                "old_arg_name",
                "new_arg_name",
                "mapping"
            ],
            "indent": [
                "text",
                "indents"
            ],
            "suppress_stdout": [
                "f"
            ],
            "knownfailureif": [
                "fail_condition",
                "msg"
            ],
            "make_signature": [
                "func"
            ],
            "Substitution": {
                "__init__": [
                    "self"
                ],
                "__call__": [
                    "self",
                    "func"
                ],
                "update": [
                    "self"
                ],
                "from_params": [
                    "cls",
                    "params"
                ]
            },
            "Appender": {
                "__init__": [
                    "self",
                    "addendum",
                    "join",
                    "indents"
                ],
                "__call__": [
                    "self",
                    "func"
                ]
            },
            "KnownFailureTest": {}
        },
        "pandas.util.clipboard": {
            "winGetClipboard": [],
            "winSetClipboard": [
                "text"
            ],
            "macSetClipboard": [
                "text"
            ],
            "macGetClipboard": [],
            "gtkGetClipboard": [],
            "gtkSetClipboard": [
                "text"
            ],
            "qtGetClipboard": [],
            "qtSetClipboard": [
                "text"
            ],
            "xclipSetClipboard": [
                "text"
            ],
            "xclipGetClipboard": [],
            "xselSetClipboard": [
                "text"
            ],
            "xselGetClipboard": [],
            "NoClipboardProgramError": {}
        },
        "pandas.util": {},
        "pandas.tools.pivot": {
            "pivot_table": [
                "data",
                "values",
                "index",
                "columns",
                "aggfunc",
                "fill_value",
                "margins",
                "dropna"
            ],
            "_add_margins": [
                "table",
                "data",
                "values",
                "rows",
                "cols",
                "aggfunc"
            ],
            "_compute_grand_margin": [
                "data",
                "values",
                "aggfunc"
            ],
            "_generate_marginal_results": [
                "table",
                "data",
                "values",
                "rows",
                "cols",
                "aggfunc",
                "grand_margin"
            ],
            "_generate_marginal_results_without_values": [
                "table",
                "data",
                "rows",
                "cols",
                "aggfunc"
            ],
            "_convert_by": [
                "by"
            ],
            "crosstab": [
                "index",
                "columns",
                "values",
                "rownames",
                "colnames",
                "aggfunc",
                "margins",
                "dropna"
            ],
            "_get_names": [
                "arrs",
                "names",
                "prefix"
            ]
        },
        "pandas.tools.plotting": {
            "_get_standard_kind": [
                "kind"
            ],
            "_get_standard_colors": [
                "num_colors",
                "colormap",
                "color_type",
                "color"
            ],
            "scatter_matrix": [
                "frame",
                "alpha",
                "figsize",
                "ax",
                "grid",
                "diagonal",
                "marker",
                "density_kwds",
                "hist_kwds",
                "range_padding"
            ],
            "_label_axis": [
                "ax",
                "kind",
                "label",
                "position",
                "ticks",
                "rotate"
            ],
            "_gca": [],
            "_gcf": [],
            "_get_marker_compat": [
                "marker"
            ],
            "radviz": [
                "frame",
                "class_column",
                "ax",
                "color",
                "colormap"
            ],
            "andrews_curves": [
                "frame",
                "class_column",
                "ax",
                "samples",
                "color",
                "colormap"
            ],
            "bootstrap_plot": [
                "series",
                "fig",
                "size",
                "samples"
            ],
            "parallel_coordinates": [
                "frame",
                "class_column",
                "cols",
                "ax",
                "color",
                "use_columns",
                "xticks",
                "colormap"
            ],
            "lag_plot": [
                "series",
                "lag",
                "ax"
            ],
            "autocorrelation_plot": [
                "series",
                "ax"
            ],
            "_plot": [
                "data",
                "x",
                "y",
                "subplots",
                "ax",
                "kind"
            ],
            "plot_frame": [
                "data",
                "x",
                "y",
                "kind",
                "ax",
                "subplots",
                "sharex",
                "sharey",
                "layout",
                "figsize",
                "use_index",
                "title",
                "grid",
                "legend",
                "style",
                "logx",
                "logy",
                "loglog",
                "xticks",
                "yticks",
                "xlim",
                "ylim",
                "rot",
                "fontsize",
                "colormap",
                "table",
                "yerr",
                "xerr",
                "secondary_y",
                "sort_columns"
            ],
            "plot_series": [
                "data",
                "kind",
                "ax",
                "figsize",
                "use_index",
                "title",
                "grid",
                "legend",
                "style",
                "logx",
                "logy",
                "loglog",
                "xticks",
                "yticks",
                "xlim",
                "ylim",
                "rot",
                "fontsize",
                "colormap",
                "table",
                "yerr",
                "xerr",
                "label",
                "secondary_y"
            ],
            "boxplot": [
                "data",
                "column",
                "by",
                "ax",
                "fontsize",
                "rot",
                "grid",
                "figsize",
                "layout",
                "return_type"
            ],
            "format_date_labels": [
                "ax",
                "rot"
            ],
            "scatter_plot": [
                "data",
                "x",
                "y",
                "by",
                "ax",
                "figsize",
                "grid"
            ],
            "hist_frame": [
                "data",
                "column",
                "by",
                "grid",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot",
                "ax",
                "sharex",
                "sharey",
                "figsize",
                "layout",
                "bins"
            ],
            "hist_series": [
                "self",
                "by",
                "ax",
                "grid",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot",
                "figsize",
                "bins"
            ],
            "grouped_hist": [
                "data",
                "column",
                "by",
                "ax",
                "bins",
                "figsize",
                "layout",
                "sharex",
                "sharey",
                "rot",
                "grid",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot"
            ],
            "boxplot_frame_groupby": [
                "grouped",
                "subplots",
                "column",
                "fontsize",
                "rot",
                "grid",
                "ax",
                "figsize",
                "layout"
            ],
            "_grouped_plot": [
                "plotf",
                "data",
                "column",
                "by",
                "numeric_only",
                "figsize",
                "sharex",
                "sharey",
                "layout",
                "rot",
                "ax"
            ],
            "_grouped_plot_by_column": [
                "plotf",
                "data",
                "columns",
                "by",
                "numeric_only",
                "grid",
                "figsize",
                "ax",
                "layout",
                "return_type"
            ],
            "table": [
                "ax",
                "data",
                "rowLabels",
                "colLabels"
            ],
            "_get_layout": [
                "nplots",
                "layout",
                "layout_type"
            ],
            "_subplots": [
                "naxes",
                "sharex",
                "sharey",
                "squeeze",
                "subplot_kw",
                "ax",
                "layout",
                "layout_type"
            ],
            "_flatten": [
                "axes"
            ],
            "_get_all_lines": [
                "ax"
            ],
            "_get_xlim": [
                "lines"
            ],
            "_set_ticks_props": [
                "axes",
                "xlabelsize",
                "xrot",
                "ylabelsize",
                "yrot"
            ],
            "_Options": {
                "__init__": [
                    "self"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "reset": [
                    "self"
                ],
                "_get_canonical_key": [
                    "self",
                    "key"
                ],
                "use": [
                    "self",
                    "key",
                    "value"
                ]
            },
            "MPLPlot": {
                "__init__": [
                    "self",
                    "data",
                    "kind",
                    "by",
                    "subplots",
                    "sharex",
                    "sharey",
                    "use_index",
                    "figsize",
                    "grid",
                    "legend",
                    "rot",
                    "ax",
                    "fig",
                    "title",
                    "xlim",
                    "ylim",
                    "xticks",
                    "yticks",
                    "sort_columns",
                    "fontsize",
                    "secondary_y",
                    "colormap",
                    "table",
                    "layout"
                ],
                "_validate_color_args": [
                    "self"
                ],
                "_iter_data": [
                    "self",
                    "data",
                    "keep_index",
                    "fillna"
                ],
                "nseries": [
                    "self"
                ],
                "draw": [
                    "self"
                ],
                "generate": [
                    "self"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_maybe_right_yaxis": [
                    "self",
                    "ax"
                ],
                "_setup_subplots": [
                    "self"
                ],
                "result": [
                    "self"
                ],
                "_compute_plot_data": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_add_table": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ],
                "_adorn_subplots": [
                    "self"
                ],
                "_apply_axis_properties": [
                    "self",
                    "axis",
                    "rot",
                    "fontsize"
                ],
                "legend_title": [
                    "self"
                ],
                "_add_legend_handle": [
                    "self",
                    "handle",
                    "label",
                    "index"
                ],
                "_make_legend": [
                    "self"
                ],
                "_get_ax_legend": [
                    "self",
                    "ax"
                ],
                "plt": [
                    "self"
                ],
                "_get_xticks": [
                    "self",
                    "convert_period"
                ],
                "_is_datetype": [
                    "self"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_get_index_name": [
                    "self"
                ],
                "_get_ax": [
                    "self",
                    "i"
                ],
                "on_right": [
                    "self",
                    "i"
                ],
                "_get_style": [
                    "self",
                    "i",
                    "col_name"
                ],
                "_get_colors": [
                    "self",
                    "num_colors",
                    "color_kwds"
                ],
                "_maybe_add_color": [
                    "self",
                    "colors",
                    "kwds",
                    "style",
                    "i"
                ],
                "_parse_errorbars": [
                    "self",
                    "label",
                    "err"
                ],
                "_get_errorbars": [
                    "self",
                    "label",
                    "index",
                    "xerr",
                    "yerr"
                ]
            },
            "ScatterPlot": {
                "__init__": [
                    "self",
                    "data",
                    "x",
                    "y",
                    "c"
                ],
                "nseries": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "HexBinPlot": {
                "__init__": [
                    "self",
                    "data",
                    "x",
                    "y",
                    "C"
                ],
                "nseries": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "LinePlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_index_freq": [
                    "self"
                ],
                "_is_dynamic_freq": [
                    "self",
                    "freq"
                ],
                "_no_base": [
                    "self",
                    "freq"
                ],
                "_use_dynamic_x": [
                    "self"
                ],
                "_is_ts_plot": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_get_stacked_values": [
                    "self",
                    "y",
                    "label"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_get_ts_plot_function": [
                    "self"
                ],
                "_initialize_prior": [
                    "self",
                    "n"
                ],
                "_update_prior": [
                    "self",
                    "y"
                ],
                "_maybe_convert_index": [
                    "self",
                    "data"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "AreaPlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_add_legend_handle": [
                    "self",
                    "handle",
                    "label",
                    "index"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "BarPlot": {
                "__init__": [
                    "self",
                    "data"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ],
                "orientation": [
                    "self"
                ]
            },
            "HistPlot": {
                "__init__": [
                    "self",
                    "data",
                    "bins",
                    "bottom"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ],
                "orientation": [
                    "self"
                ]
            },
            "KdePlot": {
                "__init__": [
                    "self",
                    "data",
                    "bw_method",
                    "ind"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_get_ind": [
                    "self",
                    "y"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_post_plot_logic": [
                    "self"
                ]
            },
            "PiePlot": {
                "__init__": [
                    "self",
                    "data",
                    "kind"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_validate_color_args": [
                    "self"
                ],
                "_make_plot": [
                    "self"
                ]
            },
            "BoxPlot": {
                "__init__": [
                    "self",
                    "data",
                    "return_type"
                ],
                "_args_adjust": [
                    "self"
                ],
                "_get_plot_function": [
                    "self"
                ],
                "_validate_color_args": [
                    "self"
                ],
                "_get_colors": [
                    "self",
                    "num_colors",
                    "color_kwds"
                ],
                "maybe_color_bp": [
                    "self",
                    "bp"
                ],
                "_make_plot": [
                    "self"
                ],
                "_set_ticklabels": [
                    "self",
                    "ax",
                    "labels"
                ],
                "_post_plot_logic": [
                    "self"
                ],
                "orientation": [
                    "self"
                ],
                "result": [
                    "self"
                ]
            }
        },
        "pandas.tools.merge": {
            "merge": [
                "left",
                "right",
                "how",
                "on",
                "left_on",
                "right_on",
                "left_index",
                "right_index",
                "sort",
                "suffixes",
                "copy"
            ],
            "ordered_merge": [
                "left",
                "right",
                "on",
                "left_by",
                "right_by",
                "left_on",
                "right_on",
                "fill_method",
                "suffixes"
            ],
            "_get_join_indexers": [
                "left_keys",
                "right_keys",
                "sort",
                "how"
            ],
            "_get_multiindex_indexer": [
                "join_keys",
                "index",
                "sort"
            ],
            "_get_single_indexer": [
                "join_key",
                "index",
                "sort"
            ],
            "_left_join_on_index": [
                "left_ax",
                "right_ax",
                "join_keys",
                "sort"
            ],
            "_right_outer_join": [
                "x",
                "y",
                "max_groups"
            ],
            "_factorize_keys": [
                "lk",
                "rk",
                "sort"
            ],
            "_sort_labels": [
                "uniques",
                "left",
                "right"
            ],
            "concat": [
                "objs",
                "axis",
                "join",
                "join_axes",
                "ignore_index",
                "keys",
                "levels",
                "names",
                "verify_integrity",
                "copy"
            ],
            "_concat_indexes": [
                "indexes"
            ],
            "_make_concat_multiindex": [
                "indexes",
                "keys",
                "levels",
                "names"
            ],
            "_should_fill": [
                "lname",
                "rname"
            ],
            "_any": [
                "x"
            ],
            "MergeError": {},
            "_MergeOperation": {
                "__init__": [
                    "self",
                    "left",
                    "right",
                    "how",
                    "on",
                    "left_on",
                    "right_on",
                    "axis",
                    "left_index",
                    "right_index",
                    "sort",
                    "suffixes",
                    "copy"
                ],
                "get_result": [
                    "self"
                ],
                "_maybe_add_join_keys": [
                    "self",
                    "result",
                    "left_indexer",
                    "right_indexer"
                ],
                "_get_join_info": [
                    "self"
                ],
                "_get_merge_data": [
                    "self"
                ],
                "_get_merge_keys": [
                    "self"
                ],
                "_validate_specification": [
                    "self"
                ]
            },
            "_OrderedMerge": {
                "__init__": [
                    "self",
                    "left",
                    "right",
                    "on",
                    "by",
                    "left_on",
                    "right_on",
                    "axis",
                    "left_index",
                    "right_index",
                    "suffixes",
                    "copy",
                    "fill_method"
                ],
                "get_result": [
                    "self"
                ]
            },
            "_Concatenator": {
                "__init__": [
                    "self",
                    "objs",
                    "axis",
                    "join",
                    "join_axes",
                    "keys",
                    "levels",
                    "names",
                    "ignore_index",
                    "verify_integrity",
                    "copy"
                ],
                "get_result": [
                    "self"
                ],
                "_get_result_dim": [
                    "self"
                ],
                "_get_new_axes": [
                    "self"
                ],
                "_get_comb_axis": [
                    "self",
                    "i"
                ],
                "_get_concat_axis": [
                    "self"
                ],
                "_maybe_check_integrity": [
                    "self",
                    "concat_index"
                ]
            }
        },
        "pandas.tools.tile": {
            "cut": [
                "x",
                "bins",
                "right",
                "labels",
                "retbins",
                "precision",
                "include_lowest"
            ],
            "qcut": [
                "x",
                "q",
                "labels",
                "retbins",
                "precision"
            ],
            "_bins_to_cuts": [
                "x",
                "bins",
                "right",
                "labels",
                "retbins",
                "precision",
                "name",
                "include_lowest"
            ],
            "_format_levels": [
                "bins",
                "prec",
                "right",
                "include_lowest"
            ],
            "_format_label": [
                "x",
                "precision"
            ],
            "_trim_zeros": [
                "x"
            ]
        },
        "pandas.tools.rplot": {
            "default_aes": [
                "x",
                "y"
            ],
            "make_aes": [
                "x",
                "y",
                "size",
                "colour",
                "shape",
                "alpha"
            ],
            "dictionary_union": [
                "dict1",
                "dict2"
            ],
            "merge_aes": [
                "layer1",
                "layer2"
            ],
            "sequence_layers": [
                "layers"
            ],
            "sequence_grids": [
                "layer_grids"
            ],
            "work_grid": [
                "grid",
                "fig"
            ],
            "adjust_subplots": [
                "fig",
                "axes",
                "trellis",
                "layers"
            ],
            "Scale": {},
            "ScaleGradient": {
                "__init__": [
                    "self",
                    "column",
                    "colour1",
                    "colour2"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "ScaleGradient2": {
                "__init__": [
                    "self",
                    "column",
                    "colour1",
                    "colour2",
                    "colour3"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "ScaleSize": {
                "__init__": [
                    "self",
                    "column",
                    "min_size",
                    "max_size",
                    "transform"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "ScaleShape": {
                "__init__": [
                    "self",
                    "column"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "ScaleRandomColour": {
                "__init__": [
                    "self",
                    "column"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "ScaleConstant": {
                "__init__": [
                    "self",
                    "value"
                ],
                "__call__": [
                    "self",
                    "data",
                    "index"
                ]
            },
            "Layer": {
                "__init__": [
                    "self",
                    "data"
                ],
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomPoint": {
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomPolyFit": {
                "__init__": [
                    "self",
                    "degree",
                    "lw",
                    "colour"
                ],
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomScatter": {
                "__init__": [
                    "self",
                    "marker",
                    "colour",
                    "alpha"
                ],
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomHistogram": {
                "__init__": [
                    "self",
                    "bins",
                    "colour"
                ],
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomDensity": {
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "GeomDensity2D": {
                "work": [
                    "self",
                    "fig",
                    "ax"
                ]
            },
            "TrellisGrid": {
                "__init__": [
                    "self",
                    "by"
                ],
                "trellis": [
                    "self",
                    "layers"
                ]
            },
            "RPlot": {
                "__init__": [
                    "self",
                    "data",
                    "x",
                    "y"
                ],
                "add": [
                    "self",
                    "layer"
                ],
                "render": [
                    "self",
                    "fig"
                ]
            }
        },
        "pandas.tools.util": {
            "match": [
                "needles",
                "haystack"
            ],
            "cartesian_product": [
                "X"
            ],
            "_compose2": [
                "f",
                "g"
            ],
            "compose": [],
            "value_range": [
                "df"
            ]
        },
        "pandas.tools": {},
        "pandas.tools.tests.test_util": {
            "TestCartesianProduct": {
                "test_simple": [
                    "self"
                ],
                "test_datetimeindex": [
                    "self"
                ]
            },
            "TestLocaleUtils": {
                "setUpClass": [
                    "cls"
                ],
                "tearDownClass": [
                    "cls"
                ],
                "test_get_locales": [
                    "self"
                ],
                "test_get_locales_prefix": [
                    "self"
                ],
                "test_set_locale": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests.test_pivot": {
            "TestPivotTable": {
                "setUp": [
                    "self"
                ],
                "test_pivot_table": [
                    "self"
                ],
                "test_pivot_table_warnings": [
                    "self"
                ],
                "test_pivot_table_nocols": [
                    "self"
                ],
                "test_pivot_table_dropna": [
                    "self"
                ],
                "test_pass_array": [
                    "self"
                ],
                "test_pass_function": [
                    "self"
                ],
                "test_pivot_table_multiple": [
                    "self"
                ],
                "test_pivot_dtypes": [
                    "self"
                ],
                "test_pivot_multi_values": [
                    "self"
                ],
                "test_pivot_multi_functions": [
                    "self"
                ],
                "test_pivot_index_with_nan": [
                    "self"
                ],
                "test_pivot_with_tz": [
                    "self"
                ],
                "test_margins": [
                    "self"
                ],
                "test_pivot_integer_columns": [
                    "self"
                ],
                "test_pivot_no_level_overlap": [
                    "self"
                ],
                "test_pivot_columns_lexsorted": [
                    "self"
                ],
                "test_pivot_complex_aggfunc": [
                    "self"
                ],
                "test_margins_no_values_no_cols": [
                    "self"
                ],
                "test_margins_no_values_two_rows": [
                    "self"
                ],
                "test_margins_no_values_one_row_one_col": [
                    "self"
                ],
                "test_margins_no_values_two_row_two_cols": [
                    "self"
                ],
                "test_pivot_timegrouper": [
                    "self"
                ],
                "test_pivot_datetime_tz": [
                    "self"
                ],
                "test_pivot_dtaccessor": [
                    "self"
                ]
            },
            "TestCrosstab": {
                "setUp": [
                    "self"
                ],
                "test_crosstab_single": [
                    "self"
                ],
                "test_crosstab_multiple": [
                    "self"
                ],
                "test_crosstab_ndarray": [
                    "self"
                ],
                "test_crosstab_margins": [
                    "self"
                ],
                "test_crosstab_pass_values": [
                    "self"
                ],
                "test_crosstab_dropna": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests.test_tile": {
            "curpath": [],
            "TestCut": {
                "test_simple": [
                    "self"
                ],
                "test_bins": [
                    "self"
                ],
                "test_right": [
                    "self"
                ],
                "test_noright": [
                    "self"
                ],
                "test_arraylike": [
                    "self"
                ],
                "test_bins_not_monotonic": [
                    "self"
                ],
                "test_wrong_num_labels": [
                    "self"
                ],
                "test_cut_corner": [
                    "self"
                ],
                "test_cut_out_of_range_more": [
                    "self"
                ],
                "test_labels": [
                    "self"
                ],
                "test_cut_pass_series_name_to_factor": [
                    "self"
                ],
                "test_label_precision": [
                    "self"
                ],
                "test_na_handling": [
                    "self"
                ],
                "test_inf_handling": [
                    "self"
                ],
                "test_qcut": [
                    "self"
                ],
                "test_qcut_bounds": [
                    "self"
                ],
                "test_qcut_specify_quantiles": [
                    "self"
                ],
                "test_qcut_all_bins_same": [
                    "self"
                ],
                "test_cut_out_of_bounds": [
                    "self"
                ],
                "test_cut_pass_labels": [
                    "self"
                ],
                "test_qcut_include_lowest": [
                    "self"
                ],
                "test_qcut_nas": [
                    "self"
                ],
                "test_label_formatting": [
                    "self"
                ],
                "test_qcut_binning_issues": [
                    "self"
                ],
                "test_cut_return_categorical": [
                    "self"
                ],
                "test_qcut_return_categorical": [
                    "self"
                ],
                "test_series_retbins": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests.test_merge": {
            "get_test_data": [
                "ngroups",
                "n"
            ],
            "_check_merge": [
                "x",
                "y"
            ],
            "_check_join": [
                "left",
                "right",
                "result",
                "join_col",
                "how",
                "lsuffix",
                "rsuffix"
            ],
            "_restrict_to_columns": [
                "group",
                "columns",
                "suffix"
            ],
            "_assert_same_contents": [
                "join_chunk",
                "source"
            ],
            "_assert_all_na": [
                "join_chunk",
                "source_columns",
                "join_col"
            ],
            "_join_by_hand": [
                "a",
                "b",
                "how"
            ],
            "TestMerge": {
                "setUp": [
                    "self"
                ],
                "test_cython_left_outer_join": [
                    "self"
                ],
                "test_cython_right_outer_join": [
                    "self"
                ],
                "test_cython_inner_join": [
                    "self"
                ],
                "test_left_outer_join": [
                    "self"
                ],
                "test_right_outer_join": [
                    "self"
                ],
                "test_full_outer_join": [
                    "self"
                ],
                "test_inner_join": [
                    "self"
                ],
                "test_handle_overlap": [
                    "self"
                ],
                "test_handle_overlap_arbitrary_key": [
                    "self"
                ],
                "test_merge_common": [
                    "self"
                ],
                "test_join_on": [
                    "self"
                ],
                "test_join_on_fails_with_different_right_index": [
                    "self"
                ],
                "test_join_on_fails_with_different_left_index": [
                    "self"
                ],
                "test_join_on_fails_with_different_column_counts": [
                    "self"
                ],
                "test_join_on_pass_vector": [
                    "self"
                ],
                "test_join_with_len0": [
                    "self"
                ],
                "test_join_on_inner": [
                    "self"
                ],
                "test_join_on_singlekey_list": [
                    "self"
                ],
                "test_join_on_series": [
                    "self"
                ],
                "test_join_on_series_buglet": [
                    "self"
                ],
                "test_join_index_mixed": [
                    "self"
                ],
                "test_join_empty_bug": [
                    "self"
                ],
                "test_join_unconsolidated": [
                    "self"
                ],
                "test_join_multiindex": [
                    "self"
                ],
                "test_join_inner_multiindex": [
                    "self"
                ],
                "test_join_hierarchical_mixed": [
                    "self"
                ],
                "test_join_float64_float32": [
                    "self"
                ],
                "test_join_many_non_unique_index": [
                    "self"
                ],
                "test_merge_index_singlekey_right_vs_left": [
                    "self"
                ],
                "test_merge_index_singlekey_inner": [
                    "self"
                ],
                "test_merge_misspecified": [
                    "self"
                ],
                "test_merge_overlap": [
                    "self"
                ],
                "test_merge_different_column_key_names": [
                    "self"
                ],
                "test_merge_copy": [
                    "self"
                ],
                "test_merge_nocopy": [
                    "self"
                ],
                "test_join_sort": [
                    "self"
                ],
                "test_intelligently_handle_join_key": [
                    "self"
                ],
                "test_handle_join_key_pass_array": [
                    "self"
                ],
                "test_mixed_type_join_with_suffix": [
                    "self"
                ],
                "test_no_overlap_more_informative_error": [
                    "self"
                ],
                "test_merge_non_unique_indexes": [
                    "self"
                ],
                "test_merge_non_unique_index_many_to_many": [
                    "self"
                ],
                "test_left_merge_empty_dataframe": [
                    "self"
                ],
                "test_merge_nosort": [
                    "self"
                ],
                "test_merge_nan_right": [
                    "self"
                ],
                "test_merge_type": [
                    "self"
                ],
                "test_append_dtype_coerce": [
                    "self"
                ],
                "test_join_append_timedeltas": [
                    "self"
                ],
                "test_overlapping_columns_error_message": [
                    "self"
                ]
            },
            "TestMergeMulti": {
                "setUp": [
                    "self"
                ],
                "test_merge_on_multikey": [
                    "self"
                ],
                "test_merge_right_vs_left": [
                    "self"
                ],
                "test_compress_group_combinations": [
                    "self"
                ],
                "test_left_join_index_preserve_order": [
                    "self"
                ],
                "test_left_join_index_multi_match_multiindex": [
                    "self"
                ],
                "test_left_join_index_multi_match": [
                    "self"
                ],
                "test_join_multi_dtypes": [
                    "self"
                ],
                "test_left_merge_na_buglet": [
                    "self"
                ],
                "test_merge_na_keys": [
                    "self"
                ],
                "test_int64_overflow_issues": [
                    "self"
                ],
                "test_join_multi_levels": [
                    "self"
                ],
                "test_join_multi_levels2": [
                    "self"
                ]
            },
            "TestConcatenate": {
                "setUp": [
                    "self"
                ],
                "test_append": [
                    "self"
                ],
                "test_append_length0_frame": [
                    "self"
                ],
                "test_append_records": [
                    "self"
                ],
                "test_append_different_columns": [
                    "self"
                ],
                "test_append_many": [
                    "self"
                ],
                "test_append_preserve_index_name": [
                    "self"
                ],
                "test_join_many": [
                    "self"
                ],
                "test_join_many_mixed": [
                    "self"
                ],
                "test_append_missing_column_proper_upcast": [
                    "self"
                ],
                "test_concat_copy": [
                    "self"
                ],
                "test_concat_with_group_keys": [
                    "self"
                ],
                "test_concat_keys_specific_levels": [
                    "self"
                ],
                "test_concat_dataframe_keys_bug": [
                    "self"
                ],
                "test_concat_dict": [
                    "self"
                ],
                "test_concat_ignore_index": [
                    "self"
                ],
                "test_concat_multiindex_with_keys": [
                    "self"
                ],
                "test_concat_multiindex_with_tz": [
                    "self"
                ],
                "test_concat_keys_and_levels": [
                    "self"
                ],
                "test_concat_keys_levels_no_overlap": [
                    "self"
                ],
                "test_concat_rename_index": [
                    "self"
                ],
                "test_crossed_dtypes_weird_corner": [
                    "self"
                ],
                "test_dups_index": [
                    "self"
                ],
                "test_join_dups": [
                    "self"
                ],
                "test_handle_empty_objects": [
                    "self"
                ],
                "test_concat_mixed_objs": [
                    "self"
                ],
                "test_panel_join": [
                    "self"
                ],
                "test_panel_join_overlap": [
                    "self"
                ],
                "test_panel_join_many": [
                    "self"
                ],
                "test_panel_concat_other_axes": [
                    "self"
                ],
                "test_panel_concat_buglet": [
                    "self"
                ],
                "test_panel4d_concat": [
                    "self"
                ],
                "test_panel4d_concat_mixed_type": [
                    "self"
                ],
                "test_concat_series": [
                    "self"
                ],
                "test_concat_series_axis1": [
                    "self"
                ],
                "test_concat_single_with_key": [
                    "self"
                ],
                "test_concat_exclude_none": [
                    "self"
                ],
                "test_concat_datetime64_block": [
                    "self"
                ],
                "test_concat_timedelta64_block": [
                    "self"
                ],
                "test_concat_keys_with_none": [
                    "self"
                ],
                "test_concat_bug_1719": [
                    "self"
                ],
                "test_concat_bug_2972": [
                    "self"
                ],
                "test_concat_bug_3602": [
                    "self"
                ],
                "test_concat_series_axis1_same_names_ignore_index": [
                    "self"
                ],
                "test_concat_iterables": [
                    "self"
                ],
                "test_concat_invalid": [
                    "self"
                ],
                "test_concat_invalid_first_argument": [
                    "self"
                ]
            },
            "TestOrderedMerge": {
                "setUp": [
                    "self"
                ],
                "test_basic": [
                    "self"
                ],
                "test_ffill": [
                    "self"
                ],
                "test_multigroup": [
                    "self"
                ],
                "test_merge_type": [
                    "self"
                ]
            }
        },
        "pandas.tools.tests": {},
        "pandas.compat.openpyxl_compat": {
            "is_compat": [
                "major_ver"
            ]
        },
        "pandas.compat.pickle_compat": {
            "load_reduce": [
                "self"
            ],
            "load_newobj": [
                "self"
            ],
            "load_newobj_ex": [
                "self"
            ],
            "load": [
                "fh",
                "encoding",
                "compat",
                "is_verbose"
            ]
        },
        "pandas.compat.chainmap_impl": {
            "recursive_repr": [
                "fillvalue"
            ],
            "ChainMap": {
                "__init__": [
                    "self"
                ],
                "__missing__": [
                    "self",
                    "key"
                ],
                "__getitem__": [
                    "self",
                    "key"
                ],
                "get": [
                    "self",
                    "key",
                    "default"
                ],
                "__len__": [
                    "self"
                ],
                "__iter__": [
                    "self"
                ],
                "__contains__": [
                    "self",
                    "key"
                ],
                "__bool__": [
                    "self"
                ],
                "__repr__": [
                    "self"
                ],
                "fromkeys": [
                    "cls",
                    "iterable"
                ],
                "copy": [
                    "self"
                ],
                "new_child": [
                    "self",
                    "m"
                ],
                "parents": [
                    "self"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "popitem": [
                    "self"
                ],
                "pop": [
                    "self",
                    "key"
                ],
                "clear": [
                    "self"
                ]
            }
        },
        "pandas.compat.chainmap": {
            "DeepChainMap": {
                "__setitem__": [
                    "self",
                    "key",
                    "value"
                ],
                "__delitem__": [
                    "self",
                    "key"
                ],
                "new_child": [
                    "self",
                    "m"
                ]
            }
        },
        "pandas.compat": {
            "iteritems": [
                "obj"
            ],
            "iterkeys": [
                "obj"
            ],
            "itervalues": [
                "obj"
            ],
            "bind_method": [
                "cls",
                "name",
                "func"
            ],
            "add_metaclass": [
                "metaclass"
            ],
            "_OrderedDict": {
                "__init__": [
                    "self"
                ],
                "__setitem__": [
                    "self",
                    "key",
                    "value",
                    "dict_setitem"
                ],
                "__delitem__": [
                    "self",
                    "key",
                    "dict_delitem"
                ],
                "__iter__": [
                    "self"
                ],
                "__reversed__": [
                    "self"
                ],
                "clear": [
                    "self"
                ],
                "popitem": [
                    "self",
                    "last"
                ],
                "keys": [
                    "self"
                ],
                "values": [
                    "self"
                ],
                "items": [
                    "self"
                ],
                "iterkeys": [
                    "self"
                ],
                "itervalues": [
                    "self"
                ],
                "iteritems": [
                    "self"
                ],
                "update": [],
                "pop": [
                    "self",
                    "key",
                    "default"
                ],
                "setdefault": [
                    "self",
                    "key",
                    "default"
                ],
                "__repr__": [
                    "self",
                    "_repr_running"
                ],
                "__reduce__": [
                    "self"
                ],
                "copy": [
                    "self"
                ],
                "fromkeys": [
                    "cls",
                    "iterable",
                    "value"
                ],
                "__eq__": [
                    "self",
                    "other"
                ],
                "__ne__": [
                    "self",
                    "other"
                ],
                "viewkeys": [
                    "self"
                ],
                "viewvalues": [
                    "self"
                ],
                "viewitems": [
                    "self"
                ]
            },
            "_Counter": {
                "__init__": [
                    "self",
                    "iterable"
                ],
                "__missing__": [
                    "self",
                    "key"
                ],
                "most_common": [
                    "self",
                    "n"
                ],
                "elements": [
                    "self"
                ],
                "fromkeys": [
                    "cls",
                    "iterable",
                    "v"
                ],
                "update": [
                    "self",
                    "iterable"
                ],
                "copy": [
                    "self"
                ],
                "__delitem__": [
                    "self",
                    "elem"
                ],
                "__repr__": [
                    "self"
                ],
                "__add__": [
                    "self",
                    "other"
                ],
                "__sub__": [
                    "self",
                    "other"
                ],
                "__or__": [
                    "self",
                    "other"
                ],
                "__and__": [
                    "self",
                    "other"
                ]
            },
            "OrderedDefaultdict": {
                "__init__": [
                    "self"
                ],
                "__missing__": [
                    "self",
                    "key"
                ],
                "__reduce__": [
                    "self"
                ]
            }
        }
    }
}